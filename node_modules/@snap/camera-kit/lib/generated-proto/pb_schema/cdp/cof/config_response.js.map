{"version":3,"file":"config_response.js","sourceRoot":"","sources":["../../../../../src/generated-proto/pb_schema/cdp/cof/config_response.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { ConfigResult } from \"./config_result\";\nimport { BenchmarkRequest } from \"./benchmark\";\n\nexport const protobufPackage = \"snapchat.cdp.cof\";\n\n/** ConfigTargetingResponseDebugData contains debug information for the ConfigTargetingResponse */\nexport interface ConfigTargetingResponseDebugData {\n  /** input used to calculate ab_result_checksum */\n  abResultChecksumInput: string;\n}\n\nexport interface ConfigTargetingResponse {\n  /**\n   * A list of configs.  For the configs that have a fully evaluated targeting expression there\n   * will be only one config per id.\n   * For the configs that rely on client side evaluation there can be multiple per id.\n   */\n  configResults: ConfigResult[];\n  /** The etag for caching the config results when it's not changed. */\n  configResultsEtag: string;\n  /** Benchmarks a client is requested to execute. */\n  benchmarkRequest: BenchmarkRequest | undefined;\n  /**\n   * Indicates the result is the full snapshot even though a delta sync is requested\n   * The client should delete any config rules not in the response from the DB.\n   */\n  fullResults: boolean;\n  /**\n   * The checksum calculated for ab related configs.\n   * If the checksum is < 0 clients should not use AB data\n   * If the checksum is == 0 clients should not perform a checksum on the result\n   * If the checksum is > 0 clients should perform a checksum on the result and only use\n   *   the resulting AB data if the checksum matches\n   */\n  abResultChecksum: number;\n  /** ip_based_country_code used for AllUpdates Annihilation. */\n  iso3166Alpha2CountryCodeFromRequestIp: string;\n  /** debug data is only available for internal traffic and enabled per request */\n  debugData: ConfigTargetingResponseDebugData | undefined;\n}\n\nfunction createBaseConfigTargetingResponseDebugData(): ConfigTargetingResponseDebugData {\n  return { abResultChecksumInput: \"\" };\n}\n\nexport const ConfigTargetingResponseDebugData = {\n  encode(message: ConfigTargetingResponseDebugData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.abResultChecksumInput !== \"\") {\n      writer.uint32(10).string(message.abResultChecksumInput);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ConfigTargetingResponseDebugData {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseConfigTargetingResponseDebugData();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.abResultChecksumInput = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ConfigTargetingResponseDebugData>, I>>(\n    object: I\n  ): ConfigTargetingResponseDebugData {\n    const message = createBaseConfigTargetingResponseDebugData();\n    message.abResultChecksumInput = object.abResultChecksumInput ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseConfigTargetingResponse(): ConfigTargetingResponse {\n  return {\n    configResults: [],\n    configResultsEtag: \"\",\n    benchmarkRequest: undefined,\n    fullResults: false,\n    abResultChecksum: 0,\n    iso3166Alpha2CountryCodeFromRequestIp: \"\",\n    debugData: undefined,\n  };\n}\n\nexport const ConfigTargetingResponse = {\n  encode(message: ConfigTargetingResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.configResults) {\n      ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.configResultsEtag !== \"\") {\n      writer.uint32(18).string(message.configResultsEtag);\n    }\n    if (message.benchmarkRequest !== undefined) {\n      BenchmarkRequest.encode(message.benchmarkRequest, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.fullResults === true) {\n      writer.uint32(32).bool(message.fullResults);\n    }\n    if (message.abResultChecksum !== 0) {\n      writer.uint32(40).int32(message.abResultChecksum);\n    }\n    if (message.iso3166Alpha2CountryCodeFromRequestIp !== \"\") {\n      writer.uint32(50).string(message.iso3166Alpha2CountryCodeFromRequestIp);\n    }\n    if (message.debugData !== undefined) {\n      ConfigTargetingResponseDebugData.encode(message.debugData, writer.uint32(58).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ConfigTargetingResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseConfigTargetingResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.configResultsEtag = reader.string();\n          break;\n        case 3:\n          message.benchmarkRequest = BenchmarkRequest.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.fullResults = reader.bool();\n          break;\n        case 5:\n          message.abResultChecksum = reader.int32();\n          break;\n        case 6:\n          message.iso3166Alpha2CountryCodeFromRequestIp = reader.string();\n          break;\n        case 7:\n          message.debugData = ConfigTargetingResponseDebugData.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ConfigTargetingResponse>, I>>(object: I): ConfigTargetingResponse {\n    const message = createBaseConfigTargetingResponse();\n    message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n    message.configResultsEtag = object.configResultsEtag ?? \"\";\n    message.benchmarkRequest =\n      object.benchmarkRequest !== undefined && object.benchmarkRequest !== null\n        ? BenchmarkRequest.fromPartial(object.benchmarkRequest)\n        : undefined;\n    message.fullResults = object.fullResults ?? false;\n    message.abResultChecksum = object.abResultChecksum ?? 0;\n    message.iso3166Alpha2CountryCodeFromRequestIp = object.iso3166Alpha2CountryCodeFromRequestIp ?? \"\";\n    message.debugData =\n      object.debugData !== undefined && object.debugData !== null\n        ? ConfigTargetingResponseDebugData.fromPartial(object.debugData)\n        : undefined;\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n"]}