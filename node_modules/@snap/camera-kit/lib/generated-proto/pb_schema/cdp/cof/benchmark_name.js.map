{"version":3,"file":"benchmark_name.js","sourceRoot":"","sources":["../../../../../src/generated-proto/pb_schema/cdp/cof/benchmark_name.ts"],"names":[],"mappings":"AAAA,oBAAoB;AACpB,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,GAAG,MAAM,oBAAoB,CAAC;AAErC,MAAM,CAAC,MAAM,eAAe,GAAG,kBAAkB,CAAC;AAElD,0FAA0F;AAC1F,MAAM,CAAN,IAAY,aA4FX;AA5FD,WAAY,aAAa;IACvB,2EAAqB,CAAA;IACrB,6DAAc,CAAA;IACd,iEAAiE;IACjE,6DAAc,CAAA;IACd,mEAAmE;IACnE,2EAAqB,CAAA;IACrB,sGAAsG;IACtG,uFAA2B,CAAA;IAC3B,kDAAkD;IAClD,mFAAyB,CAAA;IACzB,2DAA2D;IAC3D,qGAAkC,CAAA;IAClC,0CAA0C;IAC1C,2EAAqB,CAAA;IACrB,4CAA4C;IAC5C,mFAAyB,CAAA;IACzB,wCAAwC;IACxC,mEAAiB,CAAA;IACjB,oDAAoD;IACpD,0EAAqB,CAAA;IACrB,qEAAqE;IACrE,8EAAuB,CAAA;IACvB,qFAAqF;IACrF,8FAA+B,CAAA;IAC/B,iIAAiI;IACjI,4GAAsC,CAAA;IACtC,iIAAiI;IACjI,sGAAmC,CAAA;IACnC,kJAAkJ;IAClJ,oHAA0C,CAAA;IAC1C,uIAAuI;IACvI,sGAAmC,CAAA;IACnC,+HAA+H;IAC/H,kHAAyC,CAAA;IACzC,sJAAsJ;IACtJ,kHAAyC,CAAA;IACzC,iEAAiE;IACjE,0EAAqB,CAAA;IACrB,8DAA8D;IAC9D,0EAAqB,CAAA;IACrB,8EAA8E;IAC9E,wEAAoB,CAAA;IACpB,2EAA2E;IAC3E,wEAAoB,CAAA;IACpB,iFAAiF;IACjF,gFAAwB,CAAA;IACxB,8EAA8E;IAC9E,gFAAwB,CAAA;IACxB,4IAA4I;IAC5I,oGAAkC,CAAA;IAClC,qJAAqJ;IACrJ,wGAAoC,CAAA;IACpC,mGAAmG;IACnG,0GAAqC,CAAA;IACrC,4GAA4G;IAC5G,4HAA8C,CAAA;IAC9C,6IAA6I;IAC7I,4GAAsC,CAAA;IACtC,kHAAkH;IAClH,wHAA4C,CAAA;IAC5C,+FAA+F;IAC/F,wGAAoC,CAAA;IACpC,oGAAoG;IACpG,sIAAmD,CAAA;IACnD,yFAAyF;IACzF,0GAAqC,CAAA;IACrC,uHAAuH;IACvH,oHAA0C,CAAA;IAC1C,uGAAuG;IACvG,0HAA6C,CAAA;IAC7C,qFAAqF;IACrF,kHAAyC,CAAA;IACzC,2FAA2F;IAC3F,gIAAgD,CAAA;IAChD,mGAAmG;IACnG,wIAAoD,CAAA;IACpD,6GAA6G;IAC7G,gIAAgD,CAAA;IAChD,4HAA4H;IAC5H,oIAAkD,CAAA;IAClD,8GAA8G;IAC9G,oEAAkB,CAAA;IAClB,mIAAmI;IACnI,kFAAyB,CAAA;IACzB,+EAA+E;IAC/E,kGAAiC,CAAA;IACjC,6HAA6H;IAC7H,wHAA4C,CAAA;IAC5C,sKAAsK;IACtK,8HAA+C,CAAA;IAC/C,kEAAiB,CAAA;AACnB,CAAC,EA5FW,aAAa,KAAb,aAAa,QA4FxB;AAED,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;IAC1B,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAW,CAAC;IAC5B,GAAG,CAAC,SAAS,EAAE,CAAC;CACjB","sourcesContent":["/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"snapchat.cdp.cof\";\n\n/** Benchmark name. Ideally, a name should be short and unambiguous with unit included. */\nexport enum BenchmarkName {\n  UNKNOWN_BENCHMARK = 0,\n  CPU_GFLOPS = 1,\n  /** GPU_GFLOPS - GFLOPS when performing single unit operations */\n  GPU_GFLOPS = 2,\n  /** GPU_GFLOPS_VECTOR - GFLOPS when performing vector operations */\n  GPU_GFLOPS_VECTOR = 3,\n  /** GPU_SYSTEM_CAPABILITIES - JSON object containing GPU feature support derived from OpenGL/CL API */\n  GPU_SYSTEM_CAPABILITIES = 4,\n  /** GPU_VERTEX_THROUGHPUT - Vertices per second */\n  GPU_VERTEX_THROUGHPUT = 5,\n  /** GPU_SIMPLE_GEOMETRY_THROUGHPUT - Vertices per second */\n  GPU_SIMPLE_GEOMETRY_THROUGHPUT = 6,\n  /** GPU_GAUSSIAN_BLUR - Sampling radius */\n  GPU_GAUSSIAN_BLUR = 7,\n  /** CPU_MEMORY_THROUGHPUT - MB per second */\n  CPU_MEMORY_THROUGHPUT = 8,\n  /** GPU_FILL_RATE - Pixels per second */\n  GPU_FILL_RATE = 9,\n  /** MEM_TOTAL_MEMORY - Total memory of the system */\n  MEM_TOTAL_MEMORY = 10,\n  /** CPU_NUM_PROCESSORS - Gathers the number of CPUs the device has */\n  CPU_NUM_PROCESSORS = 11,\n  /** DEVICE_INFORMATION_CHIPSET - Returns the Chipset of the device via Build.BOARD */\n  DEVICE_INFORMATION_CHIPSET = 12,\n  /** DEVICE_INFORMATION_BUILD_HARDWARE - Returns the Build.HARDWARE data for a device. This can be the chipset for some devices */\n  DEVICE_INFORMATION_BUILD_HARDWARE = 13,\n  /** DEVICE_INFORMATION_BUILD_BRAND - Returns the Build.BRAND for the device. This is normally the marketed brand for a device. */\n  DEVICE_INFORMATION_BUILD_BRAND = 14,\n  /** DEVICE_INFORMATION_BUILD_MANUFACTURER - Returns the Build.MANUFACTURER for the device. This is what company physically assembled the device */\n  DEVICE_INFORMATION_BUILD_MANUFACTURER = 15,\n  /** DEVICE_INFORMATION_BUILD_MODEL - Returns the Build.MODEL for the device. This is normally how we identify a device as 'SM-G930V' */\n  DEVICE_INFORMATION_BUILD_MODEL = 16,\n  /** DEVICE_INFORMATION_SCREEN_PROPERTIES - Returns the screen configuration from the device such as widthPixels and density. */\n  DEVICE_INFORMATION_SCREEN_PROPERTIES = 17,\n  /** DEVICE_INFORMATION_CODEC_CAPABILITES - Gathers the codec capabilities for the device. Such as HEVC and 264 profiles supported for encode/decode */\n  DEVICE_INFORMATION_CODEC_CAPABILITES = 18,\n  /** CPU_PRIME_KOTLIN - Calculates primes in Kotlin using sieve */\n  CPU_PRIME_KOTLIN = 19,\n  /** CPU_PRIME_NATIVE - Calculates primes in C++ using sieve */\n  CPU_PRIME_NATIVE = 20,\n  /** CPU_SQRT_KOTLIN - Calculates sqrt using the babylonian method in kotlin */\n  CPU_SQRT_KOTLIN = 21,\n  /** CPU_SQRT_NATIVE - Calculates sqrt using the babylonian method in C++ */\n  CPU_SQRT_NATIVE = 22,\n  /** CPU_INT_MATH_KOTLIN - Performs a serious of int ALU computations in kotlin */\n  CPU_INT_MATH_KOTLIN = 23,\n  /** CPU_INT_MATH_NATIVE - Performs a serious of int ALU computations in C++ */\n  CPU_INT_MATH_NATIVE = 24,\n  /** DEVICE_INFORMATION_GL_VERSION - OpenGL version running on the device, calculated as (100 * major) + minor, ex. \"OpenGL ES 3.2\" -> 302 */\n  DEVICE_INFORMATION_GL_VERSION = 25,\n  /** DEVICE_INFORMATION_GLSL_VERSION - GLSL version running on the device, calculated as (100 * major) + minor, ex. \"OpenGL ES GLSL ES 3.20\" -> 320 */\n  DEVICE_INFORMATION_GLSL_VERSION = 26,\n  /** DEVICE_INFORMATION_OPENCL_EXISTS - True if we can run OpenCL on this device, otherwise false */\n  DEVICE_INFORMATION_OPENCL_EXISTS = 27,\n  /** DEVICE_INFORMATION_IS_HOST_UNIFIED_MEMORY - True if the device is using a unified memory architecture */\n  DEVICE_INFORMATION_IS_HOST_UNIFIED_MEMORY = 28,\n  /** DEVICE_INFORMATION_OPENCL_VERSION - OpenCL version running on the device, calculated as (100 * major) + minor, ex. \"OpenCL 1.2\" -> 102 */\n  DEVICE_INFORMATION_OPENCL_VERSION = 29,\n  /** DEVICE_INFORMATION_TIMING_RESOLUTION_NS - Timing resolution in nanoseconds for profiling reported by OpenCL */\n  DEVICE_INFORMATION_TIMING_RESOLUTION_NS = 30,\n  /** DEVICE_INFORMATION_ADDRESS_SIZE - Number of bits used to address memory (32-bit, 64-bit) */\n  DEVICE_INFORMATION_ADDRESS_SIZE = 31,\n  /** DEVICE_INFORMATION_GPU_MAX_CLOCK_FREQUENCY_MHZ - Maximum clock frequency of the device in MHz */\n  DEVICE_INFORMATION_GPU_MAX_CLOCK_FREQUENCY_MHZ = 32,\n  /** DEVICE_INFORMATION_COMPUTE_UNITS - Number of available compute units on the device */\n  DEVICE_INFORMATION_COMPUTE_UNITS = 33,\n  /** DEVICE_INFORMATION_MAX_WORKGROUP_SIZE - Maximum number of tasks that can be processed at one time by a workgroup */\n  DEVICE_INFORMATION_MAX_WORKGROUP_SIZE = 34,\n  /** DEVICE_INFORMATION_LOCAL_MEMORY_IS_LOCAL - True if the device has dedicated local memory storage */\n  DEVICE_INFORMATION_LOCAL_MEMORY_IS_LOCAL = 35,\n  /** DEVICE_INFORMATION_LOCAL_MEMORY_SIZE - Amount of local memory storage in bytes */\n  DEVICE_INFORMATION_LOCAL_MEMORY_SIZE = 36,\n  /** DEVICE_INFORMATION_GLOBAL_MEMORY_CACHE_SIZE - Amount of global memory cache in bytes */\n  DEVICE_INFORMATION_GLOBAL_MEMORY_CACHE_SIZE = 37,\n  /** DEVICE_INFORMATION_GLOBAL_MEMORY_CACHELINE_SIZE - Line size for global memory cache in bytes */\n  DEVICE_INFORMATION_GLOBAL_MEMORY_CACHELINE_SIZE = 38,\n  /** DEVICE_INFORMATION_GL_HAS_FENCE_SYNC_OBJECT - True if device reports support for GL fence sync objects */\n  DEVICE_INFORMATION_GL_HAS_FENCE_SYNC_OBJECT = 39,\n  /** DEVICE_INFORMATION_HEXAGON_NN_LIBRARY_VERSION - Supported hexagon nn library version. 0 if hexagon nn is not suppoted */\n  DEVICE_INFORMATION_HEXAGON_NN_LIBRARY_VERSION = 40,\n  /** GPU_GFLOPS_V2 - New GPU_GFLOPS benchmark expected to have better convergence properties than GPU_GFLOPS */\n  GPU_GFLOPS_V2 = 41,\n  /** GPU_GFLOPS_VECTOR_V2 - New GPU_GFLOPS_VECTOR benchmark expected to have better convergence properties than GPU_GFLOPS_VECTOR */\n  GPU_GFLOPS_VECTOR_V2 = 42,\n  /** DEVICE_INFORMATION_GPU_MODEL - GPU Model, e.g. Adreno (TM) 308, Mali-300 */\n  DEVICE_INFORMATION_GPU_MODEL = 43,\n  /** DEVICE_INFORMATION_CODEC_CAPABILITES_V2 - Gathers more comprehensive info about media codec capabilities of the device */\n  DEVICE_INFORMATION_CODEC_CAPABILITES_V2 = 44,\n  /** DEVICE_INFORMATION_MEDIA_PERFORMANCE_CLASS - Media performance class, e.g. 12, 13 and details:https://developer.android.com/topic/performance/performance-class */\n  DEVICE_INFORMATION_MEDIA_PERFORMANCE_CLASS = 45,\n  UNRECOGNIZED = -1,\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n"]}