import _m0 from "protobufjs/minimal";
import { Namespace } from "./namespace";
import { Ruid_Type } from "../../common/ruid";
import { Value } from "../../common/value";
export declare const protobufPackage = "snapchat.cdp.cof";
export interface ConfigResult {
    /** The id of the config. */
    configId: string;
    /**
     * The chosen value of the config.
     * This should be sufficient to model most use cases. But in the future if additional structured
     * data need to be conveyed as part of the value we can add a field with type google.protobuf.Any,
     * which the developer can decoded as arbitrary proto on the client.
     */
    value: Value | undefined;
    /**
     * The "Partial" targeting expression. Some nodes have been removed from the original ConfigRule targeting
     * expression in a way that all the remaining leaf nodes only have properties that client can evaluate, and as long
     * as this expression evaluates to true it is consistent with the server side evaluation.
     */
    targetingExpression: ClientTargetingExpression | undefined;
    /** The client should fetch the config again if the TTL is exceeded. */
    ttlSeconds: number;
    /** The UUID bytes that identifies the config rule. */
    configRuleUuidBytes: Uint8Array;
    /** Priority used for client to tie-break multiple matching results for the same config. */
    priority: number;
    /** Namespace of the config. */
    namespace: Namespace;
    /** AB study name if the value is picked from an experiment. */
    studyName: string;
    /** AB study experiment id if the value is picked from an experiment. */
    experimentId: number;
    /** Indicate the entry should be deleted in a delta sync. */
    delete: boolean;
    /** Serving platform for this config. */
    servePlatforms: ConfigResult_ServePlatform[];
    /** Sequence id of this config result. */
    sequenceId: number;
    /** RUID type assigned to this config. */
    ruidType: Ruid_Type;
    /**
     * Segment ordinal of the AB study segment, from which
     * this config result was generated. If set, this is
     * to be used as a secondary priority
     */
    segmentOrdinal: number;
    /**
     * Whether this ConfigResult message was generated
     * from AB allowlists. Allowlists need to be handled with
     * a higher priority, comparing to regular AB-generated results
     */
    generatedFromAbAllowlists: boolean;
}
/** The suffix of "_PLATFORM" is appended, due to C++ declared enums with global scope, which causes issues in Snapchat/client */
export declare enum ConfigResult_ServePlatform {
    UNKNOWN_CONTEXT_PLATFORM = 0,
    IOS_PLATFORM = 1,
    ANDROID_PLATFORM = 2,
    SERVER_PLATFORM = 3,
    UNRECOGNIZED = -1
}
/**
 * Serves as a convenient bundle for a list of ConfigResults. Primarily used when sending this list of ConfigResults
 * from the platform layer into the native layer.
 */
export interface ConfigResultBundle {
    /** The etag used to fetch these configs from the server */
    etag: string;
    /** The list of ConfigResults that match the user-specified query */
    configResults: ConfigResult[];
}
/**
 * The targeting expression.
 * It has the same structure as TargetingExpression in
 * https://github.sc-corp.net/Snapchat/CircumstancesCMS/blob/master/circumstances-proto/src/main/proto/config.proto
 * Notable differences:
 * 1. The property is a enum, with only the kinds of signals that should be evaluated on the client side
 * 2. PredicateOperator doesn't have "IN". The IN predicates are expanded into a OR tree during indexing.
 * 3. The value is a multi type union as opposed to string. The value in TargetingExpression is string for the
 *    convenience of manipulation in the UI, but it's more efficient to transmit the actual types over the wire.
 */
export interface ClientTargetingExpression {
    /**
     * Parent node fields:
     * Logical operator
     */
    operator: ClientTargetingExpression_Operator;
    /** Child nodes */
    children: ClientTargetingExpression[];
    /**
     * Leaf node fields:
     * The property that needs to be evaluated.
     */
    property: ClientTargetingExpression_Property;
    /** The predicate operator */
    predicateOperator: ClientTargetingExpression_PredicateOperator;
    /** The value of property. */
    value: Value | undefined;
    /** property's metadata. Doesn't have to be set */
    propertyMetadata: ClientTargetingExpression_PropertyMetadata | undefined;
}
export declare enum ClientTargetingExpression_Operator {
    UNKNOWN_OPERATOR = 0,
    AND = 1,
    OR = 2,
    UNRECOGNIZED = -1
}
export declare enum ClientTargetingExpression_PredicateOperator {
    UNKNOWN_PREDICATE_OPERATOR = 0,
    EQUAL = 1,
    NOT_EQUAL = 2,
    GREATER_THAN_OR_EQUAL_TO = 3,
    LESS_THAN_OR_EQUAL_TO = 4,
    UNRECOGNIZED = -1
}
export declare enum ClientTargetingExpression_Property {
    UNKNOWN_PROPERTY = 0,
    /**
     * BATTERY_LEVEL - A enum ordinal indicating the battery level is LOW/MID/HIGH.
     * The ordinals are defined in snapchat.cdp.cof.battery_level.proto
     */
    BATTERY_LEVEL = 1,
    /** IS_OFFLINE - A boolean indicating whether the device is offline. */
    IS_OFFLINE = 2,
    /** IS_CHARGING - A boolean indicating whether the device is charging. */
    IS_CHARGING = 3,
    /** BANDWIDTH - An integer representing the download bandwidth in bps. */
    BANDWIDTH = 4,
    /** DISK_SIZE - Disk size in mb */
    DISK_SIZE = 5,
    /** DISK_AVAILABLE - Disk space available in mb */
    DISK_AVAILABLE = 6,
    /**
     * MEDIA_TYPE_DEPRECATED - An enum ordinal indicating the type of media being processed.
     * The ordinals are defined in snapchat.snapdoc.MediaMetadata.MediaType.
     *
     * @deprecated
     */
    MEDIA_TYPE_DEPRECATED = 7,
    /** IS_PUBLIC_STORY - A boolean indicating whether the story is shared publicly. */
    IS_PUBLIC_STORY = 8,
    /** IS_OFFICIAL_STORY - A boolean indicating whether the story is posted from offcial account and is public. */
    IS_OFFICIAL_STORY = 9,
    /** CAMERA_DIRECTION - An enum for camera direction */
    CAMERA_DIRECTION = 10,
    /** CAMERA_CONTEXT - An enum for camera context */
    CAMERA_CONTEXT = 11,
    /** CAMERA_API - An enum for camera API */
    CAMERA_API = 12,
    /** CAMERA_FLASH_STATE - An enum for camera flash state */
    CAMERA_FLASH_STATE = 13,
    /** SNAP_SOURCE - An enum for where the snap orginates */
    SNAP_SOURCE = 14,
    /** LEGACY_MUSHROOM_CONTENT_TYPE - An enum for what content type is being used */
    LEGACY_MUSHROOM_CONTENT_TYPE = 15,
    /** UPLOAD_BANDWIDTH - An integer representing the upload bandwidth in bps. */
    UPLOAD_BANDWIDTH = 16,
    /** CAMERA2_LEVEL - An enum for camera2 hardware support level. */
    CAMERA2_LEVEL = 17,
    /** CAMERA_NIGHT_MODE_STATE - An enum for Camera night model state. */
    CAMERA_NIGHT_MODE_STATE = 18,
    /** USER_LANGUAGE - The language user chooses the app to display */
    USER_LANGUAGE = 19,
    /** VIDEO_DURATION - The video duration in ms. */
    VIDEO_DURATION = 20,
    /** REALTIME_MOBILE_NETWORK_GENERATION - Mobile network generation(3G, 4G, etc) defined in snapchat.cdp.cof.mobile_network_generation.proto */
    REALTIME_MOBILE_NETWORK_GENERATION = 21,
    /** REALTIME_NETWORK_TYPE - Mobile networktype defined via Connectivity.NetworkType in snapchat.cdp.cof.circumstance_engine.proto */
    REALTIME_NETWORK_TYPE = 22,
    /** REALTIME_NETWORK_IS_METERED - A boolean for if the current network is metered. */
    REALTIME_NETWORK_IS_METERED = 23,
    /** REALTIME_NETWORK_IS_ROAMING - A boolean for if the current network is roaming. */
    REALTIME_NETWORK_IS_ROAMING = 24,
    /** CAMERA_IS_FIRST_CAPTURE - A boolean indicating whether this is the first capture after app cold start */
    CAMERA_IS_FIRST_CAPTURE = 25,
    /** PICTURE_MODE - A enum indicating which type of image capture this was [GPU or JPEG] */
    PICTURE_MODE = 26,
    /** BOLT_USE_CASE - An integer representing what BOLT usecase the caller is using. */
    BOLT_USE_CASE = 27,
    /** BOLT_CDN_EXPERIMENTATION_ID - An integer representing what BOLT cdn should be experimented with */
    BOLT_CDN_EXPERIMENTATION_ID = 28,
    /** MINS_SINCE_LAST_LENS_ACTIVATION - Num of mins since a user last activates the Lens. */
    MINS_SINCE_LAST_LENS_ACTIVATION = 29,
    /** MINS_SINCE_LAST_SNAPPABLE_LENS_ACTIVATION - Num of mins since user activated snappable lens for the last time. */
    MINS_SINCE_LAST_SNAPPABLE_LENS_ACTIVATION = 30,
    /** DAYS_SINCE_LAST_LOGIN_OR_OPEN - Integer between 0 .. N which is the number of days since the user logged in or opened the app */
    DAYS_SINCE_LAST_LOGIN_OR_OPEN = 31,
    /** SPECTACLES_VERSION - An enum for Spectacles version */
    SPECTACLES_VERSION = 32,
    /** STICKY_MAX_CONNECTION_TYPE - A client side property for evaluating the highest tier connection a client has recently used. */
    STICKY_MAX_CONNECTION_TYPE = 33,
    /** WITH_ANIMATED_OVERLAY - A boolean indicating whether there is animated overlay with video snap. */
    WITH_ANIMATED_OVERLAY = 34,
    /** ESTIMATED_DURATION_FOR_EVENT_MS - Estimated duration for a config-specific event */
    ESTIMATED_DURATION_FOR_EVENT_MS = 35,
    /** URL - A URL */
    URL = 36,
    /** MEDIA_SOURCE - contentâ€™s origin prior to being injected into the MDP stack */
    MEDIA_SOURCE = 37,
    /** ASSET_TYPE - how to compose an individual asset into one larger logical asset */
    ASSET_TYPE = 38,
    /** BOLT_IS_CONTENT_POPULAR - A boolean representing whether the content being resolved is popular or not. */
    BOLT_IS_CONTENT_POPULAR = 39,
    /** CAPTURE_MODE - A enum indicating which mode of capture this was [Timeline or Unknown] */
    CAPTURE_MODE = 40,
    /** VP9_SOFTWARE_DECODING_SUPPORTED - A boolean representing if VP9 software decoding is supported */
    VP9_SOFTWARE_DECODING_SUPPORTED = 41,
    /** AV1_SOFTWARE_DECODING_SUPPORTED - A boolean representing if AV1 software decoding is supported */
    AV1_SOFTWARE_DECODING_SUPPORTED = 42,
    /** WITH_MUSIC - A boolean to indicate whether there is music edits (e.g. music sticker). */
    WITH_MUSIC = 43,
    /**
     * FEATURE_PROVIDED_SIZE - A client provided integer representing size. The units is decided by the caller.
     * This will be evaluated using FeatureProvidedSignals.size
     */
    FEATURE_PROVIDED_SIZE = 44,
    /**
     * MEDIA_TYPE - An enum ordinal indicating the type of media being processed.
     * The ordinals are defined in snapchat.cdp.cof.media_provided_signals.proto
     */
    MEDIA_TYPE = 45,
    /** SCANNED_CATEGORY_IDS - The ids of the categories that are currently being scanned for (e.g. Amazon, Photomath, etc) */
    SCANNED_CATEGORY_IDS = 46,
    /**
     * CONTENT_VIEW_SOURCE - Numerical value of ContentViewSource (Blizzard enum) which identified Opera session
     * On the client the value is provided via FeatureProvidedSignals.OperaSignals
     */
    CONTENT_VIEW_SOURCE = 47,
    /** RECIPIENTS_SUPPORT_HEVC - A boolean indicating whether a group of recipients support High Efficiency Video Encoding (HEVC) */
    RECIPIENTS_SUPPORT_HEVC = 48,
    /** COGNAC_APP_ID - A Cognac game/mini id that a user is playing */
    COGNAC_APP_ID = 49,
    /** EMAIL_VERIFIED - Whether user's email has verified */
    EMAIL_VERIFIED = 50,
    /** PHONE_VERIFIED - Whether user's phone number has verified */
    PHONE_VERIFIED = 51,
    /** NOTIFICATION_PERM_GRANTED - Whether notification permission has granted */
    NOTIFICATION_PERM_GRANTED = 52,
    /** CONTACT_PERM_GRANTED - Whether contact permission has granted */
    CONTACT_PERM_GRANTED = 53,
    /** MUTUAL_FRIENDS_COUNT - Mutual friends count */
    MUTUAL_FRIENDS_COUNT = 54,
    /** GROUPS_COUNT - Groups count */
    GROUPS_COUNT = 55,
    /** HAS_NON_TEAM_SNAPCHAT_CONVERSATIONS - Whether user has non-team snapchat conversations */
    HAS_NON_TEAM_SNAPCHAT_CONVERSATIONS = 56,
    /**
     * PLAYBACK_ITEM_TYPE - Numerical value of PlaybackItemType (Blizzard enum) which identifies an Opera playback item type
     * On the client the value is provided via PlaybackItemType
     */
    PLAYBACK_ITEM_TYPE = 57,
    /**
     * SUP_BOOLEAN_PROPERTY - To get the corresponding SUP property values, check on property_metadata.sup_item_id.item_id
     * Sup boolean property
     */
    SUP_BOOLEAN_PROPERTY = 58,
    /** SUP_INTEGER_PROPERTY - Sup integer property */
    SUP_INTEGER_PROPERTY = 59,
    /** SUP_LONG_PROPERTY - Sup long property */
    SUP_LONG_PROPERTY = 60,
    /** SUP_STRING_PROPERTY - Sup string property */
    SUP_STRING_PROPERTY = 61,
    /** SUP_DOUBLE_PROPERTY - Sup double property */
    SUP_DOUBLE_PROPERTY = 62,
    /** SUP_MILLIS_PROPERTY_TO_NOW - Sup long property as timestamp in millis to get time elapsed */
    SUP_MILLIS_PROPERTY_TO_NOW = 63,
    /** HAS_USED_SPECTACLES - Whether the user has used Spectacles (incl. Cheerios) */
    HAS_USED_SPECTACLES = 64,
    /**
     * SUP_SECS_PROPERTY_TO_NOW - To get the corresponding SUP property values, check on property_metadata.sup_item_id.item_id
     * Sup long property as timestamp in seconds to get time elapsed
     */
    SUP_SECS_PROPERTY_TO_NOW = 65,
    /** BOLT_CLIENT_APP_STATE - Enum indicating client App State (Used by BOLT to create targeted network rules) */
    BOLT_CLIENT_APP_STATE = 66,
    /** EMAIL_SET - Whether user's email has been set (might or might not be verified) */
    EMAIL_SET = 67,
    /** BITMOJI_SET - Whether user's bitmoji has been set */
    BITMOJI_SET = 68,
    /** QUICK_TAP_CAMERA_SUPPORTED_ENABLED - Quick tap on camera is supported and enabled */
    QUICK_TAP_CAMERA_SUPPORTED_ENABLED = 69,
    /** HAS_ADD_FRIENDS_REQUEST - Whether user has add friends request */
    HAS_ADD_FRIENDS_REQUEST = 70,
    /** APP_LAUNCH_FROM_PUSH - App launched from push notification */
    APP_LAUNCH_FROM_PUSH = 71,
    /** APP_LAUNCH_TYPE - App launch type: cold start, warm start, registration and login */
    APP_LAUNCH_TYPE = 72,
    /** BILLBOARD_CAMPAIGN_LOCAL_IMPRESSION_COUNT - Billboard locally tracked impression count */
    BILLBOARD_CAMPAIGN_LOCAL_IMPRESSION_COUNT = 73,
    /** BILLBOARD_CAMPAIGN_LOCAL_LAST_IMPRESSION_TIME_SECS_TO_NOW - Billboard locally tracked last impression time in secs to now */
    BILLBOARD_CAMPAIGN_LOCAL_LAST_IMPRESSION_TIME_SECS_TO_NOW = 74,
    /** BILLBOARD_CAMPAIGN_LOCAL_CONTINUOUS_DISMISS_COUNT - Billboard locally tracked continuous dismiss count */
    BILLBOARD_CAMPAIGN_LOCAL_CONTINUOUS_DISMISS_COUNT = 75,
    /** FST_NUM_IN_APP_WARNINGS - FST number of in app warnings to show */
    FST_NUM_IN_APP_WARNINGS = 76,
    /** FST_SHOULD_CHANGE_PASSWORD - FST user should change password */
    FST_SHOULD_CHANGE_PASSWORD = 77,
    /** FST_IS_BACKGROUND_CHECK - Whether it's a background check or foreground check. Android specific */
    FST_IS_BACKGROUND_CHECK = 78,
    /** AUDIO_RECORD_PERM_GRANTED - Whether audio record permission has granted */
    AUDIO_RECORD_PERM_GRANTED = 79,
    /** MUTUAL_FRIENDS_WITH_BIRTHDAY_COUNT - Mutual Friends with birthday count */
    MUTUAL_FRIENDS_WITH_BIRTHDAY_COUNT = 80,
    /** BILLBOARD_CAMPAIGN_LOCAL_DISMISS_COUNT - Billboard locally tracked dismiss count */
    BILLBOARD_CAMPAIGN_LOCAL_DISMISS_COUNT = 81,
    /** USE_VERTICAL_NAVIGATION - A boolean to indicate whether Opera uses vertical navigation or not. */
    USE_VERTICAL_NAVIGATION = 82,
    /**
     * FREEABLE_DISK_AVAILABLE - Freeable disk space available in mb. This included Content Manager freeable
     * bytes + DISK_AVAILABLE
     */
    FREEABLE_DISK_AVAILABLE = 83,
    /** MEMORIES_COUNT - Num of memories snaps user has */
    MEMORIES_COUNT = 84,
    /** DEVICE_MODEL - DEVICE_MODEL (variant copied from TargetingProperty.Property) */
    DEVICE_MODEL = 85,
    /** COUNTRY - COUNTRY (variant copied from TargetingProperty.Property) */
    COUNTRY = 86,
    /** OS - OS (variant copied from TargetingProperty.Property) */
    OS = 87,
    /** OS_VERSION - OS_VERSION (variant copied from TargetingProperty.Property) */
    OS_VERSION = 88,
    /** APP_VERSION - APP_VERSION (variant copied from TargetingProperty.Property) */
    APP_VERSION = 89,
    /** BUILD_FLAVOR - BUILD_FLAVOR (variant copied from TargetingProperty.Property) */
    BUILD_FLAVOR = 90,
    /** USER_ID - USER_ID (variant copied from TargetingProperty.Property) */
    USER_ID = 91,
    /** LOCALE - LOCALE (variant copied from TargetingProperty.Property) */
    LOCALE = 92,
    /** DEVICE_CLUSTER - DEVICE_CLUSTER (variant copied from TargetingProperty.Property) */
    DEVICE_CLUSTER = 93,
    /** DEVICE_BRAND - DEVICE_BRAND (variant copied from TargetingProperty.Property) */
    DEVICE_BRAND = 94,
    /** IS_EMPLOYEE - IS_EMPLOYEE (variant copied from TargetingProperty.Property) */
    IS_EMPLOYEE = 95,
    /** USERNAME - USERNAME (variant copied from TargetingProperty.Property) */
    USERNAME = 96,
    /** IS_TEST_USER - IS_TEST_USER (variant copied from TargetingProperty.Property) */
    IS_TEST_USER = 97,
    /** USER_PROFILE - USER_PROFILE (variant copied from TargetingProperty.Property) */
    USER_PROFILE = 98,
    /** SCREEN_WIDTH - SCREEN_WIDTH (variant copied from TargetingProperty.Property) */
    SCREEN_WIDTH = 99,
    /** SCREEN_HEIGHT - SCREEN_HEIGHT (variant copied from TargetingProperty.Property) */
    SCREEN_HEIGHT = 100,
    /** HEVC_SUPPORT - HEVC_SUPPORT (variant copied from TargetingProperty.Property) */
    HEVC_SUPPORT = 101,
    /** NETWORK_TYPE - NETWORK_TYPE (variant copied from TargetingProperty.Property) */
    NETWORK_TYPE = 102,
    /** MAX_VIDEO_WIDTH - MAX_VIDEO_WIDTH (variant copied from TargetingProperty.Property) */
    MAX_VIDEO_WIDTH = 103,
    /** MAX_VIDEO_HEIGHT - MAX_VIDEO_HEIGHT (variant copied from TargetingProperty.Property) */
    MAX_VIDEO_HEIGHT = 104,
    /** IS_NETWORK_METERED - IS_NETWORK_METERED (variant copied from TargetingProperty.Property) */
    IS_NETWORK_METERED = 105,
    /** IS_ROAMING - IS_ROAMING (variant copied from TargetingProperty.Property) */
    IS_ROAMING = 106,
    /** APP_ENGAGEMENT_LEVEL - APP_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */
    APP_ENGAGEMENT_LEVEL = 107,
    /** COMMUNICATION_ENGAGEMENT_LEVEL - COMMUNICATION_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */
    COMMUNICATION_ENGAGEMENT_LEVEL = 108,
    /** FRIEND_STORY_ENGAGEMENT_LEVEL - FRIEND_STORY_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */
    FRIEND_STORY_ENGAGEMENT_LEVEL = 109,
    /** PUBLIC_USER_STORY_ENGAGEMENT_LEVEL - PUBLIC_USER_STORY_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */
    PUBLIC_USER_STORY_ENGAGEMENT_LEVEL = 110,
    /** PUBLISHER_STORY_ENGAGEMENT_LEVEL - PUBLISHER_STORY_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */
    PUBLISHER_STORY_ENGAGEMENT_LEVEL = 111,
    /** LENS_ENGAGEMENT_LEVEL - LENS_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */
    LENS_ENGAGEMENT_LEVEL = 112,
    /** NON_FRIEND_STORY_ENGAGEMENT_LEVEL - NON_FRIEND_STORY_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */
    NON_FRIEND_STORY_ENGAGEMENT_LEVEL = 113,
    /** FOLLOWER_SIZE_LEVEL - FOLLOWER_SIZE_LEVEL (variant copied from TargetingProperty.Property) */
    FOLLOWER_SIZE_LEVEL = 114,
    /** DAYS_SINCE_CREATION - DAYS_SINCE_CREATION (variant copied from TargetingProperty.Property) */
    DAYS_SINCE_CREATION = 115,
    /** USER_PERSONA - USER_PERSONA (variant copied from TargetingProperty.Property) */
    USER_PERSONA = 116,
    /** USER_CREATION_TIME - USER_CREATION_TIME (variant copied from TargetingProperty.Property) */
    USER_CREATION_TIME = 117,
    /** MOBILE_NETWORK_TYPE - MOBILE_NETWORK_TYPE (variant copied from TargetingProperty.Property) */
    MOBILE_NETWORK_TYPE = 118,
    /** AGGREGATED_USER_BANDWIDTH - AGGREGATED_USER_BANDWIDTH (variant copied from TargetingProperty.Property) */
    AGGREGATED_USER_BANDWIDTH = 119,
    /** LENS_CLUSTER_BIASED - LENS_CLUSTER_BIASED (variant copied from TargetingProperty.Property) */
    LENS_CLUSTER_BIASED = 120,
    /** LENS_CLUSTER_LOG - LENS_CLUSTER_LOG (variant copied from TargetingProperty.Property) */
    LENS_CLUSTER_LOG = 121,
    /** LENS_CLUSTER_ORIG - LENS_CLUSTER_ORIG (variant copied from TargetingProperty.Property) */
    LENS_CLUSTER_ORIG = 122,
    /** LENS_CLUSTER_ORIG_4 - LENS_CLUSTER_ORIG_4 (variant copied from TargetingProperty.Property) */
    LENS_CLUSTER_ORIG_4 = 123,
    /** LENS_CLUSTER_BIASED_LOG - LENS_CLUSTER_BIASED_LOG (variant copied from TargetingProperty.Property) */
    LENS_CLUSTER_BIASED_LOG = 124,
    /** APP_LOCALE - APP_LOCALE (variant copied from TargetingProperty.Property) */
    APP_LOCALE = 125,
    /** DEVICE_COMMON_NAME - DEVICE_COMMON_NAME (variant copied from TargetingProperty.Property) */
    DEVICE_COMMON_NAME = 126,
    /** USER_FRIEND_COUNT - USER_FRIEND_COUNT (variant copied from TargetingProperty.Property) */
    USER_FRIEND_COUNT = 127,
    /** L90_COUNTRY - L90_COUNTRY (variant copied from TargetingProperty.Property) */
    L90_COUNTRY = 128,
    /** STUB - STUB (variant copied from TargetingProperty.Property) */
    STUB = 129,
    /** IS_TRUE - IS_TRUE (variant copied from TargetingProperty.Property) */
    IS_TRUE = 130,
    /** STORY_POST_RATIO - STORY_POST_RATIO (variant copied from TargetingProperty.Property) */
    STORY_POST_RATIO = 131,
    /** GENDER - GENDER (variant copied from TargetingProperty.Property) */
    GENDER = 132,
    /** INFERRED_AGE_BUCKET - INFERRED_AGE_BUCKET (variant copied from TargetingProperty.Property) */
    INFERRED_AGE_BUCKET = 133,
    /** STORIES - STORIES (variant copied from TargetingProperty.Property) */
    STORIES = 134,
    /** SENDS - SENDS (variant copied from TargetingProperty.Property) */
    SENDS = 135,
    /** SNAP_CREATE_L7 - SNAP_CREATE_L7 (variant copied from TargetingProperty.Property) */
    SNAP_CREATE_L7 = 136,
    /** STORY_POST_L7 - STORY_POST_L7 (variant copied from TargetingProperty.Property) */
    STORY_POST_L7 = 137,
    /** COMMUNICATION_L7 - COMMUNICATION_L7 (variant copied from TargetingProperty.Property) */
    COMMUNICATION_L7 = 138,
    /** DF_L7 - DF_L7 (variant copied from TargetingProperty.Property) */
    DF_L7 = 139,
    /** APP_L7 - APP_L7 (variant copied from TargetingProperty.Property) */
    APP_L7 = 140,
    /** DAYS_SINCE_CREATION_BUCKET - DAYS_SINCE_CREATION_BUCKET (variant copied from TargetingProperty.Property) */
    DAYS_SINCE_CREATION_BUCKET = 141,
    /** BIDIRECTIONAL_FRIEND_STATUS - BIDIRECTIONAL_FRIEND_STATUS (variant copied from TargetingProperty.Property) */
    BIDIRECTIONAL_FRIEND_STATUS = 142,
    /** STORY_POST_PREDICTION - STORY_POST_PREDICTION (variant copied from TargetingProperty.Property) */
    STORY_POST_PREDICTION = 143,
    /** APP_OPENS - APP_OPENS (variant copied from TargetingProperty.Property) */
    APP_OPENS = 144,
    /** LENS_SWIPES - LENS_SWIPES (variant copied from TargetingProperty.Property) */
    LENS_SWIPES = 145,
    /** LENS_SNAPS - LENS_SNAPS (variant copied from TargetingProperty.Property) */
    LENS_SNAPS = 146,
    /** LENS_OPS - LENS_OPS (variant copied from TargetingProperty.Property) */
    LENS_OPS = 147,
    /** W1_APP_OPENS - W1_APP_OPENS (variant copied from TargetingProperty.Property) */
    W1_APP_OPENS = 148,
    /** W1_LENS_SWIPES - W1_LENS_SWIPES (variant copied from TargetingProperty.Property) */
    W1_LENS_SWIPES = 149,
    /** W1_LENS_SNAPS - W1_LENS_SNAPS (variant copied from TargetingProperty.Property) */
    W1_LENS_SNAPS = 150,
    /** W1_LENS_OPS - W1_LENS_OPS (variant copied from TargetingProperty.Property) */
    W1_LENS_OPS = 151,
    /** W2_APP_OPENS - W2_APP_OPENS (variant copied from TargetingProperty.Property) */
    W2_APP_OPENS = 152,
    /** W2_LENS_SWIPES - W2_LENS_SWIPES (variant copied from TargetingProperty.Property) */
    W2_LENS_SWIPES = 153,
    /** W2_LENS_SNAPS - W2_LENS_SNAPS (variant copied from TargetingProperty.Property) */
    W2_LENS_SNAPS = 154,
    /** W2_LENS_OPS - W2_LENS_OPS (variant copied from TargetingProperty.Property) */
    W2_LENS_OPS = 155,
    /** W34_APP_OPENS - W34_APP_OPENS (variant copied from TargetingProperty.Property) */
    W34_APP_OPENS = 156,
    /** W34_LENS_SWIPES - W34_LENS_SWIPES (variant copied from TargetingProperty.Property) */
    W34_LENS_SWIPES = 157,
    /** W34_LENS_SNAPS - W34_LENS_SNAPS (variant copied from TargetingProperty.Property) */
    W34_LENS_SNAPS = 158,
    /** W34_LENS_OPS - W34_LENS_OPS (variant copied from TargetingProperty.Property) */
    W34_LENS_OPS = 159,
    /** LENS_SWIPES_PREDICTION - LENS_SWIPES_PREDICTION (variant copied from TargetingProperty.Property) */
    LENS_SWIPES_PREDICTION = 160,
    /** REGISTRATION_COUNTRY - REGISTRATION_COUNTRY (variant copied from TargetingProperty.Property) */
    REGISTRATION_COUNTRY = 161,
    /** IP_ASN - IP_ASN (variant copied from TargetingProperty.Property) */
    IP_ASN = 162,
    /** IP_REGION - IP_REGION (variant copied from TargetingProperty.Property) */
    IP_REGION = 163,
    /** IP_CITY - IP_CITY (variant copied from TargetingProperty.Property) */
    IP_CITY = 164,
    /** HAS_USER_ID - HAS_USER_ID (variant copied from TargetingProperty.Property) */
    HAS_USER_ID = 165,
    /** HAS_BITMOJI - HAS_BITMOJI (variant copied from TargetingProperty.Property) */
    HAS_BITMOJI = 166,
    /** NUM_APP_OPENS_LAST_8_DAYS - NUM_APP_OPENS_LAST_8_DAYS (variant copied from TargetingProperty.Property) */
    NUM_APP_OPENS_LAST_8_DAYS = 167,
    /** NUM_FEATURE_STORY_VIEW_DAYS_L7 - NUM_FEATURE_STORY_VIEW_DAYS_L7 (variant copied from TargetingProperty.Property) */
    NUM_FEATURE_STORY_VIEW_DAYS_L7 = 168,
    /** NUM_FEATURE_STORY_SYNC_DAYS_L7 - NUM_FEATURE_STORY_SYNC_DAYS_L7 (variant copied from TargetingProperty.Property) */
    NUM_FEATURE_STORY_SYNC_DAYS_L7 = 169,
    /** HEXAGON_NN_SUPPORTED_VERSION - HEXAGON_NN_SUPPORTED_VERSION (variant copied from TargetingProperty.Property) */
    HEXAGON_NN_SUPPORTED_VERSION = 170,
    /** NETWORK_QUALITY - NETWORK_QUALITY (variant copied from TargetingProperty.Property) */
    NETWORK_QUALITY = 171,
    /** DEVICE_MEMORY_MB - DEVICE_MEMORY_MB (variant copied from TargetingProperty.Property) */
    DEVICE_MEMORY_MB = 172,
    /** DEVICE_GL_VERSION - DEVICE_GL_VERSION (variant copied from TargetingProperty.Property) */
    DEVICE_GL_VERSION = 173,
    /** SNAP_PRO_STATUS - SNAP_PRO_STATUS (variant copied from TargetingProperty.Property) */
    SNAP_PRO_STATUS = 174,
    /** DEVICE_VP9_DECODING_SUPPORT - DEVICE_VP9_DECODING_SUPPORT (variant copied from TargetingProperty.Property) */
    DEVICE_VP9_DECODING_SUPPORT = 175,
    /** AVG_FRIEND_STORY_VIEW_COUNT_L7 - AVG_FRIEND_STORY_VIEW_COUNT_L7 (variant copied from TargetingProperty.Property) */
    AVG_FRIEND_STORY_VIEW_COUNT_L7 = 176,
    /** GAME_JOIN_TIME - GAME_JOIN_TIME (variant copied from TargetingProperty.Property) */
    GAME_JOIN_TIME = 177,
    /** GAME_LAST_ACTIVE_TIME - GAME_LAST_ACTIVE_TIME (variant copied from TargetingProperty.Property) */
    GAME_LAST_ACTIVE_TIME = 178,
    /** DAYS_SINCE_FIRST_GAME_ACTIVITY - DAYS_SINCE_FIRST_GAME_ACTIVITY (variant copied from TargetingProperty.Property) */
    DAYS_SINCE_FIRST_GAME_ACTIVITY = 179,
    /** DAYS_SINCE_LAST_GAME_ACTIVITY - DAYS_SINCE_LAST_GAME_ACTIVITY (variant copied from TargetingProperty.Property) */
    DAYS_SINCE_LAST_GAME_ACTIVITY = 180,
    /** PF_PAGE_SESSIONS_WITH_LONG_IMP - PF_PAGE_SESSIONS_WITH_LONG_IMP (variant copied from TargetingProperty.Property) */
    PF_PAGE_SESSIONS_WITH_LONG_IMP = 181,
    /** WIRELESS_CARRIER - WIRELESS_CARRIER (variant copied from TargetingProperty.Property) */
    WIRELESS_CARRIER = 182,
    /** MINIS_JOIN_TIME - MINIS_JOIN_TIME (variant copied from TargetingProperty.Property) */
    MINIS_JOIN_TIME = 183,
    /** MINIS_LAST_ACTIVE_TIME - MINIS_LAST_ACTIVE_TIME (variant copied from TargetingProperty.Property) */
    MINIS_LAST_ACTIVE_TIME = 184,
    /** DAYS_SINCE_FIRST_MINIS_ACTIVITY - DAYS_SINCE_FIRST_MINIS_ACTIVITY (variant copied from TargetingProperty.Property) */
    DAYS_SINCE_FIRST_MINIS_ACTIVITY = 185,
    /** DAYS_SINCE_LAST_MINIS_ACTIVITY - DAYS_SINCE_LAST_MINIS_ACTIVITY (variant copied from TargetingProperty.Property) */
    DAYS_SINCE_LAST_MINIS_ACTIVITY = 186,
    /** DEVICE_AV1_DECODING_SUPPORT - DEVICE_AV1_DECODING_SUPPORT (variant copied from TargetingProperty.Property) */
    DEVICE_AV1_DECODING_SUPPORT = 187,
    /** APP_PACKAGE_INSTALLER - APP_PACKAGE_INSTALLER (variant copied from TargetingProperty.Property) */
    APP_PACKAGE_INSTALLER = 188,
    /** STORY_VIEWS_5TH_TAB_ENGAGEMENT_LEVEL - STORY_VIEWS_5TH_TAB_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */
    STORY_VIEWS_5TH_TAB_ENGAGEMENT_LEVEL = 189,
    /** REPORTED_AGE - REPORTED_AGE (variant copied from TargetingProperty.Property) */
    REPORTED_AGE = 190,
    /** ANDROID_MOBILE_SERVICES_PROVIDER - ANDROID_MOBILE_SERVICES_PROVIDER (variant copied from TargetingProperty.Property) */
    ANDROID_MOBILE_SERVICES_PROVIDER = 191,
    /** IS_ACQUIRED_USER - IS_ACQUIRED_USER (variant copied from TargetingProperty.Property) */
    IS_ACQUIRED_USER = 192,
    /** YDPI - YDPI (variant copied from TargetingProperty.Property) */
    YDPI = 193,
    /** BIDIRECTIONAL_FRIEND_STATUS_VELLUM - BIDIRECTIONAL_FRIEND_STATUS_VELLUM (variant copied from TargetingProperty.Property) */
    BIDIRECTIONAL_FRIEND_STATUS_VELLUM = 194,
    /** ORIGIN - ORIGIN (variant copied from TargetingProperty.Property) */
    ORIGIN = 195,
    /** LENSCORE_VERSION - LENSCORE_VERSION (variant copied from TargetingProperty.Property) */
    LENSCORE_VERSION = 196,
    /** SNAPKIT_APP_ID - SNAPKIT_APP_ID (variant copied from TargetingProperty.Property) */
    SNAPKIT_APP_ID = 197,
    /** GPU - GPU (variant copied from TargetingProperty.Property) */
    GPU = 198,
    /** CHIPSET_NAME - CHIPSET_NAME (variant copied from TargetingProperty.Property) */
    CHIPSET_NAME = 199,
    /** CHIPSET_VERSION - CHIPSET_VERSION (variant copied from TargetingProperty.Property) */
    CHIPSET_VERSION = 200,
    /** HAS_ZERO_IDFA - HAS_ZERO_IDFA (variant copied from TargetingProperty.Property) */
    HAS_ZERO_IDFA = 201,
    /** LIMIT_AD_TRACKING - LIMIT_AD_TRACKING (variant copied from TargetingProperty.Property) */
    LIMIT_AD_TRACKING = 202,
    /** ATT_AUTH_STATUS - ATT_AUTH_STATUS (variant copied from TargetingProperty.Property) */
    ATT_AUTH_STATUS = 203,
    /** CAMERA2_FRONT_SS_GAIN_OVER_TPA - CAMERA2_FRONT_SS_GAIN_OVER_TPA (variant copied from TargetingProperty.Property) */
    CAMERA2_FRONT_SS_GAIN_OVER_TPA = 204,
    /** ATTACHMENT_TOOL_V2 - ATTACHMENT_TOOL_V2 (variant copied from TargetingProperty.Property) */
    ATTACHMENT_TOOL_V2 = 205,
    /** USER_PERSONA_V3 - USER_PERSONA_V3 (variant copied from TargetingProperty.Property) */
    USER_PERSONA_V3 = 206,
    /** SNAPS_SEND_WITH_HEVC - SNAPS_SEND_WITH_HEVC (variant copied from TargetingProperty.Property) */
    SNAPS_SEND_WITH_HEVC = 207,
    /** SNAPS_SEND_WITHOUT_HEVC - SNAPS_SEND_WITHOUT_HEVC (variant copied from TargetingProperty.Property) */
    SNAPS_SEND_WITHOUT_HEVC = 208,
    /** CAMERA2_NATIVE_CRASH_OVER_CAMERA1 - CAMERA2_NATIVE_CRASH_OVER_CAMERA1 (variant copied from TargetingProperty.Property) */
    CAMERA2_NATIVE_CRASH_OVER_CAMERA1 = 209,
    /** CAMERA2_G2S_LATENCY_OVER_CAMERA1 - CAMERA2_G2S_LATENCY_OVER_CAMERA1 (variant copied from TargetingProperty.Property) */
    CAMERA2_G2S_LATENCY_OVER_CAMERA1 = 210,
    /** IS_INTERNAL - IS_INTERNAL (variant copied from TargetingProperty.Property) */
    IS_INTERNAL = 211,
    /** IS_WEB - IS_WEB (variant copied from TargetingProperty.Property) */
    IS_WEB = 212,
    /** APP_OPEN_TO_MAP - APP_OPEN_TO_MAP (variant copied from TargetingProperty.Property) */
    APP_OPEN_TO_MAP = 213,
    /** APP_OPEN_TO_FRIENDSFEED - APP_OPEN_TO_FRIENDSFEED (variant copied from TargetingProperty.Property) */
    APP_OPEN_TO_FRIENDSFEED = 214,
    /** APP_OPEN_TO_LENSES - APP_OPEN_TO_LENSES (variant copied from TargetingProperty.Property) */
    APP_OPEN_TO_LENSES = 215,
    /** APP_OPEN_TO_MEMORIES - APP_OPEN_TO_MEMORIES (variant copied from TargetingProperty.Property) */
    APP_OPEN_TO_MEMORIES = 216,
    /** APP_OPEN_TO_COMMUNITY - APP_OPEN_TO_COMMUNITY (variant copied from TargetingProperty.Property) */
    APP_OPEN_TO_COMMUNITY = 217,
    /** APP_OPEN_TO_SPOTLIGHT - APP_OPEN_TO_SPOTLIGHT (variant copied from TargetingProperty.Property) */
    APP_OPEN_TO_SPOTLIGHT = 218,
    /** IS_IMPACTED_BY_PINC_893 - IS_IMPACTED_BY_PINC_893 (variant copied from TargetingProperty.Property) */
    IS_IMPACTED_BY_PINC_893 = 219,
    /** DAYS_BEFORE_BIRTHDAY - DAYS_BEFORE_BIRTHDAY (variant copied from TargetingProperty.Property) */
    DAYS_BEFORE_BIRTHDAY = 220,
    /** HAS_BIPA - HAS_BIPA (variant copied from TargetingProperty.Property) */
    HAS_BIPA = 221,
    /** SPOTLIGHT_STORY_ENGAGEMENT_STATUS - SPOTLIGHT_STORY_ENGAGEMENT_STATUS (variant copied from TargetingProperty.Property) */
    SPOTLIGHT_STORY_ENGAGEMENT_STATUS = 222,
    /** INCLUSION_PANEL_MEMBER - INCLUSION_PANEL_MEMBER (variant copied from TargetingProperty.Property) */
    INCLUSION_PANEL_MEMBER = 223,
    /** HEVC_HW_DECODER - HEVC_HW_DECODER (variant copied from TargetingProperty.Property) */
    HEVC_HW_DECODER = 224,
    /** HEVC_SW_DECODER - HEVC_SW_DECODER (variant copied from TargetingProperty.Property) */
    HEVC_SW_DECODER = 225,
    /**
     * HASH_MURMUR3_128_MOD_100 - Value of a Murmur3 hash of one of the hash_signals fields modulo 100
     * PropertyMetadata.signal_to_hash determines which field should be hashed
     */
    HASH_MURMUR3_128_MOD_100 = 226,
    /** HAS_ACTIVE_SNAPCHAT_PLUS - Whether user has active Snapchat+ subscription in Atlas's UserData plus_subscription_info property */
    HAS_ACTIVE_SNAPCHAT_PLUS = 227,
    /** SNAP_KIT_OAUTH_ID - OAuth Client ID identifying the source third party application for Snap Kit content */
    SNAP_KIT_OAUTH_ID = 228,
    /** ORGANIZATION_TYPE - Organization type of advertiser purchasing ads */
    ORGANIZATION_TYPE = 229,
    /**
     * CHUNK_UPLOAD_SUPPORT_REQUIRED - Client provided boolean that represent whether the config
     * needs to support uploading in a chunked/streaming manner
     */
    CHUNK_UPLOAD_SUPPORT_REQUIRED = 230,
    /** CLOUDFRONT_POP - The last known CloudFront Point of Presence used */
    CLOUDFRONT_POP = 231,
    /** BILLBOARD_CAMPAIGN_LOCAL_FIRST_IMPRESSION_TIME_SECS_TO_NOW - Billboard locally tracked first impresstion time to now */
    BILLBOARD_CAMPAIGN_LOCAL_FIRST_IMPRESSION_TIME_SECS_TO_NOW = 232,
    /** BILLBOARD_CAMPAIGN_LOCAL_CLICK_COUNT - Billboard locally tracked click count */
    BILLBOARD_CAMPAIGN_LOCAL_CLICK_COUNT = 233,
    /** BILLBOARD_CAMPAIGN_LOCAL_INTERACTION_COUNT - Billboard locally tracked interaction count */
    BILLBOARD_CAMPAIGN_LOCAL_INTERACTION_COUNT = 234,
    /** BILLBOARD_CAMPAIGN_LOCAL_LAST_INTERACTION_TIME_SECS_TO_NOW - Billboard locally tracked last interaction time to now */
    BILLBOARD_CAMPAIGN_LOCAL_LAST_INTERACTION_TIME_SECS_TO_NOW = 235,
    /** FST_LOCK_SCREEN_WIDGET_BILLBOARD_LAUNCHED_FROM_PUSH - Lock screen widgets billboard - app open via push notification */
    FST_LOCK_SCREEN_WIDGET_BILLBOARD_LAUNCHED_FROM_PUSH = 236,
    /** WEB_SCREEN_WIDTH - Web browser screen width in CSS pixels */
    WEB_SCREEN_WIDTH = 237,
    /** WEB_SCREEN_HEIGHT - Web browser screen height in CSS pixels */
    WEB_SCREEN_HEIGHT = 238,
    /** SUP_IOS_LOCK_SCREEN_WIDGET_ENABLED - iOS 16 lock screen widgets enabled */
    SUP_IOS_LOCK_SCREEN_WIDGET_ENABLED = 239,
    /** SNAP_PRIVACY - Atlas enum property that indicates a user's snap privacy settings (Friends vs. Everyone) */
    SNAP_PRIVACY = 240,
    /** ADS_INTERFACES_IS_NEW_ORGANIZATION - Is a new organization in ads interfaces UI */
    ADS_INTERFACES_IS_NEW_ORGANIZATION = 241,
    /** SERVER_ONLY - if true only server callers can get the config */
    SERVER_ONLY = 242,
    /** GHE_ORGANIZATION - The Github Enterprise organization */
    GHE_ORGANIZATION = 243,
    /** GHE_REPOSITORY - The Github Enterprise Repository, which is contained by a GHE organization */
    GHE_REPOSITORY = 244,
    /** GHE_USER_EMAIL - In the context of Machamp, the user identifier (email) */
    GHE_USER_EMAIL = 245,
    /** BUILD_DEFINITION_ID - In the context of Machamp, the build definition identifier is a UUID hash of the GHE organization and and repository. */
    BUILD_DEFINITION_ID = 246,
    /** BUILD_DEFINITION_NAME - In the context of Machamp, the build definition name is name of the build from the build.yaml */
    BUILD_DEFINITION_NAME = 247,
    /** LCA_PRINCIPAL - LCA Principal of the service calling Circumstance Engine */
    LCA_PRINCIPAL = 248,
    /**
     * MEDIA_PERFORMANCE_CLASS - A performance class defines a set of device capabilities by Android
     * e.g. 30, 31, See https://android-developers.googleblog.com/2022/03/using-performance-class-to-optimize.html
     */
    MEDIA_PERFORMANCE_CLASS = 249,
    /** COMMUNITY_COUNT - Number of Communities user is in */
    COMMUNITY_COUNT = 250,
    /** RECIPIENTS_SUPPORT_FMP4 - A boolean indicating whether a group of recipients support fMP4 playback */
    RECIPIENTS_SUPPORT_FMP4 = 251,
    /** SCREEN_ASPECT_RATIO - The screen aspect ratio. It's the result of SCREEN_WIDTH / SCREEN_HEIGHT */
    SCREEN_ASPECT_RATIO = 252,
    /**
     * USER_GROUP - USER GROUP. This property is not expected to ever be supported on any
     * of the clients, but is rather needed to signal to the client that a given
     * config depends on an unsupported property, so that the client can emit a metric
     */
    USER_GROUP = 253,
    /**
     * USER_HAS_DENIED_CAMERA_PERM - A boolean value indicating whether the user has denied camera permission. And the property
     * value would remain TRUE for users who have ever denied camera permission since first time
     * of reading the property value
     * New users are by default denied camera permission.
     *
     * @deprecated
     */
    USER_HAS_DENIED_CAMERA_PERM = 254,
    /**
     * CAMEOS_ENGAGEMENT_LEVEL - Cameos engagement level based on number of Cameos views in the last 7 days.
     * e.g. IDLE, CASUAL, REGULAR, POWER
     */
    CAMEOS_ENGAGEMENT_LEVEL = 255,
    /**
     * HAS_CAMEOS - Whether the user has Cameos.
     * e.g. TRUE, FALSE
     */
    HAS_CAMEOS = 256,
    /**
     * IS_ACTIVE_LENS_VIDEO_CHAT_USER - Whether the user has interacted with lenses in video chat in the last 7 days.
     * e.g. TRUE, FALSE
     */
    IS_ACTIVE_LENS_VIDEO_CHAT_USER = 257,
    /**
     * NUM_SPOTLIGHT_POSTS_L7 - The number of Spotlight posts a user has made in the last 7 days.
     * e.g. 0, 100, 1000
     */
    NUM_SPOTLIGHT_POSTS_L7 = 258,
    /**
     * NUM_MAP_POSTS_L7 - The number of Map posts a user has made in the last 7 days.
     * e.g. 0, 100, 1000
     */
    NUM_MAP_POSTS_L7 = 259,
    /**
     * HAS_CREATED_PUBLIC_PROFILE - Whether a user has created a public profile.
     * e.g. TRUE, FALSE
     */
    HAS_CREATED_PUBLIC_PROFILE = 260,
    /**
     * HAS_PUBLIC_PROFILE_ACCESS_VIA_ROLE - Whether a user has access to a public profile via a role.
     * e.g. TRUE, FALSE
     */
    HAS_PUBLIC_PROFILE_ACCESS_VIA_ROLE = 261,
    /**
     * DAYS_SINCE_LAST_CAMERA_PERM_DENY - Integer value represents the number of days since last time the user denied camera permission.
     * Default value is -1 if user has no record of denying camera permission (the user has granted camera permission permanently).
     */
    DAYS_SINCE_LAST_CAMERA_PERM_DENY = 262,
    /** DAYS_SINCE_AD_ORG_JOIN - The days since the user last joined an ads manager organization */
    DAYS_SINCE_AD_ORG_JOIN = 263,
    /** DAYS_SINCE_FIRST_AD_CREATE - The days since the user created an ad within ads manager via their ad organization */
    DAYS_SINCE_FIRST_AD_CREATE = 264,
    /** ORGANIZATION_COUNTRY - Organization country */
    ORGANIZATION_COUNTRY = 265,
    /** DAYS_SINCE_FIRST_DWEB_VISIT - The days since the user first visited dWeb (Web Chat) */
    DAYS_SINCE_FIRST_DWEB_VISIT = 266,
    /** DAYS_SINCE_LAST_DWEB_VISIT - The days since the user has last visited dWeb (Web Chat) */
    DAYS_SINCE_LAST_DWEB_VISIT = 267,
    /** WEEKS_SINCE_USING_DWEB - The weeks group in which the user has been absent from dWeb (Web Chat) */
    WEEKS_SINCE_USING_DWEB = 268,
    /** HAS_LENS - Whether a capture session has lens */
    HAS_LENS = 269,
    /**
     * BILLBOARD_SERVER_IMPRESSION_COUNT - Billboard Cooldown and Cap Unit will support these properties
     * Basic Counter for impression / click / dismiss
     */
    BILLBOARD_SERVER_IMPRESSION_COUNT = 270,
    BILLBOARD_SERVER_CLICK_COUNT = 271,
    BILLBOARD_SERVER_DISMISS_COUNT = 272,
    BILLBOARD_SERVER_INTERACTION_COUNT = 273,
    /** BILLBOARD_SERVER_FIRST_IMPRESSION_TIME_SECS_TO_NOW - Time to now signals in Seconds */
    BILLBOARD_SERVER_FIRST_IMPRESSION_TIME_SECS_TO_NOW = 274,
    BILLBOARD_SERVER_LAST_IMPRESSION_TIME_SECS_TO_NOW = 275,
    BILLBOARD_SERVER_FIRST_CLICK_TIME_SECS_TO_NOW = 276,
    BILLBOARD_SERVER_LAST_CLICK_TIME_SECS_TO_NOW = 277,
    BILLBOARD_SERVER_FIRST_DISMISS_TIME_SECS_TO_NOW = 278,
    BILLBOARD_SERVER_LAST_DISMISS_TIME_SECS_TO_NOW = 279,
    BILLBOARD_SERVER_FIRST_INTERACTION_TIME_SECS_TO_NOW = 280,
    BILLBOARD_SERVER_LAST_INTERACTION_TIME_SECS_TO_NOW = 281,
    /** BILLBOARD_SERVER_CONTINUOUS_DISMISS_COUNT - Continuous Counter */
    BILLBOARD_SERVER_CONTINUOUS_DISMISS_COUNT = 282,
    /** BILLBOARD_CAMPAIGN_LOCAL_FIRST_CLICK_TIME_SECS_TO_NOW - Billboard first click time to now */
    BILLBOARD_CAMPAIGN_LOCAL_FIRST_CLICK_TIME_SECS_TO_NOW = 283,
    /** BILLBOARD_CAMPAIGN_LOCAL_LAST_CLICK_TIME_SECS_TO_NOW - Billboard last click time to now */
    BILLBOARD_CAMPAIGN_LOCAL_LAST_CLICK_TIME_SECS_TO_NOW = 284,
    /** BILLBOARD_CAMPAIGN_LOCAL_FIRST_DISMISS_TIME_SECS_TO_NOW - Billboard first dismiss time to now */
    BILLBOARD_CAMPAIGN_LOCAL_FIRST_DISMISS_TIME_SECS_TO_NOW = 285,
    /** BILLBOARD_CAMPAIGN_LOCAL_LAST_DISMISS_TIME_SECS_TO_NOW - Billboard last dismiss time to now */
    BILLBOARD_CAMPAIGN_LOCAL_LAST_DISMISS_TIME_SECS_TO_NOW = 286,
    /** BILLBOARD_CAMPAIGN_LOCAL_FIRST_INTERACTION_TIME_SECS_TO_NOW - Billboard locally tracked first interaction time to now */
    BILLBOARD_CAMPAIGN_LOCAL_FIRST_INTERACTION_TIME_SECS_TO_NOW = 287,
    UNRECOGNIZED = -1
}
export interface ClientTargetingExpression_PropertyMetadata {
    /** Sup property's item id */
    itemId: number;
    /** Which field of feature_provided_signals.hash_signals to hash */
    signalToHash: ClientTargetingExpression_PropertyMetadata_SignalToHash;
    /**
     * Namespace string, supplied by the AB service to included
     * in HASH_MURMUR3_128_MOD_100 evaluation
     */
    abNamespaceForHashing: string;
    /**
     * Seed string, supplied by the AB service to included
     * in HASH_MURMUR3_128_MOD_100 evaluation
     */
    abSeedForHashing: string;
}
/**
 * Which field of feature_provided_signals.hash_signals to hash
 * To be used by the HASH_MURMUR3_128_MOD_100 property only
 */
export declare enum ClientTargetingExpression_PropertyMetadata_SignalToHash {
    /** UNKNOWN_SIGNAL_TO_HASH - Unset variant */
    UNKNOWN_SIGNAL_TO_HASH = 0,
    /**
     * HASH_SEED_AND_USER_ID - Indicates that seed+user_id string should be hashed
     * (namespace is supplied by the server, user_id - by the client)
     */
    HASH_SEED_AND_USER_ID = 1,
    /**
     * HASH_USER_ID_AND_NAMESPACE - Indicates that used_id+namespace string should be hashed
     * (seed is supplied by the server, user_id - by the client)
     */
    HASH_USER_ID_AND_NAMESPACE = 2,
    UNRECOGNIZED = -1
}
export declare const ConfigResult: {
    encode(message: ConfigResult, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResult;
    fromPartial<I extends {
        configId?: string | undefined;
        value?: {
            intValue?: number | undefined;
            longValue?: number | undefined;
            floatValue?: number | undefined;
            doubleValue?: number | undefined;
            boolValue?: boolean | undefined;
            stringValue?: string | undefined;
            anyValue?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } | undefined;
            mapValue?: {
                records?: {
                    key?: string | undefined;
                    value?: string | undefined;
                }[] | undefined;
            } | undefined;
            intPairValue?: number | undefined;
        } | undefined;
        targetingExpression?: {
            operator?: ClientTargetingExpression_Operator | undefined;
            children?: any[] | undefined;
            property?: ClientTargetingExpression_Property | undefined;
            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
            value?: {
                intValue?: number | undefined;
                longValue?: number | undefined;
                floatValue?: number | undefined;
                doubleValue?: number | undefined;
                boolValue?: boolean | undefined;
                stringValue?: string | undefined;
                anyValue?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                mapValue?: {
                    records?: {
                        key?: string | undefined;
                        value?: string | undefined;
                    }[] | undefined;
                } | undefined;
                intPairValue?: number | undefined;
            } | undefined;
            propertyMetadata?: {
                itemId?: number | undefined;
                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                abNamespaceForHashing?: string | undefined;
                abSeedForHashing?: string | undefined;
            } | undefined;
        } | undefined;
        ttlSeconds?: number | undefined;
        configRuleUuidBytes?: Uint8Array | undefined;
        priority?: number | undefined;
        namespace?: Namespace | undefined;
        studyName?: string | undefined;
        experimentId?: number | undefined;
        delete?: boolean | undefined;
        servePlatforms?: ConfigResult_ServePlatform[] | undefined;
        sequenceId?: number | undefined;
        ruidType?: Ruid_Type | undefined;
        segmentOrdinal?: number | undefined;
        generatedFromAbAllowlists?: boolean | undefined;
    } & {
        configId?: string | undefined;
        value?: ({
            intValue?: number | undefined;
            longValue?: number | undefined;
            floatValue?: number | undefined;
            doubleValue?: number | undefined;
            boolValue?: boolean | undefined;
            stringValue?: string | undefined;
            anyValue?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } | undefined;
            mapValue?: {
                records?: {
                    key?: string | undefined;
                    value?: string | undefined;
                }[] | undefined;
            } | undefined;
            intPairValue?: number | undefined;
        } & {
            intValue?: number | undefined;
            longValue?: number | undefined;
            floatValue?: number | undefined;
            doubleValue?: number | undefined;
            boolValue?: boolean | undefined;
            stringValue?: string | undefined;
            anyValue?: ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & Record<Exclude<keyof I["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
            mapValue?: ({
                records?: {
                    key?: string | undefined;
                    value?: string | undefined;
                }[] | undefined;
            } & {
                records?: ({
                    key?: string | undefined;
                    value?: string | undefined;
                }[] & ({
                    key?: string | undefined;
                    value?: string | undefined;
                } & {
                    key?: string | undefined;
                    value?: string | undefined;
                } & Record<Exclude<keyof I["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["value"]["mapValue"]["records"], keyof {
                    key?: string | undefined;
                    value?: string | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["value"]["mapValue"], "records">, never>) | undefined;
            intPairValue?: number | undefined;
        } & Record<Exclude<keyof I["value"], keyof Value>, never>) | undefined;
        targetingExpression?: ({
            operator?: ClientTargetingExpression_Operator | undefined;
            children?: any[] | undefined;
            property?: ClientTargetingExpression_Property | undefined;
            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
            value?: {
                intValue?: number | undefined;
                longValue?: number | undefined;
                floatValue?: number | undefined;
                doubleValue?: number | undefined;
                boolValue?: boolean | undefined;
                stringValue?: string | undefined;
                anyValue?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                mapValue?: {
                    records?: {
                        key?: string | undefined;
                        value?: string | undefined;
                    }[] | undefined;
                } | undefined;
                intPairValue?: number | undefined;
            } | undefined;
            propertyMetadata?: {
                itemId?: number | undefined;
                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                abNamespaceForHashing?: string | undefined;
                abSeedForHashing?: string | undefined;
            } | undefined;
        } & {
            operator?: ClientTargetingExpression_Operator | undefined;
            children?: (any[] & ({
                operator?: ClientTargetingExpression_Operator | undefined;
                children?: any[] | undefined;
                property?: ClientTargetingExpression_Property | undefined;
                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                value?: {
                    intValue?: number | undefined;
                    longValue?: number | undefined;
                    floatValue?: number | undefined;
                    doubleValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    stringValue?: string | undefined;
                    anyValue?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    mapValue?: {
                        records?: {
                            key?: string | undefined;
                            value?: string | undefined;
                        }[] | undefined;
                    } | undefined;
                    intPairValue?: number | undefined;
                } | undefined;
                propertyMetadata?: {
                    itemId?: number | undefined;
                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                    abNamespaceForHashing?: string | undefined;
                    abSeedForHashing?: string | undefined;
                } | undefined;
            } & {
                operator?: ClientTargetingExpression_Operator | undefined;
                children?: (any[] & ({
                    operator?: ClientTargetingExpression_Operator | undefined;
                    children?: any[] | undefined;
                    property?: ClientTargetingExpression_Property | undefined;
                    predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                    value?: {
                        intValue?: number | undefined;
                        longValue?: number | undefined;
                        floatValue?: number | undefined;
                        doubleValue?: number | undefined;
                        boolValue?: boolean | undefined;
                        stringValue?: string | undefined;
                        anyValue?: {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        } | undefined;
                        mapValue?: {
                            records?: {
                                key?: string | undefined;
                                value?: string | undefined;
                            }[] | undefined;
                        } | undefined;
                        intPairValue?: number | undefined;
                    } | undefined;
                    propertyMetadata?: {
                        itemId?: number | undefined;
                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                        abNamespaceForHashing?: string | undefined;
                        abSeedForHashing?: string | undefined;
                    } | undefined;
                } & {
                    operator?: ClientTargetingExpression_Operator | undefined;
                    children?: (any[] & ({
                        operator?: ClientTargetingExpression_Operator | undefined;
                        children?: any[] | undefined;
                        property?: ClientTargetingExpression_Property | undefined;
                        predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                        value?: {
                            intValue?: number | undefined;
                            longValue?: number | undefined;
                            floatValue?: number | undefined;
                            doubleValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            stringValue?: string | undefined;
                            anyValue?: {
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            } | undefined;
                            mapValue?: {
                                records?: {
                                    key?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                            } | undefined;
                            intPairValue?: number | undefined;
                        } | undefined;
                        propertyMetadata?: {
                            itemId?: number | undefined;
                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                            abNamespaceForHashing?: string | undefined;
                            abSeedForHashing?: string | undefined;
                        } | undefined;
                    } & {
                        operator?: ClientTargetingExpression_Operator | undefined;
                        children?: (any[] & ({
                            operator?: ClientTargetingExpression_Operator | undefined;
                            children?: any[] | undefined;
                            property?: ClientTargetingExpression_Property | undefined;
                            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                            value?: {
                                intValue?: number | undefined;
                                longValue?: number | undefined;
                                floatValue?: number | undefined;
                                doubleValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                stringValue?: string | undefined;
                                anyValue?: {
                                    typeUrl?: string | undefined;
                                    value?: Uint8Array | undefined;
                                } | undefined;
                                mapValue?: {
                                    records?: {
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    }[] | undefined;
                                } | undefined;
                                intPairValue?: number | undefined;
                            } | undefined;
                            propertyMetadata?: {
                                itemId?: number | undefined;
                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                abNamespaceForHashing?: string | undefined;
                                abSeedForHashing?: string | undefined;
                            } | undefined;
                        } & {
                            operator?: ClientTargetingExpression_Operator | undefined;
                            children?: (any[] & ({
                                operator?: ClientTargetingExpression_Operator | undefined;
                                children?: any[] | undefined;
                                property?: ClientTargetingExpression_Property | undefined;
                                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                value?: {
                                    intValue?: number | undefined;
                                    longValue?: number | undefined;
                                    floatValue?: number | undefined;
                                    doubleValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    anyValue?: {
                                        typeUrl?: string | undefined;
                                        value?: Uint8Array | undefined;
                                    } | undefined;
                                    mapValue?: {
                                        records?: {
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    intPairValue?: number | undefined;
                                } | undefined;
                                propertyMetadata?: {
                                    itemId?: number | undefined;
                                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                    abNamespaceForHashing?: string | undefined;
                                    abSeedForHashing?: string | undefined;
                                } | undefined;
                            } & {
                                operator?: ClientTargetingExpression_Operator | undefined;
                                children?: (any[] & ({
                                    operator?: ClientTargetingExpression_Operator | undefined;
                                    children?: any[] | undefined;
                                    property?: ClientTargetingExpression_Property | undefined;
                                    predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                    value?: {
                                        intValue?: number | undefined;
                                        longValue?: number | undefined;
                                        floatValue?: number | undefined;
                                        doubleValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        anyValue?: {
                                            typeUrl?: string | undefined;
                                            value?: Uint8Array | undefined;
                                        } | undefined;
                                        mapValue?: {
                                            records?: {
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            }[] | undefined;
                                        } | undefined;
                                        intPairValue?: number | undefined;
                                    } | undefined;
                                    propertyMetadata?: {
                                        itemId?: number | undefined;
                                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                        abNamespaceForHashing?: string | undefined;
                                        abSeedForHashing?: string | undefined;
                                    } | undefined;
                                } & {
                                    operator?: ClientTargetingExpression_Operator | undefined;
                                    children?: (any[] & ({
                                        operator?: ClientTargetingExpression_Operator | undefined;
                                        children?: any[] | undefined;
                                        property?: ClientTargetingExpression_Property | undefined;
                                        predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                        value?: {
                                            intValue?: number | undefined;
                                            longValue?: number | undefined;
                                            floatValue?: number | undefined;
                                            doubleValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            anyValue?: {
                                                typeUrl?: string | undefined;
                                                value?: Uint8Array | undefined;
                                            } | undefined;
                                            mapValue?: {
                                                records?: {
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                }[] | undefined;
                                            } | undefined;
                                            intPairValue?: number | undefined;
                                        } | undefined;
                                        propertyMetadata?: {
                                            itemId?: number | undefined;
                                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                            abNamespaceForHashing?: string | undefined;
                                            abSeedForHashing?: string | undefined;
                                        } | undefined;
                                    } & {
                                        operator?: ClientTargetingExpression_Operator | undefined;
                                        children?: (any[] & ({
                                            operator?: ClientTargetingExpression_Operator | undefined;
                                            children?: any[] | undefined;
                                            property?: ClientTargetingExpression_Property | undefined;
                                            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                            value?: {
                                                intValue?: number | undefined;
                                                longValue?: number | undefined;
                                                floatValue?: number | undefined;
                                                doubleValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                anyValue?: {
                                                    typeUrl?: string | undefined;
                                                    value?: Uint8Array | undefined;
                                                } | undefined;
                                                mapValue?: {
                                                    records?: {
                                                        key?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                } | undefined;
                                                intPairValue?: number | undefined;
                                            } | undefined;
                                            propertyMetadata?: {
                                                itemId?: number | undefined;
                                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                abNamespaceForHashing?: string | undefined;
                                                abSeedForHashing?: string | undefined;
                                            } | undefined;
                                        } & {
                                            operator?: ClientTargetingExpression_Operator | undefined;
                                            children?: (any[] & ({
                                                operator?: ClientTargetingExpression_Operator | undefined;
                                                children?: any[] | undefined;
                                                property?: ClientTargetingExpression_Property | undefined;
                                                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                                value?: {
                                                    intValue?: number | undefined;
                                                    longValue?: number | undefined;
                                                    floatValue?: number | undefined;
                                                    doubleValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    anyValue?: {
                                                        typeUrl?: string | undefined;
                                                        value?: Uint8Array | undefined;
                                                    } | undefined;
                                                    mapValue?: {
                                                        records?: {
                                                            key?: string | undefined;
                                                            value?: string | undefined;
                                                        }[] | undefined;
                                                    } | undefined;
                                                    intPairValue?: number | undefined;
                                                } | undefined;
                                                propertyMetadata?: {
                                                    itemId?: number | undefined;
                                                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                    abNamespaceForHashing?: string | undefined;
                                                    abSeedForHashing?: string | undefined;
                                                } | undefined;
                                            } & {
                                                operator?: ClientTargetingExpression_Operator | undefined;
                                                children?: (any[] & ({
                                                    operator?: ClientTargetingExpression_Operator | undefined;
                                                    children?: any[] | undefined;
                                                    property?: ClientTargetingExpression_Property | undefined;
                                                    predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                                    value?: {
                                                        intValue?: number | undefined;
                                                        longValue?: number | undefined;
                                                        floatValue?: number | undefined;
                                                        doubleValue?: number | undefined;
                                                        boolValue?: boolean | undefined;
                                                        stringValue?: string | undefined;
                                                        anyValue?: {
                                                            typeUrl?: string | undefined;
                                                            value?: Uint8Array | undefined;
                                                        } | undefined;
                                                        mapValue?: {
                                                            records?: {
                                                                key?: string | undefined;
                                                                value?: string | undefined;
                                                            }[] | undefined;
                                                        } | undefined;
                                                        intPairValue?: number | undefined;
                                                    } | undefined;
                                                    propertyMetadata?: {
                                                        itemId?: number | undefined;
                                                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                        abNamespaceForHashing?: string | undefined;
                                                        abSeedForHashing?: string | undefined;
                                                    } | undefined;
                                                } & any & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                                                property?: ClientTargetingExpression_Property | undefined;
                                                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                                value?: ({
                                                    intValue?: number | undefined;
                                                    longValue?: number | undefined;
                                                    floatValue?: number | undefined;
                                                    doubleValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    anyValue?: {
                                                        typeUrl?: string | undefined;
                                                        value?: Uint8Array | undefined;
                                                    } | undefined;
                                                    mapValue?: {
                                                        records?: {
                                                            key?: string | undefined;
                                                            value?: string | undefined;
                                                        }[] | undefined;
                                                    } | undefined;
                                                    intPairValue?: number | undefined;
                                                } & any & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                                                propertyMetadata?: ({
                                                    itemId?: number | undefined;
                                                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                    abNamespaceForHashing?: string | undefined;
                                                    abSeedForHashing?: string | undefined;
                                                } & any & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                                            } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                                            property?: ClientTargetingExpression_Property | undefined;
                                            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                            value?: ({
                                                intValue?: number | undefined;
                                                longValue?: number | undefined;
                                                floatValue?: number | undefined;
                                                doubleValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                anyValue?: {
                                                    typeUrl?: string | undefined;
                                                    value?: Uint8Array | undefined;
                                                } | undefined;
                                                mapValue?: {
                                                    records?: {
                                                        key?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                } | undefined;
                                                intPairValue?: number | undefined;
                                            } & {
                                                intValue?: number | undefined;
                                                longValue?: number | undefined;
                                                floatValue?: number | undefined;
                                                doubleValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                anyValue?: ({
                                                    typeUrl?: string | undefined;
                                                    value?: Uint8Array | undefined;
                                                } & any & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                                                mapValue?: ({
                                                    records?: {
                                                        key?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                } & any & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                                                intPairValue?: number | undefined;
                                            } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                                            propertyMetadata?: ({
                                                itemId?: number | undefined;
                                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                abNamespaceForHashing?: string | undefined;
                                                abSeedForHashing?: string | undefined;
                                            } & {
                                                itemId?: number | undefined;
                                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                abNamespaceForHashing?: string | undefined;
                                                abSeedForHashing?: string | undefined;
                                            } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                                        } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                                        property?: ClientTargetingExpression_Property | undefined;
                                        predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                        value?: ({
                                            intValue?: number | undefined;
                                            longValue?: number | undefined;
                                            floatValue?: number | undefined;
                                            doubleValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            anyValue?: {
                                                typeUrl?: string | undefined;
                                                value?: Uint8Array | undefined;
                                            } | undefined;
                                            mapValue?: {
                                                records?: {
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                }[] | undefined;
                                            } | undefined;
                                            intPairValue?: number | undefined;
                                        } & {
                                            intValue?: number | undefined;
                                            longValue?: number | undefined;
                                            floatValue?: number | undefined;
                                            doubleValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            anyValue?: ({
                                                typeUrl?: string | undefined;
                                                value?: Uint8Array | undefined;
                                            } & {
                                                typeUrl?: string | undefined;
                                                value?: Uint8Array | undefined;
                                            } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                                            mapValue?: ({
                                                records?: {
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                }[] | undefined;
                                            } & {
                                                records?: ({
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                }[] & ({
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                } & any & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                }[]>, never>) | undefined;
                                            } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                                            intPairValue?: number | undefined;
                                        } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                                        propertyMetadata?: ({
                                            itemId?: number | undefined;
                                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                            abNamespaceForHashing?: string | undefined;
                                            abSeedForHashing?: string | undefined;
                                        } & {
                                            itemId?: number | undefined;
                                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                            abNamespaceForHashing?: string | undefined;
                                            abSeedForHashing?: string | undefined;
                                        } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                                    } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                                    property?: ClientTargetingExpression_Property | undefined;
                                    predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                    value?: ({
                                        intValue?: number | undefined;
                                        longValue?: number | undefined;
                                        floatValue?: number | undefined;
                                        doubleValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        anyValue?: {
                                            typeUrl?: string | undefined;
                                            value?: Uint8Array | undefined;
                                        } | undefined;
                                        mapValue?: {
                                            records?: {
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            }[] | undefined;
                                        } | undefined;
                                        intPairValue?: number | undefined;
                                    } & {
                                        intValue?: number | undefined;
                                        longValue?: number | undefined;
                                        floatValue?: number | undefined;
                                        doubleValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        anyValue?: ({
                                            typeUrl?: string | undefined;
                                            value?: Uint8Array | undefined;
                                        } & {
                                            typeUrl?: string | undefined;
                                            value?: Uint8Array | undefined;
                                        } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                                        mapValue?: ({
                                            records?: {
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            }[] | undefined;
                                        } & {
                                            records?: ({
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            }[] & ({
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            } & {
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            }[]>, never>) | undefined;
                                        } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                                        intPairValue?: number | undefined;
                                    } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                                    propertyMetadata?: ({
                                        itemId?: number | undefined;
                                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                        abNamespaceForHashing?: string | undefined;
                                        abSeedForHashing?: string | undefined;
                                    } & {
                                        itemId?: number | undefined;
                                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                        abNamespaceForHashing?: string | undefined;
                                        abSeedForHashing?: string | undefined;
                                    } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                                } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                                property?: ClientTargetingExpression_Property | undefined;
                                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                value?: ({
                                    intValue?: number | undefined;
                                    longValue?: number | undefined;
                                    floatValue?: number | undefined;
                                    doubleValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    anyValue?: {
                                        typeUrl?: string | undefined;
                                        value?: Uint8Array | undefined;
                                    } | undefined;
                                    mapValue?: {
                                        records?: {
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    intPairValue?: number | undefined;
                                } & {
                                    intValue?: number | undefined;
                                    longValue?: number | undefined;
                                    floatValue?: number | undefined;
                                    doubleValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    anyValue?: ({
                                        typeUrl?: string | undefined;
                                        value?: Uint8Array | undefined;
                                    } & {
                                        typeUrl?: string | undefined;
                                        value?: Uint8Array | undefined;
                                    } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                                    mapValue?: ({
                                        records?: {
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        }[] | undefined;
                                    } & {
                                        records?: ({
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        }[] & ({
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        } & {
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        }[]>, never>) | undefined;
                                    } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                                    intPairValue?: number | undefined;
                                } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                                propertyMetadata?: ({
                                    itemId?: number | undefined;
                                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                    abNamespaceForHashing?: string | undefined;
                                    abSeedForHashing?: string | undefined;
                                } & {
                                    itemId?: number | undefined;
                                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                    abNamespaceForHashing?: string | undefined;
                                    abSeedForHashing?: string | undefined;
                                } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                            } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                            property?: ClientTargetingExpression_Property | undefined;
                            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                            value?: ({
                                intValue?: number | undefined;
                                longValue?: number | undefined;
                                floatValue?: number | undefined;
                                doubleValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                stringValue?: string | undefined;
                                anyValue?: {
                                    typeUrl?: string | undefined;
                                    value?: Uint8Array | undefined;
                                } | undefined;
                                mapValue?: {
                                    records?: {
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    }[] | undefined;
                                } | undefined;
                                intPairValue?: number | undefined;
                            } & {
                                intValue?: number | undefined;
                                longValue?: number | undefined;
                                floatValue?: number | undefined;
                                doubleValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                stringValue?: string | undefined;
                                anyValue?: ({
                                    typeUrl?: string | undefined;
                                    value?: Uint8Array | undefined;
                                } & {
                                    typeUrl?: string | undefined;
                                    value?: Uint8Array | undefined;
                                } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                                mapValue?: ({
                                    records?: {
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    }[] | undefined;
                                } & {
                                    records?: ({
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    }[] & ({
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    } & {
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    }[]>, never>) | undefined;
                                } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                                intPairValue?: number | undefined;
                            } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                            propertyMetadata?: ({
                                itemId?: number | undefined;
                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                abNamespaceForHashing?: string | undefined;
                                abSeedForHashing?: string | undefined;
                            } & {
                                itemId?: number | undefined;
                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                abNamespaceForHashing?: string | undefined;
                                abSeedForHashing?: string | undefined;
                            } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                        } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                        property?: ClientTargetingExpression_Property | undefined;
                        predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                        value?: ({
                            intValue?: number | undefined;
                            longValue?: number | undefined;
                            floatValue?: number | undefined;
                            doubleValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            stringValue?: string | undefined;
                            anyValue?: {
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            } | undefined;
                            mapValue?: {
                                records?: {
                                    key?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                            } | undefined;
                            intPairValue?: number | undefined;
                        } & {
                            intValue?: number | undefined;
                            longValue?: number | undefined;
                            floatValue?: number | undefined;
                            doubleValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            stringValue?: string | undefined;
                            anyValue?: ({
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            } & {
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                            mapValue?: ({
                                records?: {
                                    key?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                            } & {
                                records?: ({
                                    key?: string | undefined;
                                    value?: string | undefined;
                                }[] & ({
                                    key?: string | undefined;
                                    value?: string | undefined;
                                } & {
                                    key?: string | undefined;
                                    value?: string | undefined;
                                } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                    key?: string | undefined;
                                    value?: string | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                            intPairValue?: number | undefined;
                        } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                        propertyMetadata?: ({
                            itemId?: number | undefined;
                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                            abNamespaceForHashing?: string | undefined;
                            abSeedForHashing?: string | undefined;
                        } & {
                            itemId?: number | undefined;
                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                            abNamespaceForHashing?: string | undefined;
                            abSeedForHashing?: string | undefined;
                        } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                    } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                    property?: ClientTargetingExpression_Property | undefined;
                    predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                    value?: ({
                        intValue?: number | undefined;
                        longValue?: number | undefined;
                        floatValue?: number | undefined;
                        doubleValue?: number | undefined;
                        boolValue?: boolean | undefined;
                        stringValue?: string | undefined;
                        anyValue?: {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        } | undefined;
                        mapValue?: {
                            records?: {
                                key?: string | undefined;
                                value?: string | undefined;
                            }[] | undefined;
                        } | undefined;
                        intPairValue?: number | undefined;
                    } & {
                        intValue?: number | undefined;
                        longValue?: number | undefined;
                        floatValue?: number | undefined;
                        doubleValue?: number | undefined;
                        boolValue?: boolean | undefined;
                        stringValue?: string | undefined;
                        anyValue?: ({
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        } & {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                        mapValue?: ({
                            records?: {
                                key?: string | undefined;
                                value?: string | undefined;
                            }[] | undefined;
                        } & {
                            records?: ({
                                key?: string | undefined;
                                value?: string | undefined;
                            }[] & ({
                                key?: string | undefined;
                                value?: string | undefined;
                            } & {
                                key?: string | undefined;
                                value?: string | undefined;
                            } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                key?: string | undefined;
                                value?: string | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                        intPairValue?: number | undefined;
                    } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                    propertyMetadata?: ({
                        itemId?: number | undefined;
                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                        abNamespaceForHashing?: string | undefined;
                        abSeedForHashing?: string | undefined;
                    } & {
                        itemId?: number | undefined;
                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                        abNamespaceForHashing?: string | undefined;
                        abSeedForHashing?: string | undefined;
                    } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"][number]["children"], keyof any[]>, never>) | undefined;
                property?: ClientTargetingExpression_Property | undefined;
                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                value?: ({
                    intValue?: number | undefined;
                    longValue?: number | undefined;
                    floatValue?: number | undefined;
                    doubleValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    stringValue?: string | undefined;
                    anyValue?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    mapValue?: {
                        records?: {
                            key?: string | undefined;
                            value?: string | undefined;
                        }[] | undefined;
                    } | undefined;
                    intPairValue?: number | undefined;
                } & {
                    intValue?: number | undefined;
                    longValue?: number | undefined;
                    floatValue?: number | undefined;
                    doubleValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    stringValue?: string | undefined;
                    anyValue?: ({
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                    mapValue?: ({
                        records?: {
                            key?: string | undefined;
                            value?: string | undefined;
                        }[] | undefined;
                    } & {
                        records?: ({
                            key?: string | undefined;
                            value?: string | undefined;
                        }[] & ({
                            key?: string | undefined;
                            value?: string | undefined;
                        } & {
                            key?: string | undefined;
                            value?: string | undefined;
                        } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"][number]["value"]["mapValue"]["records"], keyof {
                            key?: string | undefined;
                            value?: string | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                    intPairValue?: number | undefined;
                } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["value"], keyof Value>, never>) | undefined;
                propertyMetadata?: ({
                    itemId?: number | undefined;
                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                    abNamespaceForHashing?: string | undefined;
                    abSeedForHashing?: string | undefined;
                } & {
                    itemId?: number | undefined;
                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                    abNamespaceForHashing?: string | undefined;
                    abSeedForHashing?: string | undefined;
                } & Record<Exclude<keyof I["targetingExpression"]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
            } & Record<Exclude<keyof I["targetingExpression"]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["children"], keyof any[]>, never>) | undefined;
            property?: ClientTargetingExpression_Property | undefined;
            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
            value?: ({
                intValue?: number | undefined;
                longValue?: number | undefined;
                floatValue?: number | undefined;
                doubleValue?: number | undefined;
                boolValue?: boolean | undefined;
                stringValue?: string | undefined;
                anyValue?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                mapValue?: {
                    records?: {
                        key?: string | undefined;
                        value?: string | undefined;
                    }[] | undefined;
                } | undefined;
                intPairValue?: number | undefined;
            } & {
                intValue?: number | undefined;
                longValue?: number | undefined;
                floatValue?: number | undefined;
                doubleValue?: number | undefined;
                boolValue?: boolean | undefined;
                stringValue?: string | undefined;
                anyValue?: ({
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["targetingExpression"]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                mapValue?: ({
                    records?: {
                        key?: string | undefined;
                        value?: string | undefined;
                    }[] | undefined;
                } & {
                    records?: ({
                        key?: string | undefined;
                        value?: string | undefined;
                    }[] & ({
                        key?: string | undefined;
                        value?: string | undefined;
                    } & {
                        key?: string | undefined;
                        value?: string | undefined;
                    } & Record<Exclude<keyof I["targetingExpression"]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["targetingExpression"]["value"]["mapValue"]["records"], keyof {
                        key?: string | undefined;
                        value?: string | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I["targetingExpression"]["value"]["mapValue"], "records">, never>) | undefined;
                intPairValue?: number | undefined;
            } & Record<Exclude<keyof I["targetingExpression"]["value"], keyof Value>, never>) | undefined;
            propertyMetadata?: ({
                itemId?: number | undefined;
                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                abNamespaceForHashing?: string | undefined;
                abSeedForHashing?: string | undefined;
            } & {
                itemId?: number | undefined;
                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                abNamespaceForHashing?: string | undefined;
                abSeedForHashing?: string | undefined;
            } & Record<Exclude<keyof I["targetingExpression"]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
        } & Record<Exclude<keyof I["targetingExpression"], keyof ClientTargetingExpression>, never>) | undefined;
        ttlSeconds?: number | undefined;
        configRuleUuidBytes?: Uint8Array | undefined;
        priority?: number | undefined;
        namespace?: Namespace | undefined;
        studyName?: string | undefined;
        experimentId?: number | undefined;
        delete?: boolean | undefined;
        servePlatforms?: (ConfigResult_ServePlatform[] & ConfigResult_ServePlatform[] & Record<Exclude<keyof I["servePlatforms"], keyof ConfigResult_ServePlatform[]>, never>) | undefined;
        sequenceId?: number | undefined;
        ruidType?: Ruid_Type | undefined;
        segmentOrdinal?: number | undefined;
        generatedFromAbAllowlists?: boolean | undefined;
    } & Record<Exclude<keyof I, keyof ConfigResult>, never>>(object: I): ConfigResult;
};
export declare const ConfigResultBundle: {
    encode(message: ConfigResultBundle, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResultBundle;
    fromPartial<I extends {
        etag?: string | undefined;
        configResults?: {
            configId?: string | undefined;
            value?: {
                intValue?: number | undefined;
                longValue?: number | undefined;
                floatValue?: number | undefined;
                doubleValue?: number | undefined;
                boolValue?: boolean | undefined;
                stringValue?: string | undefined;
                anyValue?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                mapValue?: {
                    records?: {
                        key?: string | undefined;
                        value?: string | undefined;
                    }[] | undefined;
                } | undefined;
                intPairValue?: number | undefined;
            } | undefined;
            targetingExpression?: {
                operator?: ClientTargetingExpression_Operator | undefined;
                children?: any[] | undefined;
                property?: ClientTargetingExpression_Property | undefined;
                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                value?: {
                    intValue?: number | undefined;
                    longValue?: number | undefined;
                    floatValue?: number | undefined;
                    doubleValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    stringValue?: string | undefined;
                    anyValue?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    mapValue?: {
                        records?: {
                            key?: string | undefined;
                            value?: string | undefined;
                        }[] | undefined;
                    } | undefined;
                    intPairValue?: number | undefined;
                } | undefined;
                propertyMetadata?: {
                    itemId?: number | undefined;
                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                    abNamespaceForHashing?: string | undefined;
                    abSeedForHashing?: string | undefined;
                } | undefined;
            } | undefined;
            ttlSeconds?: number | undefined;
            configRuleUuidBytes?: Uint8Array | undefined;
            priority?: number | undefined;
            namespace?: Namespace | undefined;
            studyName?: string | undefined;
            experimentId?: number | undefined;
            delete?: boolean | undefined;
            servePlatforms?: ConfigResult_ServePlatform[] | undefined;
            sequenceId?: number | undefined;
            ruidType?: Ruid_Type | undefined;
            segmentOrdinal?: number | undefined;
            generatedFromAbAllowlists?: boolean | undefined;
        }[] | undefined;
    } & {
        etag?: string | undefined;
        configResults?: ({
            configId?: string | undefined;
            value?: {
                intValue?: number | undefined;
                longValue?: number | undefined;
                floatValue?: number | undefined;
                doubleValue?: number | undefined;
                boolValue?: boolean | undefined;
                stringValue?: string | undefined;
                anyValue?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                mapValue?: {
                    records?: {
                        key?: string | undefined;
                        value?: string | undefined;
                    }[] | undefined;
                } | undefined;
                intPairValue?: number | undefined;
            } | undefined;
            targetingExpression?: {
                operator?: ClientTargetingExpression_Operator | undefined;
                children?: any[] | undefined;
                property?: ClientTargetingExpression_Property | undefined;
                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                value?: {
                    intValue?: number | undefined;
                    longValue?: number | undefined;
                    floatValue?: number | undefined;
                    doubleValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    stringValue?: string | undefined;
                    anyValue?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    mapValue?: {
                        records?: {
                            key?: string | undefined;
                            value?: string | undefined;
                        }[] | undefined;
                    } | undefined;
                    intPairValue?: number | undefined;
                } | undefined;
                propertyMetadata?: {
                    itemId?: number | undefined;
                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                    abNamespaceForHashing?: string | undefined;
                    abSeedForHashing?: string | undefined;
                } | undefined;
            } | undefined;
            ttlSeconds?: number | undefined;
            configRuleUuidBytes?: Uint8Array | undefined;
            priority?: number | undefined;
            namespace?: Namespace | undefined;
            studyName?: string | undefined;
            experimentId?: number | undefined;
            delete?: boolean | undefined;
            servePlatforms?: ConfigResult_ServePlatform[] | undefined;
            sequenceId?: number | undefined;
            ruidType?: Ruid_Type | undefined;
            segmentOrdinal?: number | undefined;
            generatedFromAbAllowlists?: boolean | undefined;
        }[] & ({
            configId?: string | undefined;
            value?: {
                intValue?: number | undefined;
                longValue?: number | undefined;
                floatValue?: number | undefined;
                doubleValue?: number | undefined;
                boolValue?: boolean | undefined;
                stringValue?: string | undefined;
                anyValue?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                mapValue?: {
                    records?: {
                        key?: string | undefined;
                        value?: string | undefined;
                    }[] | undefined;
                } | undefined;
                intPairValue?: number | undefined;
            } | undefined;
            targetingExpression?: {
                operator?: ClientTargetingExpression_Operator | undefined;
                children?: any[] | undefined;
                property?: ClientTargetingExpression_Property | undefined;
                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                value?: {
                    intValue?: number | undefined;
                    longValue?: number | undefined;
                    floatValue?: number | undefined;
                    doubleValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    stringValue?: string | undefined;
                    anyValue?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    mapValue?: {
                        records?: {
                            key?: string | undefined;
                            value?: string | undefined;
                        }[] | undefined;
                    } | undefined;
                    intPairValue?: number | undefined;
                } | undefined;
                propertyMetadata?: {
                    itemId?: number | undefined;
                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                    abNamespaceForHashing?: string | undefined;
                    abSeedForHashing?: string | undefined;
                } | undefined;
            } | undefined;
            ttlSeconds?: number | undefined;
            configRuleUuidBytes?: Uint8Array | undefined;
            priority?: number | undefined;
            namespace?: Namespace | undefined;
            studyName?: string | undefined;
            experimentId?: number | undefined;
            delete?: boolean | undefined;
            servePlatforms?: ConfigResult_ServePlatform[] | undefined;
            sequenceId?: number | undefined;
            ruidType?: Ruid_Type | undefined;
            segmentOrdinal?: number | undefined;
            generatedFromAbAllowlists?: boolean | undefined;
        } & {
            configId?: string | undefined;
            value?: ({
                intValue?: number | undefined;
                longValue?: number | undefined;
                floatValue?: number | undefined;
                doubleValue?: number | undefined;
                boolValue?: boolean | undefined;
                stringValue?: string | undefined;
                anyValue?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                mapValue?: {
                    records?: {
                        key?: string | undefined;
                        value?: string | undefined;
                    }[] | undefined;
                } | undefined;
                intPairValue?: number | undefined;
            } & {
                intValue?: number | undefined;
                longValue?: number | undefined;
                floatValue?: number | undefined;
                doubleValue?: number | undefined;
                boolValue?: boolean | undefined;
                stringValue?: string | undefined;
                anyValue?: ({
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["configResults"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                mapValue?: ({
                    records?: {
                        key?: string | undefined;
                        value?: string | undefined;
                    }[] | undefined;
                } & {
                    records?: ({
                        key?: string | undefined;
                        value?: string | undefined;
                    }[] & ({
                        key?: string | undefined;
                        value?: string | undefined;
                    } & {
                        key?: string | undefined;
                        value?: string | undefined;
                    } & Record<Exclude<keyof I["configResults"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["configResults"][number]["value"]["mapValue"]["records"], keyof {
                        key?: string | undefined;
                        value?: string | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I["configResults"][number]["value"]["mapValue"], "records">, never>) | undefined;
                intPairValue?: number | undefined;
            } & Record<Exclude<keyof I["configResults"][number]["value"], keyof Value>, never>) | undefined;
            targetingExpression?: ({
                operator?: ClientTargetingExpression_Operator | undefined;
                children?: any[] | undefined;
                property?: ClientTargetingExpression_Property | undefined;
                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                value?: {
                    intValue?: number | undefined;
                    longValue?: number | undefined;
                    floatValue?: number | undefined;
                    doubleValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    stringValue?: string | undefined;
                    anyValue?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    mapValue?: {
                        records?: {
                            key?: string | undefined;
                            value?: string | undefined;
                        }[] | undefined;
                    } | undefined;
                    intPairValue?: number | undefined;
                } | undefined;
                propertyMetadata?: {
                    itemId?: number | undefined;
                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                    abNamespaceForHashing?: string | undefined;
                    abSeedForHashing?: string | undefined;
                } | undefined;
            } & {
                operator?: ClientTargetingExpression_Operator | undefined;
                children?: (any[] & ({
                    operator?: ClientTargetingExpression_Operator | undefined;
                    children?: any[] | undefined;
                    property?: ClientTargetingExpression_Property | undefined;
                    predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                    value?: {
                        intValue?: number | undefined;
                        longValue?: number | undefined;
                        floatValue?: number | undefined;
                        doubleValue?: number | undefined;
                        boolValue?: boolean | undefined;
                        stringValue?: string | undefined;
                        anyValue?: {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        } | undefined;
                        mapValue?: {
                            records?: {
                                key?: string | undefined;
                                value?: string | undefined;
                            }[] | undefined;
                        } | undefined;
                        intPairValue?: number | undefined;
                    } | undefined;
                    propertyMetadata?: {
                        itemId?: number | undefined;
                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                        abNamespaceForHashing?: string | undefined;
                        abSeedForHashing?: string | undefined;
                    } | undefined;
                } & {
                    operator?: ClientTargetingExpression_Operator | undefined;
                    children?: (any[] & ({
                        operator?: ClientTargetingExpression_Operator | undefined;
                        children?: any[] | undefined;
                        property?: ClientTargetingExpression_Property | undefined;
                        predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                        value?: {
                            intValue?: number | undefined;
                            longValue?: number | undefined;
                            floatValue?: number | undefined;
                            doubleValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            stringValue?: string | undefined;
                            anyValue?: {
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            } | undefined;
                            mapValue?: {
                                records?: {
                                    key?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                            } | undefined;
                            intPairValue?: number | undefined;
                        } | undefined;
                        propertyMetadata?: {
                            itemId?: number | undefined;
                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                            abNamespaceForHashing?: string | undefined;
                            abSeedForHashing?: string | undefined;
                        } | undefined;
                    } & {
                        operator?: ClientTargetingExpression_Operator | undefined;
                        children?: (any[] & ({
                            operator?: ClientTargetingExpression_Operator | undefined;
                            children?: any[] | undefined;
                            property?: ClientTargetingExpression_Property | undefined;
                            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                            value?: {
                                intValue?: number | undefined;
                                longValue?: number | undefined;
                                floatValue?: number | undefined;
                                doubleValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                stringValue?: string | undefined;
                                anyValue?: {
                                    typeUrl?: string | undefined;
                                    value?: Uint8Array | undefined;
                                } | undefined;
                                mapValue?: {
                                    records?: {
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    }[] | undefined;
                                } | undefined;
                                intPairValue?: number | undefined;
                            } | undefined;
                            propertyMetadata?: {
                                itemId?: number | undefined;
                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                abNamespaceForHashing?: string | undefined;
                                abSeedForHashing?: string | undefined;
                            } | undefined;
                        } & {
                            operator?: ClientTargetingExpression_Operator | undefined;
                            children?: (any[] & ({
                                operator?: ClientTargetingExpression_Operator | undefined;
                                children?: any[] | undefined;
                                property?: ClientTargetingExpression_Property | undefined;
                                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                value?: {
                                    intValue?: number | undefined;
                                    longValue?: number | undefined;
                                    floatValue?: number | undefined;
                                    doubleValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    anyValue?: {
                                        typeUrl?: string | undefined;
                                        value?: Uint8Array | undefined;
                                    } | undefined;
                                    mapValue?: {
                                        records?: {
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    intPairValue?: number | undefined;
                                } | undefined;
                                propertyMetadata?: {
                                    itemId?: number | undefined;
                                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                    abNamespaceForHashing?: string | undefined;
                                    abSeedForHashing?: string | undefined;
                                } | undefined;
                            } & {
                                operator?: ClientTargetingExpression_Operator | undefined;
                                children?: (any[] & ({
                                    operator?: ClientTargetingExpression_Operator | undefined;
                                    children?: any[] | undefined;
                                    property?: ClientTargetingExpression_Property | undefined;
                                    predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                    value?: {
                                        intValue?: number | undefined;
                                        longValue?: number | undefined;
                                        floatValue?: number | undefined;
                                        doubleValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        anyValue?: {
                                            typeUrl?: string | undefined;
                                            value?: Uint8Array | undefined;
                                        } | undefined;
                                        mapValue?: {
                                            records?: {
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            }[] | undefined;
                                        } | undefined;
                                        intPairValue?: number | undefined;
                                    } | undefined;
                                    propertyMetadata?: {
                                        itemId?: number | undefined;
                                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                        abNamespaceForHashing?: string | undefined;
                                        abSeedForHashing?: string | undefined;
                                    } | undefined;
                                } & {
                                    operator?: ClientTargetingExpression_Operator | undefined;
                                    children?: (any[] & ({
                                        operator?: ClientTargetingExpression_Operator | undefined;
                                        children?: any[] | undefined;
                                        property?: ClientTargetingExpression_Property | undefined;
                                        predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                        value?: {
                                            intValue?: number | undefined;
                                            longValue?: number | undefined;
                                            floatValue?: number | undefined;
                                            doubleValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            anyValue?: {
                                                typeUrl?: string | undefined;
                                                value?: Uint8Array | undefined;
                                            } | undefined;
                                            mapValue?: {
                                                records?: {
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                }[] | undefined;
                                            } | undefined;
                                            intPairValue?: number | undefined;
                                        } | undefined;
                                        propertyMetadata?: {
                                            itemId?: number | undefined;
                                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                            abNamespaceForHashing?: string | undefined;
                                            abSeedForHashing?: string | undefined;
                                        } | undefined;
                                    } & {
                                        operator?: ClientTargetingExpression_Operator | undefined;
                                        children?: (any[] & ({
                                            operator?: ClientTargetingExpression_Operator | undefined;
                                            children?: any[] | undefined;
                                            property?: ClientTargetingExpression_Property | undefined;
                                            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                            value?: {
                                                intValue?: number | undefined;
                                                longValue?: number | undefined;
                                                floatValue?: number | undefined;
                                                doubleValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                anyValue?: {
                                                    typeUrl?: string | undefined;
                                                    value?: Uint8Array | undefined;
                                                } | undefined;
                                                mapValue?: {
                                                    records?: {
                                                        key?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                } | undefined;
                                                intPairValue?: number | undefined;
                                            } | undefined;
                                            propertyMetadata?: {
                                                itemId?: number | undefined;
                                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                abNamespaceForHashing?: string | undefined;
                                                abSeedForHashing?: string | undefined;
                                            } | undefined;
                                        } & {
                                            operator?: ClientTargetingExpression_Operator | undefined;
                                            children?: (any[] & ({
                                                operator?: ClientTargetingExpression_Operator | undefined;
                                                children?: any[] | undefined;
                                                property?: ClientTargetingExpression_Property | undefined;
                                                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                                value?: {
                                                    intValue?: number | undefined;
                                                    longValue?: number | undefined;
                                                    floatValue?: number | undefined;
                                                    doubleValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    anyValue?: {
                                                        typeUrl?: string | undefined;
                                                        value?: Uint8Array | undefined;
                                                    } | undefined;
                                                    mapValue?: {
                                                        records?: {
                                                            key?: string | undefined;
                                                            value?: string | undefined;
                                                        }[] | undefined;
                                                    } | undefined;
                                                    intPairValue?: number | undefined;
                                                } | undefined;
                                                propertyMetadata?: {
                                                    itemId?: number | undefined;
                                                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                    abNamespaceForHashing?: string | undefined;
                                                    abSeedForHashing?: string | undefined;
                                                } | undefined;
                                            } & {
                                                operator?: ClientTargetingExpression_Operator | undefined;
                                                children?: (any[] & ({
                                                    operator?: ClientTargetingExpression_Operator | undefined;
                                                    children?: any[] | undefined;
                                                    property?: ClientTargetingExpression_Property | undefined;
                                                    predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                                    value?: {
                                                        intValue?: number | undefined;
                                                        longValue?: number | undefined;
                                                        floatValue?: number | undefined;
                                                        doubleValue?: number | undefined;
                                                        boolValue?: boolean | undefined;
                                                        stringValue?: string | undefined;
                                                        anyValue?: {
                                                            typeUrl?: string | undefined;
                                                            value?: Uint8Array | undefined;
                                                        } | undefined;
                                                        mapValue?: {
                                                            records?: {
                                                                key?: string | undefined;
                                                                value?: string | undefined;
                                                            }[] | undefined;
                                                        } | undefined;
                                                        intPairValue?: number | undefined;
                                                    } | undefined;
                                                    propertyMetadata?: {
                                                        itemId?: number | undefined;
                                                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                        abNamespaceForHashing?: string | undefined;
                                                        abSeedForHashing?: string | undefined;
                                                    } | undefined;
                                                } & any & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                                                property?: ClientTargetingExpression_Property | undefined;
                                                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                                value?: ({
                                                    intValue?: number | undefined;
                                                    longValue?: number | undefined;
                                                    floatValue?: number | undefined;
                                                    doubleValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    anyValue?: {
                                                        typeUrl?: string | undefined;
                                                        value?: Uint8Array | undefined;
                                                    } | undefined;
                                                    mapValue?: {
                                                        records?: {
                                                            key?: string | undefined;
                                                            value?: string | undefined;
                                                        }[] | undefined;
                                                    } | undefined;
                                                    intPairValue?: number | undefined;
                                                } & any & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                                                propertyMetadata?: ({
                                                    itemId?: number | undefined;
                                                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                    abNamespaceForHashing?: string | undefined;
                                                    abSeedForHashing?: string | undefined;
                                                } & any & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                                            } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                                            property?: ClientTargetingExpression_Property | undefined;
                                            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                            value?: ({
                                                intValue?: number | undefined;
                                                longValue?: number | undefined;
                                                floatValue?: number | undefined;
                                                doubleValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                anyValue?: {
                                                    typeUrl?: string | undefined;
                                                    value?: Uint8Array | undefined;
                                                } | undefined;
                                                mapValue?: {
                                                    records?: {
                                                        key?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                } | undefined;
                                                intPairValue?: number | undefined;
                                            } & {
                                                intValue?: number | undefined;
                                                longValue?: number | undefined;
                                                floatValue?: number | undefined;
                                                doubleValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                anyValue?: ({
                                                    typeUrl?: string | undefined;
                                                    value?: Uint8Array | undefined;
                                                } & any & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                                                mapValue?: ({
                                                    records?: {
                                                        key?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                } & any & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                                                intPairValue?: number | undefined;
                                            } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                                            propertyMetadata?: ({
                                                itemId?: number | undefined;
                                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                abNamespaceForHashing?: string | undefined;
                                                abSeedForHashing?: string | undefined;
                                            } & {
                                                itemId?: number | undefined;
                                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                abNamespaceForHashing?: string | undefined;
                                                abSeedForHashing?: string | undefined;
                                            } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                                        } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                                        property?: ClientTargetingExpression_Property | undefined;
                                        predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                        value?: ({
                                            intValue?: number | undefined;
                                            longValue?: number | undefined;
                                            floatValue?: number | undefined;
                                            doubleValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            anyValue?: {
                                                typeUrl?: string | undefined;
                                                value?: Uint8Array | undefined;
                                            } | undefined;
                                            mapValue?: {
                                                records?: {
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                }[] | undefined;
                                            } | undefined;
                                            intPairValue?: number | undefined;
                                        } & {
                                            intValue?: number | undefined;
                                            longValue?: number | undefined;
                                            floatValue?: number | undefined;
                                            doubleValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            anyValue?: ({
                                                typeUrl?: string | undefined;
                                                value?: Uint8Array | undefined;
                                            } & {
                                                typeUrl?: string | undefined;
                                                value?: Uint8Array | undefined;
                                            } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                                            mapValue?: ({
                                                records?: {
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                }[] | undefined;
                                            } & {
                                                records?: ({
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                }[] & ({
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                } & any & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                }[]>, never>) | undefined;
                                            } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                                            intPairValue?: number | undefined;
                                        } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                                        propertyMetadata?: ({
                                            itemId?: number | undefined;
                                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                            abNamespaceForHashing?: string | undefined;
                                            abSeedForHashing?: string | undefined;
                                        } & {
                                            itemId?: number | undefined;
                                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                            abNamespaceForHashing?: string | undefined;
                                            abSeedForHashing?: string | undefined;
                                        } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                                    } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                                    property?: ClientTargetingExpression_Property | undefined;
                                    predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                    value?: ({
                                        intValue?: number | undefined;
                                        longValue?: number | undefined;
                                        floatValue?: number | undefined;
                                        doubleValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        anyValue?: {
                                            typeUrl?: string | undefined;
                                            value?: Uint8Array | undefined;
                                        } | undefined;
                                        mapValue?: {
                                            records?: {
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            }[] | undefined;
                                        } | undefined;
                                        intPairValue?: number | undefined;
                                    } & {
                                        intValue?: number | undefined;
                                        longValue?: number | undefined;
                                        floatValue?: number | undefined;
                                        doubleValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        anyValue?: ({
                                            typeUrl?: string | undefined;
                                            value?: Uint8Array | undefined;
                                        } & {
                                            typeUrl?: string | undefined;
                                            value?: Uint8Array | undefined;
                                        } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                                        mapValue?: ({
                                            records?: {
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            }[] | undefined;
                                        } & {
                                            records?: ({
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            }[] & ({
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            } & {
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            }[]>, never>) | undefined;
                                        } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                                        intPairValue?: number | undefined;
                                    } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                                    propertyMetadata?: ({
                                        itemId?: number | undefined;
                                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                        abNamespaceForHashing?: string | undefined;
                                        abSeedForHashing?: string | undefined;
                                    } & {
                                        itemId?: number | undefined;
                                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                        abNamespaceForHashing?: string | undefined;
                                        abSeedForHashing?: string | undefined;
                                    } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                                } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                                property?: ClientTargetingExpression_Property | undefined;
                                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                value?: ({
                                    intValue?: number | undefined;
                                    longValue?: number | undefined;
                                    floatValue?: number | undefined;
                                    doubleValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    anyValue?: {
                                        typeUrl?: string | undefined;
                                        value?: Uint8Array | undefined;
                                    } | undefined;
                                    mapValue?: {
                                        records?: {
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    intPairValue?: number | undefined;
                                } & {
                                    intValue?: number | undefined;
                                    longValue?: number | undefined;
                                    floatValue?: number | undefined;
                                    doubleValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    anyValue?: ({
                                        typeUrl?: string | undefined;
                                        value?: Uint8Array | undefined;
                                    } & {
                                        typeUrl?: string | undefined;
                                        value?: Uint8Array | undefined;
                                    } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                                    mapValue?: ({
                                        records?: {
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        }[] | undefined;
                                    } & {
                                        records?: ({
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        }[] & ({
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        } & {
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        }[]>, never>) | undefined;
                                    } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                                    intPairValue?: number | undefined;
                                } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                                propertyMetadata?: ({
                                    itemId?: number | undefined;
                                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                    abNamespaceForHashing?: string | undefined;
                                    abSeedForHashing?: string | undefined;
                                } & {
                                    itemId?: number | undefined;
                                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                    abNamespaceForHashing?: string | undefined;
                                    abSeedForHashing?: string | undefined;
                                } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                            } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                            property?: ClientTargetingExpression_Property | undefined;
                            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                            value?: ({
                                intValue?: number | undefined;
                                longValue?: number | undefined;
                                floatValue?: number | undefined;
                                doubleValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                stringValue?: string | undefined;
                                anyValue?: {
                                    typeUrl?: string | undefined;
                                    value?: Uint8Array | undefined;
                                } | undefined;
                                mapValue?: {
                                    records?: {
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    }[] | undefined;
                                } | undefined;
                                intPairValue?: number | undefined;
                            } & {
                                intValue?: number | undefined;
                                longValue?: number | undefined;
                                floatValue?: number | undefined;
                                doubleValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                stringValue?: string | undefined;
                                anyValue?: ({
                                    typeUrl?: string | undefined;
                                    value?: Uint8Array | undefined;
                                } & {
                                    typeUrl?: string | undefined;
                                    value?: Uint8Array | undefined;
                                } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                                mapValue?: ({
                                    records?: {
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    }[] | undefined;
                                } & {
                                    records?: ({
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    }[] & ({
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    } & {
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    }[]>, never>) | undefined;
                                } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                                intPairValue?: number | undefined;
                            } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                            propertyMetadata?: ({
                                itemId?: number | undefined;
                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                abNamespaceForHashing?: string | undefined;
                                abSeedForHashing?: string | undefined;
                            } & {
                                itemId?: number | undefined;
                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                abNamespaceForHashing?: string | undefined;
                                abSeedForHashing?: string | undefined;
                            } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                        } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                        property?: ClientTargetingExpression_Property | undefined;
                        predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                        value?: ({
                            intValue?: number | undefined;
                            longValue?: number | undefined;
                            floatValue?: number | undefined;
                            doubleValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            stringValue?: string | undefined;
                            anyValue?: {
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            } | undefined;
                            mapValue?: {
                                records?: {
                                    key?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                            } | undefined;
                            intPairValue?: number | undefined;
                        } & {
                            intValue?: number | undefined;
                            longValue?: number | undefined;
                            floatValue?: number | undefined;
                            doubleValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            stringValue?: string | undefined;
                            anyValue?: ({
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            } & {
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                            mapValue?: ({
                                records?: {
                                    key?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                            } & {
                                records?: ({
                                    key?: string | undefined;
                                    value?: string | undefined;
                                }[] & ({
                                    key?: string | undefined;
                                    value?: string | undefined;
                                } & {
                                    key?: string | undefined;
                                    value?: string | undefined;
                                } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                    key?: string | undefined;
                                    value?: string | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                            intPairValue?: number | undefined;
                        } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                        propertyMetadata?: ({
                            itemId?: number | undefined;
                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                            abNamespaceForHashing?: string | undefined;
                            abSeedForHashing?: string | undefined;
                        } & {
                            itemId?: number | undefined;
                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                            abNamespaceForHashing?: string | undefined;
                            abSeedForHashing?: string | undefined;
                        } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                    } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["children"], keyof any[]>, never>) | undefined;
                    property?: ClientTargetingExpression_Property | undefined;
                    predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                    value?: ({
                        intValue?: number | undefined;
                        longValue?: number | undefined;
                        floatValue?: number | undefined;
                        doubleValue?: number | undefined;
                        boolValue?: boolean | undefined;
                        stringValue?: string | undefined;
                        anyValue?: {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        } | undefined;
                        mapValue?: {
                            records?: {
                                key?: string | undefined;
                                value?: string | undefined;
                            }[] | undefined;
                        } | undefined;
                        intPairValue?: number | undefined;
                    } & {
                        intValue?: number | undefined;
                        longValue?: number | undefined;
                        floatValue?: number | undefined;
                        doubleValue?: number | undefined;
                        boolValue?: boolean | undefined;
                        stringValue?: string | undefined;
                        anyValue?: ({
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        } & {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                        mapValue?: ({
                            records?: {
                                key?: string | undefined;
                                value?: string | undefined;
                            }[] | undefined;
                        } & {
                            records?: ({
                                key?: string | undefined;
                                value?: string | undefined;
                            }[] & ({
                                key?: string | undefined;
                                value?: string | undefined;
                            } & {
                                key?: string | undefined;
                                value?: string | undefined;
                            } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["value"]["mapValue"]["records"], keyof {
                                key?: string | undefined;
                                value?: string | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                        intPairValue?: number | undefined;
                    } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["value"], keyof Value>, never>) | undefined;
                    propertyMetadata?: ({
                        itemId?: number | undefined;
                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                        abNamespaceForHashing?: string | undefined;
                        abSeedForHashing?: string | undefined;
                    } & {
                        itemId?: number | undefined;
                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                        abNamespaceForHashing?: string | undefined;
                        abSeedForHashing?: string | undefined;
                    } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["children"], keyof any[]>, never>) | undefined;
                property?: ClientTargetingExpression_Property | undefined;
                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                value?: ({
                    intValue?: number | undefined;
                    longValue?: number | undefined;
                    floatValue?: number | undefined;
                    doubleValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    stringValue?: string | undefined;
                    anyValue?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    mapValue?: {
                        records?: {
                            key?: string | undefined;
                            value?: string | undefined;
                        }[] | undefined;
                    } | undefined;
                    intPairValue?: number | undefined;
                } & {
                    intValue?: number | undefined;
                    longValue?: number | undefined;
                    floatValue?: number | undefined;
                    doubleValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    stringValue?: string | undefined;
                    anyValue?: ({
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                    mapValue?: ({
                        records?: {
                            key?: string | undefined;
                            value?: string | undefined;
                        }[] | undefined;
                    } & {
                        records?: ({
                            key?: string | undefined;
                            value?: string | undefined;
                        }[] & ({
                            key?: string | undefined;
                            value?: string | undefined;
                        } & {
                            key?: string | undefined;
                            value?: string | undefined;
                        } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["value"]["mapValue"]["records"], keyof {
                            key?: string | undefined;
                            value?: string | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["value"]["mapValue"], "records">, never>) | undefined;
                    intPairValue?: number | undefined;
                } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["value"], keyof Value>, never>) | undefined;
                propertyMetadata?: ({
                    itemId?: number | undefined;
                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                    abNamespaceForHashing?: string | undefined;
                    abSeedForHashing?: string | undefined;
                } & {
                    itemId?: number | undefined;
                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                    abNamespaceForHashing?: string | undefined;
                    abSeedForHashing?: string | undefined;
                } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
            } & Record<Exclude<keyof I["configResults"][number]["targetingExpression"], keyof ClientTargetingExpression>, never>) | undefined;
            ttlSeconds?: number | undefined;
            configRuleUuidBytes?: Uint8Array | undefined;
            priority?: number | undefined;
            namespace?: Namespace | undefined;
            studyName?: string | undefined;
            experimentId?: number | undefined;
            delete?: boolean | undefined;
            servePlatforms?: (ConfigResult_ServePlatform[] & ConfigResult_ServePlatform[] & Record<Exclude<keyof I["configResults"][number]["servePlatforms"], keyof ConfigResult_ServePlatform[]>, never>) | undefined;
            sequenceId?: number | undefined;
            ruidType?: Ruid_Type | undefined;
            segmentOrdinal?: number | undefined;
            generatedFromAbAllowlists?: boolean | undefined;
        } & Record<Exclude<keyof I["configResults"][number], keyof ConfigResult>, never>)[] & Record<Exclude<keyof I["configResults"], keyof {
            configId?: string | undefined;
            value?: {
                intValue?: number | undefined;
                longValue?: number | undefined;
                floatValue?: number | undefined;
                doubleValue?: number | undefined;
                boolValue?: boolean | undefined;
                stringValue?: string | undefined;
                anyValue?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                mapValue?: {
                    records?: {
                        key?: string | undefined;
                        value?: string | undefined;
                    }[] | undefined;
                } | undefined;
                intPairValue?: number | undefined;
            } | undefined;
            targetingExpression?: {
                operator?: ClientTargetingExpression_Operator | undefined;
                children?: any[] | undefined;
                property?: ClientTargetingExpression_Property | undefined;
                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                value?: {
                    intValue?: number | undefined;
                    longValue?: number | undefined;
                    floatValue?: number | undefined;
                    doubleValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    stringValue?: string | undefined;
                    anyValue?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    mapValue?: {
                        records?: {
                            key?: string | undefined;
                            value?: string | undefined;
                        }[] | undefined;
                    } | undefined;
                    intPairValue?: number | undefined;
                } | undefined;
                propertyMetadata?: {
                    itemId?: number | undefined;
                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                    abNamespaceForHashing?: string | undefined;
                    abSeedForHashing?: string | undefined;
                } | undefined;
            } | undefined;
            ttlSeconds?: number | undefined;
            configRuleUuidBytes?: Uint8Array | undefined;
            priority?: number | undefined;
            namespace?: Namespace | undefined;
            studyName?: string | undefined;
            experimentId?: number | undefined;
            delete?: boolean | undefined;
            servePlatforms?: ConfigResult_ServePlatform[] | undefined;
            sequenceId?: number | undefined;
            ruidType?: Ruid_Type | undefined;
            segmentOrdinal?: number | undefined;
            generatedFromAbAllowlists?: boolean | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof ConfigResultBundle>, never>>(object: I): ConfigResultBundle;
};
export declare const ClientTargetingExpression: {
    encode(message: ClientTargetingExpression, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ClientTargetingExpression;
    fromPartial<I extends {
        operator?: ClientTargetingExpression_Operator | undefined;
        children?: any[] | undefined;
        property?: ClientTargetingExpression_Property | undefined;
        predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
        value?: {
            intValue?: number | undefined;
            longValue?: number | undefined;
            floatValue?: number | undefined;
            doubleValue?: number | undefined;
            boolValue?: boolean | undefined;
            stringValue?: string | undefined;
            anyValue?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } | undefined;
            mapValue?: {
                records?: {
                    key?: string | undefined;
                    value?: string | undefined;
                }[] | undefined;
            } | undefined;
            intPairValue?: number | undefined;
        } | undefined;
        propertyMetadata?: {
            itemId?: number | undefined;
            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
            abNamespaceForHashing?: string | undefined;
            abSeedForHashing?: string | undefined;
        } | undefined;
    } & {
        operator?: ClientTargetingExpression_Operator | undefined;
        children?: (any[] & ({
            operator?: ClientTargetingExpression_Operator | undefined;
            children?: any[] | undefined;
            property?: ClientTargetingExpression_Property | undefined;
            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
            value?: {
                intValue?: number | undefined;
                longValue?: number | undefined;
                floatValue?: number | undefined;
                doubleValue?: number | undefined;
                boolValue?: boolean | undefined;
                stringValue?: string | undefined;
                anyValue?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                mapValue?: {
                    records?: {
                        key?: string | undefined;
                        value?: string | undefined;
                    }[] | undefined;
                } | undefined;
                intPairValue?: number | undefined;
            } | undefined;
            propertyMetadata?: {
                itemId?: number | undefined;
                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                abNamespaceForHashing?: string | undefined;
                abSeedForHashing?: string | undefined;
            } | undefined;
        } & {
            operator?: ClientTargetingExpression_Operator | undefined;
            children?: (any[] & ({
                operator?: ClientTargetingExpression_Operator | undefined;
                children?: any[] | undefined;
                property?: ClientTargetingExpression_Property | undefined;
                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                value?: {
                    intValue?: number | undefined;
                    longValue?: number | undefined;
                    floatValue?: number | undefined;
                    doubleValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    stringValue?: string | undefined;
                    anyValue?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    mapValue?: {
                        records?: {
                            key?: string | undefined;
                            value?: string | undefined;
                        }[] | undefined;
                    } | undefined;
                    intPairValue?: number | undefined;
                } | undefined;
                propertyMetadata?: {
                    itemId?: number | undefined;
                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                    abNamespaceForHashing?: string | undefined;
                    abSeedForHashing?: string | undefined;
                } | undefined;
            } & {
                operator?: ClientTargetingExpression_Operator | undefined;
                children?: (any[] & ({
                    operator?: ClientTargetingExpression_Operator | undefined;
                    children?: any[] | undefined;
                    property?: ClientTargetingExpression_Property | undefined;
                    predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                    value?: {
                        intValue?: number | undefined;
                        longValue?: number | undefined;
                        floatValue?: number | undefined;
                        doubleValue?: number | undefined;
                        boolValue?: boolean | undefined;
                        stringValue?: string | undefined;
                        anyValue?: {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        } | undefined;
                        mapValue?: {
                            records?: {
                                key?: string | undefined;
                                value?: string | undefined;
                            }[] | undefined;
                        } | undefined;
                        intPairValue?: number | undefined;
                    } | undefined;
                    propertyMetadata?: {
                        itemId?: number | undefined;
                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                        abNamespaceForHashing?: string | undefined;
                        abSeedForHashing?: string | undefined;
                    } | undefined;
                } & {
                    operator?: ClientTargetingExpression_Operator | undefined;
                    children?: (any[] & ({
                        operator?: ClientTargetingExpression_Operator | undefined;
                        children?: any[] | undefined;
                        property?: ClientTargetingExpression_Property | undefined;
                        predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                        value?: {
                            intValue?: number | undefined;
                            longValue?: number | undefined;
                            floatValue?: number | undefined;
                            doubleValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            stringValue?: string | undefined;
                            anyValue?: {
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            } | undefined;
                            mapValue?: {
                                records?: {
                                    key?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                            } | undefined;
                            intPairValue?: number | undefined;
                        } | undefined;
                        propertyMetadata?: {
                            itemId?: number | undefined;
                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                            abNamespaceForHashing?: string | undefined;
                            abSeedForHashing?: string | undefined;
                        } | undefined;
                    } & {
                        operator?: ClientTargetingExpression_Operator | undefined;
                        children?: (any[] & ({
                            operator?: ClientTargetingExpression_Operator | undefined;
                            children?: any[] | undefined;
                            property?: ClientTargetingExpression_Property | undefined;
                            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                            value?: {
                                intValue?: number | undefined;
                                longValue?: number | undefined;
                                floatValue?: number | undefined;
                                doubleValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                stringValue?: string | undefined;
                                anyValue?: {
                                    typeUrl?: string | undefined;
                                    value?: Uint8Array | undefined;
                                } | undefined;
                                mapValue?: {
                                    records?: {
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    }[] | undefined;
                                } | undefined;
                                intPairValue?: number | undefined;
                            } | undefined;
                            propertyMetadata?: {
                                itemId?: number | undefined;
                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                abNamespaceForHashing?: string | undefined;
                                abSeedForHashing?: string | undefined;
                            } | undefined;
                        } & {
                            operator?: ClientTargetingExpression_Operator | undefined;
                            children?: (any[] & ({
                                operator?: ClientTargetingExpression_Operator | undefined;
                                children?: any[] | undefined;
                                property?: ClientTargetingExpression_Property | undefined;
                                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                value?: {
                                    intValue?: number | undefined;
                                    longValue?: number | undefined;
                                    floatValue?: number | undefined;
                                    doubleValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    anyValue?: {
                                        typeUrl?: string | undefined;
                                        value?: Uint8Array | undefined;
                                    } | undefined;
                                    mapValue?: {
                                        records?: {
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    intPairValue?: number | undefined;
                                } | undefined;
                                propertyMetadata?: {
                                    itemId?: number | undefined;
                                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                    abNamespaceForHashing?: string | undefined;
                                    abSeedForHashing?: string | undefined;
                                } | undefined;
                            } & {
                                operator?: ClientTargetingExpression_Operator | undefined;
                                children?: (any[] & ({
                                    operator?: ClientTargetingExpression_Operator | undefined;
                                    children?: any[] | undefined;
                                    property?: ClientTargetingExpression_Property | undefined;
                                    predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                    value?: {
                                        intValue?: number | undefined;
                                        longValue?: number | undefined;
                                        floatValue?: number | undefined;
                                        doubleValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        anyValue?: {
                                            typeUrl?: string | undefined;
                                            value?: Uint8Array | undefined;
                                        } | undefined;
                                        mapValue?: {
                                            records?: {
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            }[] | undefined;
                                        } | undefined;
                                        intPairValue?: number | undefined;
                                    } | undefined;
                                    propertyMetadata?: {
                                        itemId?: number | undefined;
                                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                        abNamespaceForHashing?: string | undefined;
                                        abSeedForHashing?: string | undefined;
                                    } | undefined;
                                } & {
                                    operator?: ClientTargetingExpression_Operator | undefined;
                                    children?: (any[] & ({
                                        operator?: ClientTargetingExpression_Operator | undefined;
                                        children?: any[] | undefined;
                                        property?: ClientTargetingExpression_Property | undefined;
                                        predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                        value?: {
                                            intValue?: number | undefined;
                                            longValue?: number | undefined;
                                            floatValue?: number | undefined;
                                            doubleValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            anyValue?: {
                                                typeUrl?: string | undefined;
                                                value?: Uint8Array | undefined;
                                            } | undefined;
                                            mapValue?: {
                                                records?: {
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                }[] | undefined;
                                            } | undefined;
                                            intPairValue?: number | undefined;
                                        } | undefined;
                                        propertyMetadata?: {
                                            itemId?: number | undefined;
                                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                            abNamespaceForHashing?: string | undefined;
                                            abSeedForHashing?: string | undefined;
                                        } | undefined;
                                    } & {
                                        operator?: ClientTargetingExpression_Operator | undefined;
                                        children?: (any[] & ({
                                            operator?: ClientTargetingExpression_Operator | undefined;
                                            children?: any[] | undefined;
                                            property?: ClientTargetingExpression_Property | undefined;
                                            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                            value?: {
                                                intValue?: number | undefined;
                                                longValue?: number | undefined;
                                                floatValue?: number | undefined;
                                                doubleValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                anyValue?: {
                                                    typeUrl?: string | undefined;
                                                    value?: Uint8Array | undefined;
                                                } | undefined;
                                                mapValue?: {
                                                    records?: {
                                                        key?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                } | undefined;
                                                intPairValue?: number | undefined;
                                            } | undefined;
                                            propertyMetadata?: {
                                                itemId?: number | undefined;
                                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                abNamespaceForHashing?: string | undefined;
                                                abSeedForHashing?: string | undefined;
                                            } | undefined;
                                        } & {
                                            operator?: ClientTargetingExpression_Operator | undefined;
                                            children?: (any[] & ({
                                                operator?: ClientTargetingExpression_Operator | undefined;
                                                children?: any[] | undefined;
                                                property?: ClientTargetingExpression_Property | undefined;
                                                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                                value?: {
                                                    intValue?: number | undefined;
                                                    longValue?: number | undefined;
                                                    floatValue?: number | undefined;
                                                    doubleValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    anyValue?: {
                                                        typeUrl?: string | undefined;
                                                        value?: Uint8Array | undefined;
                                                    } | undefined;
                                                    mapValue?: {
                                                        records?: {
                                                            key?: string | undefined;
                                                            value?: string | undefined;
                                                        }[] | undefined;
                                                    } | undefined;
                                                    intPairValue?: number | undefined;
                                                } | undefined;
                                                propertyMetadata?: {
                                                    itemId?: number | undefined;
                                                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                    abNamespaceForHashing?: string | undefined;
                                                    abSeedForHashing?: string | undefined;
                                                } | undefined;
                                            } & {
                                                operator?: ClientTargetingExpression_Operator | undefined;
                                                children?: (any[] & ({
                                                    operator?: ClientTargetingExpression_Operator | undefined;
                                                    children?: any[] | undefined;
                                                    property?: ClientTargetingExpression_Property | undefined;
                                                    predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                                    value?: {
                                                        intValue?: number | undefined;
                                                        longValue?: number | undefined;
                                                        floatValue?: number | undefined;
                                                        doubleValue?: number | undefined;
                                                        boolValue?: boolean | undefined;
                                                        stringValue?: string | undefined;
                                                        anyValue?: {
                                                            typeUrl?: string | undefined;
                                                            value?: Uint8Array | undefined;
                                                        } | undefined;
                                                        mapValue?: {
                                                            records?: {
                                                                key?: string | undefined;
                                                                value?: string | undefined;
                                                            }[] | undefined;
                                                        } | undefined;
                                                        intPairValue?: number | undefined;
                                                    } | undefined;
                                                    propertyMetadata?: {
                                                        itemId?: number | undefined;
                                                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                        abNamespaceForHashing?: string | undefined;
                                                        abSeedForHashing?: string | undefined;
                                                    } | undefined;
                                                } & any & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                                                property?: ClientTargetingExpression_Property | undefined;
                                                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                                value?: ({
                                                    intValue?: number | undefined;
                                                    longValue?: number | undefined;
                                                    floatValue?: number | undefined;
                                                    doubleValue?: number | undefined;
                                                    boolValue?: boolean | undefined;
                                                    stringValue?: string | undefined;
                                                    anyValue?: {
                                                        typeUrl?: string | undefined;
                                                        value?: Uint8Array | undefined;
                                                    } | undefined;
                                                    mapValue?: {
                                                        records?: {
                                                            key?: string | undefined;
                                                            value?: string | undefined;
                                                        }[] | undefined;
                                                    } | undefined;
                                                    intPairValue?: number | undefined;
                                                } & any & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                                                propertyMetadata?: ({
                                                    itemId?: number | undefined;
                                                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                    abNamespaceForHashing?: string | undefined;
                                                    abSeedForHashing?: string | undefined;
                                                } & any & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                                            } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                                            property?: ClientTargetingExpression_Property | undefined;
                                            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                            value?: ({
                                                intValue?: number | undefined;
                                                longValue?: number | undefined;
                                                floatValue?: number | undefined;
                                                doubleValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                anyValue?: {
                                                    typeUrl?: string | undefined;
                                                    value?: Uint8Array | undefined;
                                                } | undefined;
                                                mapValue?: {
                                                    records?: {
                                                        key?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                } | undefined;
                                                intPairValue?: number | undefined;
                                            } & {
                                                intValue?: number | undefined;
                                                longValue?: number | undefined;
                                                floatValue?: number | undefined;
                                                doubleValue?: number | undefined;
                                                boolValue?: boolean | undefined;
                                                stringValue?: string | undefined;
                                                anyValue?: ({
                                                    typeUrl?: string | undefined;
                                                    value?: Uint8Array | undefined;
                                                } & any & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                                                mapValue?: ({
                                                    records?: {
                                                        key?: string | undefined;
                                                        value?: string | undefined;
                                                    }[] | undefined;
                                                } & any & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                                                intPairValue?: number | undefined;
                                            } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                                            propertyMetadata?: ({
                                                itemId?: number | undefined;
                                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                abNamespaceForHashing?: string | undefined;
                                                abSeedForHashing?: string | undefined;
                                            } & {
                                                itemId?: number | undefined;
                                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                                abNamespaceForHashing?: string | undefined;
                                                abSeedForHashing?: string | undefined;
                                            } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                                        } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                                        property?: ClientTargetingExpression_Property | undefined;
                                        predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                        value?: ({
                                            intValue?: number | undefined;
                                            longValue?: number | undefined;
                                            floatValue?: number | undefined;
                                            doubleValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            anyValue?: {
                                                typeUrl?: string | undefined;
                                                value?: Uint8Array | undefined;
                                            } | undefined;
                                            mapValue?: {
                                                records?: {
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                }[] | undefined;
                                            } | undefined;
                                            intPairValue?: number | undefined;
                                        } & {
                                            intValue?: number | undefined;
                                            longValue?: number | undefined;
                                            floatValue?: number | undefined;
                                            doubleValue?: number | undefined;
                                            boolValue?: boolean | undefined;
                                            stringValue?: string | undefined;
                                            anyValue?: ({
                                                typeUrl?: string | undefined;
                                                value?: Uint8Array | undefined;
                                            } & {
                                                typeUrl?: string | undefined;
                                                value?: Uint8Array | undefined;
                                            } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                                            mapValue?: ({
                                                records?: {
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                }[] | undefined;
                                            } & {
                                                records?: ({
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                }[] & ({
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                } & any & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                                    key?: string | undefined;
                                                    value?: string | undefined;
                                                }[]>, never>) | undefined;
                                            } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                                            intPairValue?: number | undefined;
                                        } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                                        propertyMetadata?: ({
                                            itemId?: number | undefined;
                                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                            abNamespaceForHashing?: string | undefined;
                                            abSeedForHashing?: string | undefined;
                                        } & {
                                            itemId?: number | undefined;
                                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                            abNamespaceForHashing?: string | undefined;
                                            abSeedForHashing?: string | undefined;
                                        } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                                    } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                                    property?: ClientTargetingExpression_Property | undefined;
                                    predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                    value?: ({
                                        intValue?: number | undefined;
                                        longValue?: number | undefined;
                                        floatValue?: number | undefined;
                                        doubleValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        anyValue?: {
                                            typeUrl?: string | undefined;
                                            value?: Uint8Array | undefined;
                                        } | undefined;
                                        mapValue?: {
                                            records?: {
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            }[] | undefined;
                                        } | undefined;
                                        intPairValue?: number | undefined;
                                    } & {
                                        intValue?: number | undefined;
                                        longValue?: number | undefined;
                                        floatValue?: number | undefined;
                                        doubleValue?: number | undefined;
                                        boolValue?: boolean | undefined;
                                        stringValue?: string | undefined;
                                        anyValue?: ({
                                            typeUrl?: string | undefined;
                                            value?: Uint8Array | undefined;
                                        } & {
                                            typeUrl?: string | undefined;
                                            value?: Uint8Array | undefined;
                                        } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                                        mapValue?: ({
                                            records?: {
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            }[] | undefined;
                                        } & {
                                            records?: ({
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            }[] & ({
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            } & {
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                                key?: string | undefined;
                                                value?: string | undefined;
                                            }[]>, never>) | undefined;
                                        } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                                        intPairValue?: number | undefined;
                                    } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                                    propertyMetadata?: ({
                                        itemId?: number | undefined;
                                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                        abNamespaceForHashing?: string | undefined;
                                        abSeedForHashing?: string | undefined;
                                    } & {
                                        itemId?: number | undefined;
                                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                        abNamespaceForHashing?: string | undefined;
                                        abSeedForHashing?: string | undefined;
                                    } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                                } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                                property?: ClientTargetingExpression_Property | undefined;
                                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                                value?: ({
                                    intValue?: number | undefined;
                                    longValue?: number | undefined;
                                    floatValue?: number | undefined;
                                    doubleValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    anyValue?: {
                                        typeUrl?: string | undefined;
                                        value?: Uint8Array | undefined;
                                    } | undefined;
                                    mapValue?: {
                                        records?: {
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    intPairValue?: number | undefined;
                                } & {
                                    intValue?: number | undefined;
                                    longValue?: number | undefined;
                                    floatValue?: number | undefined;
                                    doubleValue?: number | undefined;
                                    boolValue?: boolean | undefined;
                                    stringValue?: string | undefined;
                                    anyValue?: ({
                                        typeUrl?: string | undefined;
                                        value?: Uint8Array | undefined;
                                    } & {
                                        typeUrl?: string | undefined;
                                        value?: Uint8Array | undefined;
                                    } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                                    mapValue?: ({
                                        records?: {
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        }[] | undefined;
                                    } & {
                                        records?: ({
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        }[] & ({
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        } & {
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                            key?: string | undefined;
                                            value?: string | undefined;
                                        }[]>, never>) | undefined;
                                    } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                                    intPairValue?: number | undefined;
                                } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                                propertyMetadata?: ({
                                    itemId?: number | undefined;
                                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                    abNamespaceForHashing?: string | undefined;
                                    abSeedForHashing?: string | undefined;
                                } & {
                                    itemId?: number | undefined;
                                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                    abNamespaceForHashing?: string | undefined;
                                    abSeedForHashing?: string | undefined;
                                } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                            } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                            property?: ClientTargetingExpression_Property | undefined;
                            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                            value?: ({
                                intValue?: number | undefined;
                                longValue?: number | undefined;
                                floatValue?: number | undefined;
                                doubleValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                stringValue?: string | undefined;
                                anyValue?: {
                                    typeUrl?: string | undefined;
                                    value?: Uint8Array | undefined;
                                } | undefined;
                                mapValue?: {
                                    records?: {
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    }[] | undefined;
                                } | undefined;
                                intPairValue?: number | undefined;
                            } & {
                                intValue?: number | undefined;
                                longValue?: number | undefined;
                                floatValue?: number | undefined;
                                doubleValue?: number | undefined;
                                boolValue?: boolean | undefined;
                                stringValue?: string | undefined;
                                anyValue?: ({
                                    typeUrl?: string | undefined;
                                    value?: Uint8Array | undefined;
                                } & {
                                    typeUrl?: string | undefined;
                                    value?: Uint8Array | undefined;
                                } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                                mapValue?: ({
                                    records?: {
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    }[] | undefined;
                                } & {
                                    records?: ({
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    }[] & ({
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    } & {
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                        key?: string | undefined;
                                        value?: string | undefined;
                                    }[]>, never>) | undefined;
                                } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                                intPairValue?: number | undefined;
                            } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                            propertyMetadata?: ({
                                itemId?: number | undefined;
                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                abNamespaceForHashing?: string | undefined;
                                abSeedForHashing?: string | undefined;
                            } & {
                                itemId?: number | undefined;
                                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                                abNamespaceForHashing?: string | undefined;
                                abSeedForHashing?: string | undefined;
                            } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                        } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                        property?: ClientTargetingExpression_Property | undefined;
                        predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                        value?: ({
                            intValue?: number | undefined;
                            longValue?: number | undefined;
                            floatValue?: number | undefined;
                            doubleValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            stringValue?: string | undefined;
                            anyValue?: {
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            } | undefined;
                            mapValue?: {
                                records?: {
                                    key?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                            } | undefined;
                            intPairValue?: number | undefined;
                        } & {
                            intValue?: number | undefined;
                            longValue?: number | undefined;
                            floatValue?: number | undefined;
                            doubleValue?: number | undefined;
                            boolValue?: boolean | undefined;
                            stringValue?: string | undefined;
                            anyValue?: ({
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            } & {
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                            mapValue?: ({
                                records?: {
                                    key?: string | undefined;
                                    value?: string | undefined;
                                }[] | undefined;
                            } & {
                                records?: ({
                                    key?: string | undefined;
                                    value?: string | undefined;
                                }[] & ({
                                    key?: string | undefined;
                                    value?: string | undefined;
                                } & {
                                    key?: string | undefined;
                                    value?: string | undefined;
                                } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                    key?: string | undefined;
                                    value?: string | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                            intPairValue?: number | undefined;
                        } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                        propertyMetadata?: ({
                            itemId?: number | undefined;
                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                            abNamespaceForHashing?: string | undefined;
                            abSeedForHashing?: string | undefined;
                        } & {
                            itemId?: number | undefined;
                            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                            abNamespaceForHashing?: string | undefined;
                            abSeedForHashing?: string | undefined;
                        } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                    } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                    property?: ClientTargetingExpression_Property | undefined;
                    predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                    value?: ({
                        intValue?: number | undefined;
                        longValue?: number | undefined;
                        floatValue?: number | undefined;
                        doubleValue?: number | undefined;
                        boolValue?: boolean | undefined;
                        stringValue?: string | undefined;
                        anyValue?: {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        } | undefined;
                        mapValue?: {
                            records?: {
                                key?: string | undefined;
                                value?: string | undefined;
                            }[] | undefined;
                        } | undefined;
                        intPairValue?: number | undefined;
                    } & {
                        intValue?: number | undefined;
                        longValue?: number | undefined;
                        floatValue?: number | undefined;
                        doubleValue?: number | undefined;
                        boolValue?: boolean | undefined;
                        stringValue?: string | undefined;
                        anyValue?: ({
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        } & {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                        mapValue?: ({
                            records?: {
                                key?: string | undefined;
                                value?: string | undefined;
                            }[] | undefined;
                        } & {
                            records?: ({
                                key?: string | undefined;
                                value?: string | undefined;
                            }[] & ({
                                key?: string | undefined;
                                value?: string | undefined;
                            } & {
                                key?: string | undefined;
                                value?: string | undefined;
                            } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                                key?: string | undefined;
                                value?: string | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                        intPairValue?: number | undefined;
                    } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                    propertyMetadata?: ({
                        itemId?: number | undefined;
                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                        abNamespaceForHashing?: string | undefined;
                        abSeedForHashing?: string | undefined;
                    } & {
                        itemId?: number | undefined;
                        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                        abNamespaceForHashing?: string | undefined;
                        abSeedForHashing?: string | undefined;
                    } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
                } & Record<Exclude<keyof I["children"][number]["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["children"][number]["children"][number]["children"], keyof any[]>, never>) | undefined;
                property?: ClientTargetingExpression_Property | undefined;
                predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
                value?: ({
                    intValue?: number | undefined;
                    longValue?: number | undefined;
                    floatValue?: number | undefined;
                    doubleValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    stringValue?: string | undefined;
                    anyValue?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                    mapValue?: {
                        records?: {
                            key?: string | undefined;
                            value?: string | undefined;
                        }[] | undefined;
                    } | undefined;
                    intPairValue?: number | undefined;
                } & {
                    intValue?: number | undefined;
                    longValue?: number | undefined;
                    floatValue?: number | undefined;
                    doubleValue?: number | undefined;
                    boolValue?: boolean | undefined;
                    stringValue?: string | undefined;
                    anyValue?: ({
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & Record<Exclude<keyof I["children"][number]["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                    mapValue?: ({
                        records?: {
                            key?: string | undefined;
                            value?: string | undefined;
                        }[] | undefined;
                    } & {
                        records?: ({
                            key?: string | undefined;
                            value?: string | undefined;
                        }[] & ({
                            key?: string | undefined;
                            value?: string | undefined;
                        } & {
                            key?: string | undefined;
                            value?: string | undefined;
                        } & Record<Exclude<keyof I["children"][number]["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["children"][number]["children"][number]["value"]["mapValue"]["records"], keyof {
                            key?: string | undefined;
                            value?: string | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["children"][number]["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                    intPairValue?: number | undefined;
                } & Record<Exclude<keyof I["children"][number]["children"][number]["value"], keyof Value>, never>) | undefined;
                propertyMetadata?: ({
                    itemId?: number | undefined;
                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                    abNamespaceForHashing?: string | undefined;
                    abSeedForHashing?: string | undefined;
                } & {
                    itemId?: number | undefined;
                    signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                    abNamespaceForHashing?: string | undefined;
                    abSeedForHashing?: string | undefined;
                } & Record<Exclude<keyof I["children"][number]["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
            } & Record<Exclude<keyof I["children"][number]["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["children"][number]["children"], keyof any[]>, never>) | undefined;
            property?: ClientTargetingExpression_Property | undefined;
            predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
            value?: ({
                intValue?: number | undefined;
                longValue?: number | undefined;
                floatValue?: number | undefined;
                doubleValue?: number | undefined;
                boolValue?: boolean | undefined;
                stringValue?: string | undefined;
                anyValue?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } | undefined;
                mapValue?: {
                    records?: {
                        key?: string | undefined;
                        value?: string | undefined;
                    }[] | undefined;
                } | undefined;
                intPairValue?: number | undefined;
            } & {
                intValue?: number | undefined;
                longValue?: number | undefined;
                floatValue?: number | undefined;
                doubleValue?: number | undefined;
                boolValue?: boolean | undefined;
                stringValue?: string | undefined;
                anyValue?: ({
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["children"][number]["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
                mapValue?: ({
                    records?: {
                        key?: string | undefined;
                        value?: string | undefined;
                    }[] | undefined;
                } & {
                    records?: ({
                        key?: string | undefined;
                        value?: string | undefined;
                    }[] & ({
                        key?: string | undefined;
                        value?: string | undefined;
                    } & {
                        key?: string | undefined;
                        value?: string | undefined;
                    } & Record<Exclude<keyof I["children"][number]["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["children"][number]["value"]["mapValue"]["records"], keyof {
                        key?: string | undefined;
                        value?: string | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I["children"][number]["value"]["mapValue"], "records">, never>) | undefined;
                intPairValue?: number | undefined;
            } & Record<Exclude<keyof I["children"][number]["value"], keyof Value>, never>) | undefined;
            propertyMetadata?: ({
                itemId?: number | undefined;
                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                abNamespaceForHashing?: string | undefined;
                abSeedForHashing?: string | undefined;
            } & {
                itemId?: number | undefined;
                signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
                abNamespaceForHashing?: string | undefined;
                abSeedForHashing?: string | undefined;
            } & Record<Exclude<keyof I["children"][number]["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
        } & Record<Exclude<keyof I["children"][number], keyof ClientTargetingExpression>, never>)[] & Record<Exclude<keyof I["children"], keyof any[]>, never>) | undefined;
        property?: ClientTargetingExpression_Property | undefined;
        predicateOperator?: ClientTargetingExpression_PredicateOperator | undefined;
        value?: ({
            intValue?: number | undefined;
            longValue?: number | undefined;
            floatValue?: number | undefined;
            doubleValue?: number | undefined;
            boolValue?: boolean | undefined;
            stringValue?: string | undefined;
            anyValue?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } | undefined;
            mapValue?: {
                records?: {
                    key?: string | undefined;
                    value?: string | undefined;
                }[] | undefined;
            } | undefined;
            intPairValue?: number | undefined;
        } & {
            intValue?: number | undefined;
            longValue?: number | undefined;
            floatValue?: number | undefined;
            doubleValue?: number | undefined;
            boolValue?: boolean | undefined;
            stringValue?: string | undefined;
            anyValue?: ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & Record<Exclude<keyof I["value"]["anyValue"], keyof import("../../google/protobuf/any").Any>, never>) | undefined;
            mapValue?: ({
                records?: {
                    key?: string | undefined;
                    value?: string | undefined;
                }[] | undefined;
            } & {
                records?: ({
                    key?: string | undefined;
                    value?: string | undefined;
                }[] & ({
                    key?: string | undefined;
                    value?: string | undefined;
                } & {
                    key?: string | undefined;
                    value?: string | undefined;
                } & Record<Exclude<keyof I["value"]["mapValue"]["records"][number], keyof import("../../common/value").MapRecord>, never>)[] & Record<Exclude<keyof I["value"]["mapValue"]["records"], keyof {
                    key?: string | undefined;
                    value?: string | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["value"]["mapValue"], "records">, never>) | undefined;
            intPairValue?: number | undefined;
        } & Record<Exclude<keyof I["value"], keyof Value>, never>) | undefined;
        propertyMetadata?: ({
            itemId?: number | undefined;
            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
            abNamespaceForHashing?: string | undefined;
            abSeedForHashing?: string | undefined;
        } & {
            itemId?: number | undefined;
            signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
            abNamespaceForHashing?: string | undefined;
            abSeedForHashing?: string | undefined;
        } & Record<Exclude<keyof I["propertyMetadata"], keyof ClientTargetingExpression_PropertyMetadata>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof ClientTargetingExpression>, never>>(object: I): ClientTargetingExpression;
};
export declare const ClientTargetingExpression_PropertyMetadata: {
    encode(message: ClientTargetingExpression_PropertyMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ClientTargetingExpression_PropertyMetadata;
    fromPartial<I extends {
        itemId?: number | undefined;
        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
        abNamespaceForHashing?: string | undefined;
        abSeedForHashing?: string | undefined;
    } & {
        itemId?: number | undefined;
        signalToHash?: ClientTargetingExpression_PropertyMetadata_SignalToHash | undefined;
        abNamespaceForHashing?: string | undefined;
        abSeedForHashing?: string | undefined;
    } & Record<Exclude<keyof I, keyof ClientTargetingExpression_PropertyMetadata>, never>>(object: I): ClientTargetingExpression_PropertyMetadata;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;
export {};
