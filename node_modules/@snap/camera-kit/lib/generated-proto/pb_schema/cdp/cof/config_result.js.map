{"version":3,"file":"config_result.js","sourceRoot":"","sources":["../../../../../src/generated-proto/pb_schema/cdp/cof/config_result.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Namespace } from \"./namespace\";\nimport { Ruid_Type } from \"../../common/ruid\";\nimport { Value } from \"../../common/value\";\n\nexport const protobufPackage = \"snapchat.cdp.cof\";\n\nexport interface ConfigResult {\n  /** The id of the config. */\n  configId: string;\n  /**\n   * The chosen value of the config.\n   * This should be sufficient to model most use cases. But in the future if additional structured\n   * data need to be conveyed as part of the value we can add a field with type google.protobuf.Any,\n   * which the developer can decoded as arbitrary proto on the client.\n   */\n  value: Value | undefined;\n  /**\n   * The \"Partial\" targeting expression. Some nodes have been removed from the original ConfigRule targeting\n   * expression in a way that all the remaining leaf nodes only have properties that client can evaluate, and as long\n   * as this expression evaluates to true it is consistent with the server side evaluation.\n   */\n  targetingExpression: ClientTargetingExpression | undefined;\n  /** The client should fetch the config again if the TTL is exceeded. */\n  ttlSeconds: number;\n  /** The UUID bytes that identifies the config rule. */\n  configRuleUuidBytes: Uint8Array;\n  /** Priority used for client to tie-break multiple matching results for the same config. */\n  priority: number;\n  /** Namespace of the config. */\n  namespace: Namespace;\n  /** AB study name if the value is picked from an experiment. */\n  studyName: string;\n  /** AB study experiment id if the value is picked from an experiment. */\n  experimentId: number;\n  /** Indicate the entry should be deleted in a delta sync. */\n  delete: boolean;\n  /** Serving platform for this config. */\n  servePlatforms: ConfigResult_ServePlatform[];\n  /** Sequence id of this config result. */\n  sequenceId: number;\n  /** RUID type assigned to this config. */\n  ruidType: Ruid_Type;\n  /**\n   * Segment ordinal of the AB study segment, from which\n   * this config result was generated. If set, this is\n   * to be used as a secondary priority\n   */\n  segmentOrdinal: number;\n  /**\n   * Whether this ConfigResult message was generated\n   * from AB allowlists. Allowlists need to be handled with\n   * a higher priority, comparing to regular AB-generated results\n   */\n  generatedFromAbAllowlists: boolean;\n}\n\n/** The suffix of \"_PLATFORM\" is appended, due to C++ declared enums with global scope, which causes issues in Snapchat/client */\nexport enum ConfigResult_ServePlatform {\n  UNKNOWN_CONTEXT_PLATFORM = 0,\n  IOS_PLATFORM = 1,\n  ANDROID_PLATFORM = 2,\n  SERVER_PLATFORM = 3,\n  UNRECOGNIZED = -1,\n}\n\n/**\n * Serves as a convenient bundle for a list of ConfigResults. Primarily used when sending this list of ConfigResults\n * from the platform layer into the native layer.\n */\nexport interface ConfigResultBundle {\n  /** The etag used to fetch these configs from the server */\n  etag: string;\n  /** The list of ConfigResults that match the user-specified query */\n  configResults: ConfigResult[];\n}\n\n/**\n * The targeting expression.\n * It has the same structure as TargetingExpression in\n * https://github.sc-corp.net/Snapchat/CircumstancesCMS/blob/master/circumstances-proto/src/main/proto/config.proto\n * Notable differences:\n * 1. The property is a enum, with only the kinds of signals that should be evaluated on the client side\n * 2. PredicateOperator doesn't have \"IN\". The IN predicates are expanded into a OR tree during indexing.\n * 3. The value is a multi type union as opposed to string. The value in TargetingExpression is string for the\n *    convenience of manipulation in the UI, but it's more efficient to transmit the actual types over the wire.\n */\nexport interface ClientTargetingExpression {\n  /**\n   * Parent node fields:\n   * Logical operator\n   */\n  operator: ClientTargetingExpression_Operator;\n  /** Child nodes */\n  children: ClientTargetingExpression[];\n  /**\n   * Leaf node fields:\n   * The property that needs to be evaluated.\n   */\n  property: ClientTargetingExpression_Property;\n  /** The predicate operator */\n  predicateOperator: ClientTargetingExpression_PredicateOperator;\n  /** The value of property. */\n  value: Value | undefined;\n  /** property's metadata. Doesn't have to be set */\n  propertyMetadata: ClientTargetingExpression_PropertyMetadata | undefined;\n}\n\nexport enum ClientTargetingExpression_Operator {\n  UNKNOWN_OPERATOR = 0,\n  AND = 1,\n  OR = 2,\n  UNRECOGNIZED = -1,\n}\n\nexport enum ClientTargetingExpression_PredicateOperator {\n  UNKNOWN_PREDICATE_OPERATOR = 0,\n  EQUAL = 1,\n  NOT_EQUAL = 2,\n  GREATER_THAN_OR_EQUAL_TO = 3,\n  LESS_THAN_OR_EQUAL_TO = 4,\n  UNRECOGNIZED = -1,\n}\n\nexport enum ClientTargetingExpression_Property {\n  UNKNOWN_PROPERTY = 0,\n  /**\n   * BATTERY_LEVEL - A enum ordinal indicating the battery level is LOW/MID/HIGH.\n   * The ordinals are defined in snapchat.cdp.cof.battery_level.proto\n   */\n  BATTERY_LEVEL = 1,\n  /** IS_OFFLINE - A boolean indicating whether the device is offline. */\n  IS_OFFLINE = 2,\n  /** IS_CHARGING - A boolean indicating whether the device is charging. */\n  IS_CHARGING = 3,\n  /** BANDWIDTH - An integer representing the download bandwidth in bps. */\n  BANDWIDTH = 4,\n  /** DISK_SIZE - Disk size in mb */\n  DISK_SIZE = 5,\n  /** DISK_AVAILABLE - Disk space available in mb */\n  DISK_AVAILABLE = 6,\n  /**\n   * MEDIA_TYPE_DEPRECATED - An enum ordinal indicating the type of media being processed.\n   * The ordinals are defined in snapchat.snapdoc.MediaMetadata.MediaType.\n   *\n   * @deprecated\n   */\n  MEDIA_TYPE_DEPRECATED = 7,\n  /** IS_PUBLIC_STORY - A boolean indicating whether the story is shared publicly. */\n  IS_PUBLIC_STORY = 8,\n  /** IS_OFFICIAL_STORY - A boolean indicating whether the story is posted from offcial account and is public. */\n  IS_OFFICIAL_STORY = 9,\n  /** CAMERA_DIRECTION - An enum for camera direction */\n  CAMERA_DIRECTION = 10,\n  /** CAMERA_CONTEXT - An enum for camera context */\n  CAMERA_CONTEXT = 11,\n  /** CAMERA_API - An enum for camera API */\n  CAMERA_API = 12,\n  /** CAMERA_FLASH_STATE - An enum for camera flash state */\n  CAMERA_FLASH_STATE = 13,\n  /** SNAP_SOURCE - An enum for where the snap orginates */\n  SNAP_SOURCE = 14,\n  /** LEGACY_MUSHROOM_CONTENT_TYPE - An enum for what content type is being used */\n  LEGACY_MUSHROOM_CONTENT_TYPE = 15,\n  /** UPLOAD_BANDWIDTH - An integer representing the upload bandwidth in bps. */\n  UPLOAD_BANDWIDTH = 16,\n  /** CAMERA2_LEVEL - An enum for camera2 hardware support level. */\n  CAMERA2_LEVEL = 17,\n  /** CAMERA_NIGHT_MODE_STATE - An enum for Camera night model state. */\n  CAMERA_NIGHT_MODE_STATE = 18,\n  /** USER_LANGUAGE - The language user chooses the app to display */\n  USER_LANGUAGE = 19,\n  /** VIDEO_DURATION - The video duration in ms. */\n  VIDEO_DURATION = 20,\n  /** REALTIME_MOBILE_NETWORK_GENERATION - Mobile network generation(3G, 4G, etc) defined in snapchat.cdp.cof.mobile_network_generation.proto */\n  REALTIME_MOBILE_NETWORK_GENERATION = 21,\n  /** REALTIME_NETWORK_TYPE - Mobile networktype defined via Connectivity.NetworkType in snapchat.cdp.cof.circumstance_engine.proto */\n  REALTIME_NETWORK_TYPE = 22,\n  /** REALTIME_NETWORK_IS_METERED - A boolean for if the current network is metered. */\n  REALTIME_NETWORK_IS_METERED = 23,\n  /** REALTIME_NETWORK_IS_ROAMING - A boolean for if the current network is roaming. */\n  REALTIME_NETWORK_IS_ROAMING = 24,\n  /** CAMERA_IS_FIRST_CAPTURE - A boolean indicating whether this is the first capture after app cold start */\n  CAMERA_IS_FIRST_CAPTURE = 25,\n  /** PICTURE_MODE - A enum indicating which type of image capture this was [GPU or JPEG] */\n  PICTURE_MODE = 26,\n  /** BOLT_USE_CASE - An integer representing what BOLT usecase the caller is using. */\n  BOLT_USE_CASE = 27,\n  /** BOLT_CDN_EXPERIMENTATION_ID - An integer representing what BOLT cdn should be experimented with */\n  BOLT_CDN_EXPERIMENTATION_ID = 28,\n  /** MINS_SINCE_LAST_LENS_ACTIVATION - Num of mins since a user last activates the Lens. */\n  MINS_SINCE_LAST_LENS_ACTIVATION = 29,\n  /** MINS_SINCE_LAST_SNAPPABLE_LENS_ACTIVATION - Num of mins since user activated snappable lens for the last time. */\n  MINS_SINCE_LAST_SNAPPABLE_LENS_ACTIVATION = 30,\n  /** DAYS_SINCE_LAST_LOGIN_OR_OPEN - Integer between 0 .. N which is the number of days since the user logged in or opened the app */\n  DAYS_SINCE_LAST_LOGIN_OR_OPEN = 31,\n  /** SPECTACLES_VERSION - An enum for Spectacles version */\n  SPECTACLES_VERSION = 32,\n  /** STICKY_MAX_CONNECTION_TYPE - A client side property for evaluating the highest tier connection a client has recently used. */\n  STICKY_MAX_CONNECTION_TYPE = 33,\n  /** WITH_ANIMATED_OVERLAY - A boolean indicating whether there is animated overlay with video snap. */\n  WITH_ANIMATED_OVERLAY = 34,\n  /** ESTIMATED_DURATION_FOR_EVENT_MS - Estimated duration for a config-specific event */\n  ESTIMATED_DURATION_FOR_EVENT_MS = 35,\n  /** URL - A URL */\n  URL = 36,\n  /** MEDIA_SOURCE - content’s origin prior to being injected into the MDP stack */\n  MEDIA_SOURCE = 37,\n  /** ASSET_TYPE - how to compose an individual asset into one larger logical asset */\n  ASSET_TYPE = 38,\n  /** BOLT_IS_CONTENT_POPULAR - A boolean representing whether the content being resolved is popular or not. */\n  BOLT_IS_CONTENT_POPULAR = 39,\n  /** CAPTURE_MODE - A enum indicating which mode of capture this was [Timeline or Unknown] */\n  CAPTURE_MODE = 40,\n  /** VP9_SOFTWARE_DECODING_SUPPORTED - A boolean representing if VP9 software decoding is supported */\n  VP9_SOFTWARE_DECODING_SUPPORTED = 41,\n  /** AV1_SOFTWARE_DECODING_SUPPORTED - A boolean representing if AV1 software decoding is supported */\n  AV1_SOFTWARE_DECODING_SUPPORTED = 42,\n  /** WITH_MUSIC - A boolean to indicate whether there is music edits (e.g. music sticker). */\n  WITH_MUSIC = 43,\n  /**\n   * FEATURE_PROVIDED_SIZE - A client provided integer representing size. The units is decided by the caller.\n   * This will be evaluated using FeatureProvidedSignals.size\n   */\n  FEATURE_PROVIDED_SIZE = 44,\n  /**\n   * MEDIA_TYPE - An enum ordinal indicating the type of media being processed.\n   * The ordinals are defined in snapchat.cdp.cof.media_provided_signals.proto\n   */\n  MEDIA_TYPE = 45,\n  /** SCANNED_CATEGORY_IDS - The ids of the categories that are currently being scanned for (e.g. Amazon, Photomath, etc) */\n  SCANNED_CATEGORY_IDS = 46,\n  /**\n   * CONTENT_VIEW_SOURCE - Numerical value of ContentViewSource (Blizzard enum) which identified Opera session\n   * On the client the value is provided via FeatureProvidedSignals.OperaSignals\n   */\n  CONTENT_VIEW_SOURCE = 47,\n  /** RECIPIENTS_SUPPORT_HEVC - A boolean indicating whether a group of recipients support High Efficiency Video Encoding (HEVC) */\n  RECIPIENTS_SUPPORT_HEVC = 48,\n  /** COGNAC_APP_ID - A Cognac game/mini id that a user is playing */\n  COGNAC_APP_ID = 49,\n  /** EMAIL_VERIFIED - Whether user's email has verified */\n  EMAIL_VERIFIED = 50,\n  /** PHONE_VERIFIED - Whether user's phone number has verified */\n  PHONE_VERIFIED = 51,\n  /** NOTIFICATION_PERM_GRANTED - Whether notification permission has granted */\n  NOTIFICATION_PERM_GRANTED = 52,\n  /** CONTACT_PERM_GRANTED - Whether contact permission has granted */\n  CONTACT_PERM_GRANTED = 53,\n  /** MUTUAL_FRIENDS_COUNT - Mutual friends count */\n  MUTUAL_FRIENDS_COUNT = 54,\n  /** GROUPS_COUNT - Groups count */\n  GROUPS_COUNT = 55,\n  /** HAS_NON_TEAM_SNAPCHAT_CONVERSATIONS - Whether user has non-team snapchat conversations */\n  HAS_NON_TEAM_SNAPCHAT_CONVERSATIONS = 56,\n  /**\n   * PLAYBACK_ITEM_TYPE - Numerical value of PlaybackItemType (Blizzard enum) which identifies an Opera playback item type\n   * On the client the value is provided via PlaybackItemType\n   */\n  PLAYBACK_ITEM_TYPE = 57,\n  /**\n   * SUP_BOOLEAN_PROPERTY - To get the corresponding SUP property values, check on property_metadata.sup_item_id.item_id\n   * Sup boolean property\n   */\n  SUP_BOOLEAN_PROPERTY = 58,\n  /** SUP_INTEGER_PROPERTY - Sup integer property */\n  SUP_INTEGER_PROPERTY = 59,\n  /** SUP_LONG_PROPERTY - Sup long property */\n  SUP_LONG_PROPERTY = 60,\n  /** SUP_STRING_PROPERTY - Sup string property */\n  SUP_STRING_PROPERTY = 61,\n  /** SUP_DOUBLE_PROPERTY - Sup double property */\n  SUP_DOUBLE_PROPERTY = 62,\n  /** SUP_MILLIS_PROPERTY_TO_NOW - Sup long property as timestamp in millis to get time elapsed */\n  SUP_MILLIS_PROPERTY_TO_NOW = 63,\n  /** HAS_USED_SPECTACLES - Whether the user has used Spectacles (incl. Cheerios) */\n  HAS_USED_SPECTACLES = 64,\n  /**\n   * SUP_SECS_PROPERTY_TO_NOW - To get the corresponding SUP property values, check on property_metadata.sup_item_id.item_id\n   * Sup long property as timestamp in seconds to get time elapsed\n   */\n  SUP_SECS_PROPERTY_TO_NOW = 65,\n  /** BOLT_CLIENT_APP_STATE - Enum indicating client App State (Used by BOLT to create targeted network rules) */\n  BOLT_CLIENT_APP_STATE = 66,\n  /** EMAIL_SET - Whether user's email has been set (might or might not be verified) */\n  EMAIL_SET = 67,\n  /** BITMOJI_SET - Whether user's bitmoji has been set */\n  BITMOJI_SET = 68,\n  /** QUICK_TAP_CAMERA_SUPPORTED_ENABLED - Quick tap on camera is supported and enabled */\n  QUICK_TAP_CAMERA_SUPPORTED_ENABLED = 69,\n  /** HAS_ADD_FRIENDS_REQUEST - Whether user has add friends request */\n  HAS_ADD_FRIENDS_REQUEST = 70,\n  /** APP_LAUNCH_FROM_PUSH - App launched from push notification */\n  APP_LAUNCH_FROM_PUSH = 71,\n  /** APP_LAUNCH_TYPE - App launch type: cold start, warm start, registration and login */\n  APP_LAUNCH_TYPE = 72,\n  /** BILLBOARD_CAMPAIGN_LOCAL_IMPRESSION_COUNT - Billboard locally tracked impression count */\n  BILLBOARD_CAMPAIGN_LOCAL_IMPRESSION_COUNT = 73,\n  /** BILLBOARD_CAMPAIGN_LOCAL_LAST_IMPRESSION_TIME_SECS_TO_NOW - Billboard locally tracked last impression time in secs to now */\n  BILLBOARD_CAMPAIGN_LOCAL_LAST_IMPRESSION_TIME_SECS_TO_NOW = 74,\n  /** BILLBOARD_CAMPAIGN_LOCAL_CONTINUOUS_DISMISS_COUNT - Billboard locally tracked continuous dismiss count */\n  BILLBOARD_CAMPAIGN_LOCAL_CONTINUOUS_DISMISS_COUNT = 75,\n  /** FST_NUM_IN_APP_WARNINGS - FST number of in app warnings to show */\n  FST_NUM_IN_APP_WARNINGS = 76,\n  /** FST_SHOULD_CHANGE_PASSWORD - FST user should change password */\n  FST_SHOULD_CHANGE_PASSWORD = 77,\n  /** FST_IS_BACKGROUND_CHECK - Whether it's a background check or foreground check. Android specific */\n  FST_IS_BACKGROUND_CHECK = 78,\n  /** AUDIO_RECORD_PERM_GRANTED - Whether audio record permission has granted */\n  AUDIO_RECORD_PERM_GRANTED = 79,\n  /** MUTUAL_FRIENDS_WITH_BIRTHDAY_COUNT - Mutual Friends with birthday count */\n  MUTUAL_FRIENDS_WITH_BIRTHDAY_COUNT = 80,\n  /** BILLBOARD_CAMPAIGN_LOCAL_DISMISS_COUNT - Billboard locally tracked dismiss count */\n  BILLBOARD_CAMPAIGN_LOCAL_DISMISS_COUNT = 81,\n  /** USE_VERTICAL_NAVIGATION - A boolean to indicate whether Opera uses vertical navigation or not. */\n  USE_VERTICAL_NAVIGATION = 82,\n  /**\n   * FREEABLE_DISK_AVAILABLE - Freeable disk space available in mb. This included Content Manager freeable\n   * bytes + DISK_AVAILABLE\n   */\n  FREEABLE_DISK_AVAILABLE = 83,\n  /** MEMORIES_COUNT - Num of memories snaps user has */\n  MEMORIES_COUNT = 84,\n  /** DEVICE_MODEL - DEVICE_MODEL (variant copied from TargetingProperty.Property) */\n  DEVICE_MODEL = 85,\n  /** COUNTRY - COUNTRY (variant copied from TargetingProperty.Property) */\n  COUNTRY = 86,\n  /** OS - OS (variant copied from TargetingProperty.Property) */\n  OS = 87,\n  /** OS_VERSION - OS_VERSION (variant copied from TargetingProperty.Property) */\n  OS_VERSION = 88,\n  /** APP_VERSION - APP_VERSION (variant copied from TargetingProperty.Property) */\n  APP_VERSION = 89,\n  /** BUILD_FLAVOR - BUILD_FLAVOR (variant copied from TargetingProperty.Property) */\n  BUILD_FLAVOR = 90,\n  /** USER_ID - USER_ID (variant copied from TargetingProperty.Property) */\n  USER_ID = 91,\n  /** LOCALE - LOCALE (variant copied from TargetingProperty.Property) */\n  LOCALE = 92,\n  /** DEVICE_CLUSTER - DEVICE_CLUSTER (variant copied from TargetingProperty.Property) */\n  DEVICE_CLUSTER = 93,\n  /** DEVICE_BRAND - DEVICE_BRAND (variant copied from TargetingProperty.Property) */\n  DEVICE_BRAND = 94,\n  /** IS_EMPLOYEE - IS_EMPLOYEE (variant copied from TargetingProperty.Property) */\n  IS_EMPLOYEE = 95,\n  /** USERNAME - USERNAME (variant copied from TargetingProperty.Property) */\n  USERNAME = 96,\n  /** IS_TEST_USER - IS_TEST_USER (variant copied from TargetingProperty.Property) */\n  IS_TEST_USER = 97,\n  /** USER_PROFILE - USER_PROFILE (variant copied from TargetingProperty.Property) */\n  USER_PROFILE = 98,\n  /** SCREEN_WIDTH - SCREEN_WIDTH (variant copied from TargetingProperty.Property) */\n  SCREEN_WIDTH = 99,\n  /** SCREEN_HEIGHT - SCREEN_HEIGHT (variant copied from TargetingProperty.Property) */\n  SCREEN_HEIGHT = 100,\n  /** HEVC_SUPPORT - HEVC_SUPPORT (variant copied from TargetingProperty.Property) */\n  HEVC_SUPPORT = 101,\n  /** NETWORK_TYPE - NETWORK_TYPE (variant copied from TargetingProperty.Property) */\n  NETWORK_TYPE = 102,\n  /** MAX_VIDEO_WIDTH - MAX_VIDEO_WIDTH (variant copied from TargetingProperty.Property) */\n  MAX_VIDEO_WIDTH = 103,\n  /** MAX_VIDEO_HEIGHT - MAX_VIDEO_HEIGHT (variant copied from TargetingProperty.Property) */\n  MAX_VIDEO_HEIGHT = 104,\n  /** IS_NETWORK_METERED - IS_NETWORK_METERED (variant copied from TargetingProperty.Property) */\n  IS_NETWORK_METERED = 105,\n  /** IS_ROAMING - IS_ROAMING (variant copied from TargetingProperty.Property) */\n  IS_ROAMING = 106,\n  /** APP_ENGAGEMENT_LEVEL - APP_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */\n  APP_ENGAGEMENT_LEVEL = 107,\n  /** COMMUNICATION_ENGAGEMENT_LEVEL - COMMUNICATION_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */\n  COMMUNICATION_ENGAGEMENT_LEVEL = 108,\n  /** FRIEND_STORY_ENGAGEMENT_LEVEL - FRIEND_STORY_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */\n  FRIEND_STORY_ENGAGEMENT_LEVEL = 109,\n  /** PUBLIC_USER_STORY_ENGAGEMENT_LEVEL - PUBLIC_USER_STORY_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */\n  PUBLIC_USER_STORY_ENGAGEMENT_LEVEL = 110,\n  /** PUBLISHER_STORY_ENGAGEMENT_LEVEL - PUBLISHER_STORY_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */\n  PUBLISHER_STORY_ENGAGEMENT_LEVEL = 111,\n  /** LENS_ENGAGEMENT_LEVEL - LENS_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */\n  LENS_ENGAGEMENT_LEVEL = 112,\n  /** NON_FRIEND_STORY_ENGAGEMENT_LEVEL - NON_FRIEND_STORY_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */\n  NON_FRIEND_STORY_ENGAGEMENT_LEVEL = 113,\n  /** FOLLOWER_SIZE_LEVEL - FOLLOWER_SIZE_LEVEL (variant copied from TargetingProperty.Property) */\n  FOLLOWER_SIZE_LEVEL = 114,\n  /** DAYS_SINCE_CREATION - DAYS_SINCE_CREATION (variant copied from TargetingProperty.Property) */\n  DAYS_SINCE_CREATION = 115,\n  /** USER_PERSONA - USER_PERSONA (variant copied from TargetingProperty.Property) */\n  USER_PERSONA = 116,\n  /** USER_CREATION_TIME - USER_CREATION_TIME (variant copied from TargetingProperty.Property) */\n  USER_CREATION_TIME = 117,\n  /** MOBILE_NETWORK_TYPE - MOBILE_NETWORK_TYPE (variant copied from TargetingProperty.Property) */\n  MOBILE_NETWORK_TYPE = 118,\n  /** AGGREGATED_USER_BANDWIDTH - AGGREGATED_USER_BANDWIDTH (variant copied from TargetingProperty.Property) */\n  AGGREGATED_USER_BANDWIDTH = 119,\n  /** LENS_CLUSTER_BIASED - LENS_CLUSTER_BIASED (variant copied from TargetingProperty.Property) */\n  LENS_CLUSTER_BIASED = 120,\n  /** LENS_CLUSTER_LOG - LENS_CLUSTER_LOG (variant copied from TargetingProperty.Property) */\n  LENS_CLUSTER_LOG = 121,\n  /** LENS_CLUSTER_ORIG - LENS_CLUSTER_ORIG (variant copied from TargetingProperty.Property) */\n  LENS_CLUSTER_ORIG = 122,\n  /** LENS_CLUSTER_ORIG_4 - LENS_CLUSTER_ORIG_4 (variant copied from TargetingProperty.Property) */\n  LENS_CLUSTER_ORIG_4 = 123,\n  /** LENS_CLUSTER_BIASED_LOG - LENS_CLUSTER_BIASED_LOG (variant copied from TargetingProperty.Property) */\n  LENS_CLUSTER_BIASED_LOG = 124,\n  /** APP_LOCALE - APP_LOCALE (variant copied from TargetingProperty.Property) */\n  APP_LOCALE = 125,\n  /** DEVICE_COMMON_NAME - DEVICE_COMMON_NAME (variant copied from TargetingProperty.Property) */\n  DEVICE_COMMON_NAME = 126,\n  /** USER_FRIEND_COUNT - USER_FRIEND_COUNT (variant copied from TargetingProperty.Property) */\n  USER_FRIEND_COUNT = 127,\n  /** L90_COUNTRY - L90_COUNTRY (variant copied from TargetingProperty.Property) */\n  L90_COUNTRY = 128,\n  /** STUB - STUB (variant copied from TargetingProperty.Property) */\n  STUB = 129,\n  /** IS_TRUE - IS_TRUE (variant copied from TargetingProperty.Property) */\n  IS_TRUE = 130,\n  /** STORY_POST_RATIO - STORY_POST_RATIO (variant copied from TargetingProperty.Property) */\n  STORY_POST_RATIO = 131,\n  /** GENDER - GENDER (variant copied from TargetingProperty.Property) */\n  GENDER = 132,\n  /** INFERRED_AGE_BUCKET - INFERRED_AGE_BUCKET (variant copied from TargetingProperty.Property) */\n  INFERRED_AGE_BUCKET = 133,\n  /** STORIES - STORIES (variant copied from TargetingProperty.Property) */\n  STORIES = 134,\n  /** SENDS - SENDS (variant copied from TargetingProperty.Property) */\n  SENDS = 135,\n  /** SNAP_CREATE_L7 - SNAP_CREATE_L7 (variant copied from TargetingProperty.Property) */\n  SNAP_CREATE_L7 = 136,\n  /** STORY_POST_L7 - STORY_POST_L7 (variant copied from TargetingProperty.Property) */\n  STORY_POST_L7 = 137,\n  /** COMMUNICATION_L7 - COMMUNICATION_L7 (variant copied from TargetingProperty.Property) */\n  COMMUNICATION_L7 = 138,\n  /** DF_L7 - DF_L7 (variant copied from TargetingProperty.Property) */\n  DF_L7 = 139,\n  /** APP_L7 - APP_L7 (variant copied from TargetingProperty.Property) */\n  APP_L7 = 140,\n  /** DAYS_SINCE_CREATION_BUCKET - DAYS_SINCE_CREATION_BUCKET (variant copied from TargetingProperty.Property) */\n  DAYS_SINCE_CREATION_BUCKET = 141,\n  /** BIDIRECTIONAL_FRIEND_STATUS - BIDIRECTIONAL_FRIEND_STATUS (variant copied from TargetingProperty.Property) */\n  BIDIRECTIONAL_FRIEND_STATUS = 142,\n  /** STORY_POST_PREDICTION - STORY_POST_PREDICTION (variant copied from TargetingProperty.Property) */\n  STORY_POST_PREDICTION = 143,\n  /** APP_OPENS - APP_OPENS (variant copied from TargetingProperty.Property) */\n  APP_OPENS = 144,\n  /** LENS_SWIPES - LENS_SWIPES (variant copied from TargetingProperty.Property) */\n  LENS_SWIPES = 145,\n  /** LENS_SNAPS - LENS_SNAPS (variant copied from TargetingProperty.Property) */\n  LENS_SNAPS = 146,\n  /** LENS_OPS - LENS_OPS (variant copied from TargetingProperty.Property) */\n  LENS_OPS = 147,\n  /** W1_APP_OPENS - W1_APP_OPENS (variant copied from TargetingProperty.Property) */\n  W1_APP_OPENS = 148,\n  /** W1_LENS_SWIPES - W1_LENS_SWIPES (variant copied from TargetingProperty.Property) */\n  W1_LENS_SWIPES = 149,\n  /** W1_LENS_SNAPS - W1_LENS_SNAPS (variant copied from TargetingProperty.Property) */\n  W1_LENS_SNAPS = 150,\n  /** W1_LENS_OPS - W1_LENS_OPS (variant copied from TargetingProperty.Property) */\n  W1_LENS_OPS = 151,\n  /** W2_APP_OPENS - W2_APP_OPENS (variant copied from TargetingProperty.Property) */\n  W2_APP_OPENS = 152,\n  /** W2_LENS_SWIPES - W2_LENS_SWIPES (variant copied from TargetingProperty.Property) */\n  W2_LENS_SWIPES = 153,\n  /** W2_LENS_SNAPS - W2_LENS_SNAPS (variant copied from TargetingProperty.Property) */\n  W2_LENS_SNAPS = 154,\n  /** W2_LENS_OPS - W2_LENS_OPS (variant copied from TargetingProperty.Property) */\n  W2_LENS_OPS = 155,\n  /** W34_APP_OPENS - W34_APP_OPENS (variant copied from TargetingProperty.Property) */\n  W34_APP_OPENS = 156,\n  /** W34_LENS_SWIPES - W34_LENS_SWIPES (variant copied from TargetingProperty.Property) */\n  W34_LENS_SWIPES = 157,\n  /** W34_LENS_SNAPS - W34_LENS_SNAPS (variant copied from TargetingProperty.Property) */\n  W34_LENS_SNAPS = 158,\n  /** W34_LENS_OPS - W34_LENS_OPS (variant copied from TargetingProperty.Property) */\n  W34_LENS_OPS = 159,\n  /** LENS_SWIPES_PREDICTION - LENS_SWIPES_PREDICTION (variant copied from TargetingProperty.Property) */\n  LENS_SWIPES_PREDICTION = 160,\n  /** REGISTRATION_COUNTRY - REGISTRATION_COUNTRY (variant copied from TargetingProperty.Property) */\n  REGISTRATION_COUNTRY = 161,\n  /** IP_ASN - IP_ASN (variant copied from TargetingProperty.Property) */\n  IP_ASN = 162,\n  /** IP_REGION - IP_REGION (variant copied from TargetingProperty.Property) */\n  IP_REGION = 163,\n  /** IP_CITY - IP_CITY (variant copied from TargetingProperty.Property) */\n  IP_CITY = 164,\n  /** HAS_USER_ID - HAS_USER_ID (variant copied from TargetingProperty.Property) */\n  HAS_USER_ID = 165,\n  /** HAS_BITMOJI - HAS_BITMOJI (variant copied from TargetingProperty.Property) */\n  HAS_BITMOJI = 166,\n  /** NUM_APP_OPENS_LAST_8_DAYS - NUM_APP_OPENS_LAST_8_DAYS (variant copied from TargetingProperty.Property) */\n  NUM_APP_OPENS_LAST_8_DAYS = 167,\n  /** NUM_FEATURE_STORY_VIEW_DAYS_L7 - NUM_FEATURE_STORY_VIEW_DAYS_L7 (variant copied from TargetingProperty.Property) */\n  NUM_FEATURE_STORY_VIEW_DAYS_L7 = 168,\n  /** NUM_FEATURE_STORY_SYNC_DAYS_L7 - NUM_FEATURE_STORY_SYNC_DAYS_L7 (variant copied from TargetingProperty.Property) */\n  NUM_FEATURE_STORY_SYNC_DAYS_L7 = 169,\n  /** HEXAGON_NN_SUPPORTED_VERSION - HEXAGON_NN_SUPPORTED_VERSION (variant copied from TargetingProperty.Property) */\n  HEXAGON_NN_SUPPORTED_VERSION = 170,\n  /** NETWORK_QUALITY - NETWORK_QUALITY (variant copied from TargetingProperty.Property) */\n  NETWORK_QUALITY = 171,\n  /** DEVICE_MEMORY_MB - DEVICE_MEMORY_MB (variant copied from TargetingProperty.Property) */\n  DEVICE_MEMORY_MB = 172,\n  /** DEVICE_GL_VERSION - DEVICE_GL_VERSION (variant copied from TargetingProperty.Property) */\n  DEVICE_GL_VERSION = 173,\n  /** SNAP_PRO_STATUS - SNAP_PRO_STATUS (variant copied from TargetingProperty.Property) */\n  SNAP_PRO_STATUS = 174,\n  /** DEVICE_VP9_DECODING_SUPPORT - DEVICE_VP9_DECODING_SUPPORT (variant copied from TargetingProperty.Property) */\n  DEVICE_VP9_DECODING_SUPPORT = 175,\n  /** AVG_FRIEND_STORY_VIEW_COUNT_L7 - AVG_FRIEND_STORY_VIEW_COUNT_L7 (variant copied from TargetingProperty.Property) */\n  AVG_FRIEND_STORY_VIEW_COUNT_L7 = 176,\n  /** GAME_JOIN_TIME - GAME_JOIN_TIME (variant copied from TargetingProperty.Property) */\n  GAME_JOIN_TIME = 177,\n  /** GAME_LAST_ACTIVE_TIME - GAME_LAST_ACTIVE_TIME (variant copied from TargetingProperty.Property) */\n  GAME_LAST_ACTIVE_TIME = 178,\n  /** DAYS_SINCE_FIRST_GAME_ACTIVITY - DAYS_SINCE_FIRST_GAME_ACTIVITY (variant copied from TargetingProperty.Property) */\n  DAYS_SINCE_FIRST_GAME_ACTIVITY = 179,\n  /** DAYS_SINCE_LAST_GAME_ACTIVITY - DAYS_SINCE_LAST_GAME_ACTIVITY (variant copied from TargetingProperty.Property) */\n  DAYS_SINCE_LAST_GAME_ACTIVITY = 180,\n  /** PF_PAGE_SESSIONS_WITH_LONG_IMP - PF_PAGE_SESSIONS_WITH_LONG_IMP (variant copied from TargetingProperty.Property) */\n  PF_PAGE_SESSIONS_WITH_LONG_IMP = 181,\n  /** WIRELESS_CARRIER - WIRELESS_CARRIER (variant copied from TargetingProperty.Property) */\n  WIRELESS_CARRIER = 182,\n  /** MINIS_JOIN_TIME - MINIS_JOIN_TIME (variant copied from TargetingProperty.Property) */\n  MINIS_JOIN_TIME = 183,\n  /** MINIS_LAST_ACTIVE_TIME - MINIS_LAST_ACTIVE_TIME (variant copied from TargetingProperty.Property) */\n  MINIS_LAST_ACTIVE_TIME = 184,\n  /** DAYS_SINCE_FIRST_MINIS_ACTIVITY - DAYS_SINCE_FIRST_MINIS_ACTIVITY (variant copied from TargetingProperty.Property) */\n  DAYS_SINCE_FIRST_MINIS_ACTIVITY = 185,\n  /** DAYS_SINCE_LAST_MINIS_ACTIVITY - DAYS_SINCE_LAST_MINIS_ACTIVITY (variant copied from TargetingProperty.Property) */\n  DAYS_SINCE_LAST_MINIS_ACTIVITY = 186,\n  /** DEVICE_AV1_DECODING_SUPPORT - DEVICE_AV1_DECODING_SUPPORT (variant copied from TargetingProperty.Property) */\n  DEVICE_AV1_DECODING_SUPPORT = 187,\n  /** APP_PACKAGE_INSTALLER - APP_PACKAGE_INSTALLER (variant copied from TargetingProperty.Property) */\n  APP_PACKAGE_INSTALLER = 188,\n  /** STORY_VIEWS_5TH_TAB_ENGAGEMENT_LEVEL - STORY_VIEWS_5TH_TAB_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */\n  STORY_VIEWS_5TH_TAB_ENGAGEMENT_LEVEL = 189,\n  /** REPORTED_AGE - REPORTED_AGE (variant copied from TargetingProperty.Property) */\n  REPORTED_AGE = 190,\n  /** ANDROID_MOBILE_SERVICES_PROVIDER - ANDROID_MOBILE_SERVICES_PROVIDER (variant copied from TargetingProperty.Property) */\n  ANDROID_MOBILE_SERVICES_PROVIDER = 191,\n  /** IS_ACQUIRED_USER - IS_ACQUIRED_USER (variant copied from TargetingProperty.Property) */\n  IS_ACQUIRED_USER = 192,\n  /** YDPI - YDPI (variant copied from TargetingProperty.Property) */\n  YDPI = 193,\n  /** BIDIRECTIONAL_FRIEND_STATUS_VELLUM - BIDIRECTIONAL_FRIEND_STATUS_VELLUM (variant copied from TargetingProperty.Property) */\n  BIDIRECTIONAL_FRIEND_STATUS_VELLUM = 194,\n  /** ORIGIN - ORIGIN (variant copied from TargetingProperty.Property) */\n  ORIGIN = 195,\n  /** LENSCORE_VERSION - LENSCORE_VERSION (variant copied from TargetingProperty.Property) */\n  LENSCORE_VERSION = 196,\n  /** SNAPKIT_APP_ID - SNAPKIT_APP_ID (variant copied from TargetingProperty.Property) */\n  SNAPKIT_APP_ID = 197,\n  /** GPU - GPU (variant copied from TargetingProperty.Property) */\n  GPU = 198,\n  /** CHIPSET_NAME - CHIPSET_NAME (variant copied from TargetingProperty.Property) */\n  CHIPSET_NAME = 199,\n  /** CHIPSET_VERSION - CHIPSET_VERSION (variant copied from TargetingProperty.Property) */\n  CHIPSET_VERSION = 200,\n  /** HAS_ZERO_IDFA - HAS_ZERO_IDFA (variant copied from TargetingProperty.Property) */\n  HAS_ZERO_IDFA = 201,\n  /** LIMIT_AD_TRACKING - LIMIT_AD_TRACKING (variant copied from TargetingProperty.Property) */\n  LIMIT_AD_TRACKING = 202,\n  /** ATT_AUTH_STATUS - ATT_AUTH_STATUS (variant copied from TargetingProperty.Property) */\n  ATT_AUTH_STATUS = 203,\n  /** CAMERA2_FRONT_SS_GAIN_OVER_TPA - CAMERA2_FRONT_SS_GAIN_OVER_TPA (variant copied from TargetingProperty.Property) */\n  CAMERA2_FRONT_SS_GAIN_OVER_TPA = 204,\n  /** ATTACHMENT_TOOL_V2 - ATTACHMENT_TOOL_V2 (variant copied from TargetingProperty.Property) */\n  ATTACHMENT_TOOL_V2 = 205,\n  /** USER_PERSONA_V3 - USER_PERSONA_V3 (variant copied from TargetingProperty.Property) */\n  USER_PERSONA_V3 = 206,\n  /** SNAPS_SEND_WITH_HEVC - SNAPS_SEND_WITH_HEVC (variant copied from TargetingProperty.Property) */\n  SNAPS_SEND_WITH_HEVC = 207,\n  /** SNAPS_SEND_WITHOUT_HEVC - SNAPS_SEND_WITHOUT_HEVC (variant copied from TargetingProperty.Property) */\n  SNAPS_SEND_WITHOUT_HEVC = 208,\n  /** CAMERA2_NATIVE_CRASH_OVER_CAMERA1 - CAMERA2_NATIVE_CRASH_OVER_CAMERA1 (variant copied from TargetingProperty.Property) */\n  CAMERA2_NATIVE_CRASH_OVER_CAMERA1 = 209,\n  /** CAMERA2_G2S_LATENCY_OVER_CAMERA1 - CAMERA2_G2S_LATENCY_OVER_CAMERA1 (variant copied from TargetingProperty.Property) */\n  CAMERA2_G2S_LATENCY_OVER_CAMERA1 = 210,\n  /** IS_INTERNAL - IS_INTERNAL (variant copied from TargetingProperty.Property) */\n  IS_INTERNAL = 211,\n  /** IS_WEB - IS_WEB (variant copied from TargetingProperty.Property) */\n  IS_WEB = 212,\n  /** APP_OPEN_TO_MAP - APP_OPEN_TO_MAP (variant copied from TargetingProperty.Property) */\n  APP_OPEN_TO_MAP = 213,\n  /** APP_OPEN_TO_FRIENDSFEED - APP_OPEN_TO_FRIENDSFEED (variant copied from TargetingProperty.Property) */\n  APP_OPEN_TO_FRIENDSFEED = 214,\n  /** APP_OPEN_TO_LENSES - APP_OPEN_TO_LENSES (variant copied from TargetingProperty.Property) */\n  APP_OPEN_TO_LENSES = 215,\n  /** APP_OPEN_TO_MEMORIES - APP_OPEN_TO_MEMORIES (variant copied from TargetingProperty.Property) */\n  APP_OPEN_TO_MEMORIES = 216,\n  /** APP_OPEN_TO_COMMUNITY - APP_OPEN_TO_COMMUNITY (variant copied from TargetingProperty.Property) */\n  APP_OPEN_TO_COMMUNITY = 217,\n  /** APP_OPEN_TO_SPOTLIGHT - APP_OPEN_TO_SPOTLIGHT (variant copied from TargetingProperty.Property) */\n  APP_OPEN_TO_SPOTLIGHT = 218,\n  /** IS_IMPACTED_BY_PINC_893 - IS_IMPACTED_BY_PINC_893 (variant copied from TargetingProperty.Property) */\n  IS_IMPACTED_BY_PINC_893 = 219,\n  /** DAYS_BEFORE_BIRTHDAY - DAYS_BEFORE_BIRTHDAY (variant copied from TargetingProperty.Property) */\n  DAYS_BEFORE_BIRTHDAY = 220,\n  /** HAS_BIPA - HAS_BIPA (variant copied from TargetingProperty.Property) */\n  HAS_BIPA = 221,\n  /** SPOTLIGHT_STORY_ENGAGEMENT_STATUS - SPOTLIGHT_STORY_ENGAGEMENT_STATUS (variant copied from TargetingProperty.Property) */\n  SPOTLIGHT_STORY_ENGAGEMENT_STATUS = 222,\n  /** INCLUSION_PANEL_MEMBER - INCLUSION_PANEL_MEMBER (variant copied from TargetingProperty.Property) */\n  INCLUSION_PANEL_MEMBER = 223,\n  /** HEVC_HW_DECODER - HEVC_HW_DECODER (variant copied from TargetingProperty.Property) */\n  HEVC_HW_DECODER = 224,\n  /** HEVC_SW_DECODER - HEVC_SW_DECODER (variant copied from TargetingProperty.Property) */\n  HEVC_SW_DECODER = 225,\n  /**\n   * HASH_MURMUR3_128_MOD_100 - Value of a Murmur3 hash of one of the hash_signals fields modulo 100\n   * PropertyMetadata.signal_to_hash determines which field should be hashed\n   */\n  HASH_MURMUR3_128_MOD_100 = 226,\n  /** HAS_ACTIVE_SNAPCHAT_PLUS - Whether user has active Snapchat+ subscription in Atlas's UserData plus_subscription_info property */\n  HAS_ACTIVE_SNAPCHAT_PLUS = 227,\n  /** SNAP_KIT_OAUTH_ID - OAuth Client ID identifying the source third party application for Snap Kit content */\n  SNAP_KIT_OAUTH_ID = 228,\n  /** ORGANIZATION_TYPE - Organization type of advertiser purchasing ads */\n  ORGANIZATION_TYPE = 229,\n  /**\n   * CHUNK_UPLOAD_SUPPORT_REQUIRED - Client provided boolean that represent whether the config\n   * needs to support uploading in a chunked/streaming manner\n   */\n  CHUNK_UPLOAD_SUPPORT_REQUIRED = 230,\n  /** CLOUDFRONT_POP - The last known CloudFront Point of Presence used */\n  CLOUDFRONT_POP = 231,\n  /** BILLBOARD_CAMPAIGN_LOCAL_FIRST_IMPRESSION_TIME_SECS_TO_NOW - Billboard locally tracked first impresstion time to now */\n  BILLBOARD_CAMPAIGN_LOCAL_FIRST_IMPRESSION_TIME_SECS_TO_NOW = 232,\n  /** BILLBOARD_CAMPAIGN_LOCAL_CLICK_COUNT - Billboard locally tracked click count */\n  BILLBOARD_CAMPAIGN_LOCAL_CLICK_COUNT = 233,\n  /** BILLBOARD_CAMPAIGN_LOCAL_INTERACTION_COUNT - Billboard locally tracked interaction count */\n  BILLBOARD_CAMPAIGN_LOCAL_INTERACTION_COUNT = 234,\n  /** BILLBOARD_CAMPAIGN_LOCAL_LAST_INTERACTION_TIME_SECS_TO_NOW - Billboard locally tracked last interaction time to now */\n  BILLBOARD_CAMPAIGN_LOCAL_LAST_INTERACTION_TIME_SECS_TO_NOW = 235,\n  /** FST_LOCK_SCREEN_WIDGET_BILLBOARD_LAUNCHED_FROM_PUSH - Lock screen widgets billboard - app open via push notification */\n  FST_LOCK_SCREEN_WIDGET_BILLBOARD_LAUNCHED_FROM_PUSH = 236,\n  /** WEB_SCREEN_WIDTH - Web browser screen width in CSS pixels */\n  WEB_SCREEN_WIDTH = 237,\n  /** WEB_SCREEN_HEIGHT - Web browser screen height in CSS pixels */\n  WEB_SCREEN_HEIGHT = 238,\n  /** SUP_IOS_LOCK_SCREEN_WIDGET_ENABLED - iOS 16 lock screen widgets enabled */\n  SUP_IOS_LOCK_SCREEN_WIDGET_ENABLED = 239,\n  /** SNAP_PRIVACY - Atlas enum property that indicates a user's snap privacy settings (Friends vs. Everyone) */\n  SNAP_PRIVACY = 240,\n  /** ADS_INTERFACES_IS_NEW_ORGANIZATION - Is a new organization in ads interfaces UI */\n  ADS_INTERFACES_IS_NEW_ORGANIZATION = 241,\n  /** SERVER_ONLY - if true only server callers can get the config */\n  SERVER_ONLY = 242,\n  /** GHE_ORGANIZATION - The Github Enterprise organization */\n  GHE_ORGANIZATION = 243,\n  /** GHE_REPOSITORY - The Github Enterprise Repository, which is contained by a GHE organization */\n  GHE_REPOSITORY = 244,\n  /** GHE_USER_EMAIL - In the context of Machamp, the user identifier (email) */\n  GHE_USER_EMAIL = 245,\n  /** BUILD_DEFINITION_ID - In the context of Machamp, the build definition identifier is a UUID hash of the GHE organization and and repository. */\n  BUILD_DEFINITION_ID = 246,\n  /** BUILD_DEFINITION_NAME - In the context of Machamp, the build definition name is name of the build from the build.yaml */\n  BUILD_DEFINITION_NAME = 247,\n  /** LCA_PRINCIPAL - LCA Principal of the service calling Circumstance Engine */\n  LCA_PRINCIPAL = 248,\n  /**\n   * MEDIA_PERFORMANCE_CLASS - A performance class defines a set of device capabilities by Android\n   * e.g. 30, 31, See https://android-developers.googleblog.com/2022/03/using-performance-class-to-optimize.html\n   */\n  MEDIA_PERFORMANCE_CLASS = 249,\n  /** COMMUNITY_COUNT - Number of Communities user is in */\n  COMMUNITY_COUNT = 250,\n  /** RECIPIENTS_SUPPORT_FMP4 - A boolean indicating whether a group of recipients support fMP4 playback */\n  RECIPIENTS_SUPPORT_FMP4 = 251,\n  /** SCREEN_ASPECT_RATIO - The screen aspect ratio. It's the result of SCREEN_WIDTH / SCREEN_HEIGHT */\n  SCREEN_ASPECT_RATIO = 252,\n  /**\n   * USER_GROUP - USER GROUP. This property is not expected to ever be supported on any\n   * of the clients, but is rather needed to signal to the client that a given\n   * config depends on an unsupported property, so that the client can emit a metric\n   */\n  USER_GROUP = 253,\n  /**\n   * USER_HAS_DENIED_CAMERA_PERM - A boolean value indicating whether the user has denied camera permission. And the property\n   * value would remain TRUE for users who have ever denied camera permission since first time\n   * of reading the property value\n   * New users are by default denied camera permission.\n   *\n   * @deprecated\n   */\n  USER_HAS_DENIED_CAMERA_PERM = 254,\n  /**\n   * CAMEOS_ENGAGEMENT_LEVEL - Cameos engagement level based on number of Cameos views in the last 7 days.\n   * e.g. IDLE, CASUAL, REGULAR, POWER\n   */\n  CAMEOS_ENGAGEMENT_LEVEL = 255,\n  /**\n   * HAS_CAMEOS - Whether the user has Cameos.\n   * e.g. TRUE, FALSE\n   */\n  HAS_CAMEOS = 256,\n  /**\n   * IS_ACTIVE_LENS_VIDEO_CHAT_USER - Whether the user has interacted with lenses in video chat in the last 7 days.\n   * e.g. TRUE, FALSE\n   */\n  IS_ACTIVE_LENS_VIDEO_CHAT_USER = 257,\n  /**\n   * NUM_SPOTLIGHT_POSTS_L7 - The number of Spotlight posts a user has made in the last 7 days.\n   * e.g. 0, 100, 1000\n   */\n  NUM_SPOTLIGHT_POSTS_L7 = 258,\n  /**\n   * NUM_MAP_POSTS_L7 - The number of Map posts a user has made in the last 7 days.\n   * e.g. 0, 100, 1000\n   */\n  NUM_MAP_POSTS_L7 = 259,\n  /**\n   * HAS_CREATED_PUBLIC_PROFILE - Whether a user has created a public profile.\n   * e.g. TRUE, FALSE\n   */\n  HAS_CREATED_PUBLIC_PROFILE = 260,\n  /**\n   * HAS_PUBLIC_PROFILE_ACCESS_VIA_ROLE - Whether a user has access to a public profile via a role.\n   * e.g. TRUE, FALSE\n   */\n  HAS_PUBLIC_PROFILE_ACCESS_VIA_ROLE = 261,\n  /**\n   * DAYS_SINCE_LAST_CAMERA_PERM_DENY - Integer value represents the number of days since last time the user denied camera permission.\n   * Default value is -1 if user has no record of denying camera permission (the user has granted camera permission permanently).\n   */\n  DAYS_SINCE_LAST_CAMERA_PERM_DENY = 262,\n  /** DAYS_SINCE_AD_ORG_JOIN - The days since the user last joined an ads manager organization */\n  DAYS_SINCE_AD_ORG_JOIN = 263,\n  /** DAYS_SINCE_FIRST_AD_CREATE - The days since the user created an ad within ads manager via their ad organization */\n  DAYS_SINCE_FIRST_AD_CREATE = 264,\n  /** ORGANIZATION_COUNTRY - Organization country */\n  ORGANIZATION_COUNTRY = 265,\n  /** DAYS_SINCE_FIRST_DWEB_VISIT - The days since the user first visited dWeb (Web Chat) */\n  DAYS_SINCE_FIRST_DWEB_VISIT = 266,\n  /** DAYS_SINCE_LAST_DWEB_VISIT - The days since the user has last visited dWeb (Web Chat) */\n  DAYS_SINCE_LAST_DWEB_VISIT = 267,\n  /** WEEKS_SINCE_USING_DWEB - The weeks group in which the user has been absent from dWeb (Web Chat) */\n  WEEKS_SINCE_USING_DWEB = 268,\n  /** HAS_LENS - Whether a capture session has lens */\n  HAS_LENS = 269,\n  /**\n   * BILLBOARD_SERVER_IMPRESSION_COUNT - Billboard Cooldown and Cap Unit will support these properties\n   * Basic Counter for impression / click / dismiss\n   */\n  BILLBOARD_SERVER_IMPRESSION_COUNT = 270,\n  BILLBOARD_SERVER_CLICK_COUNT = 271,\n  BILLBOARD_SERVER_DISMISS_COUNT = 272,\n  BILLBOARD_SERVER_INTERACTION_COUNT = 273,\n  /** BILLBOARD_SERVER_FIRST_IMPRESSION_TIME_SECS_TO_NOW - Time to now signals in Seconds */\n  BILLBOARD_SERVER_FIRST_IMPRESSION_TIME_SECS_TO_NOW = 274,\n  BILLBOARD_SERVER_LAST_IMPRESSION_TIME_SECS_TO_NOW = 275,\n  BILLBOARD_SERVER_FIRST_CLICK_TIME_SECS_TO_NOW = 276,\n  BILLBOARD_SERVER_LAST_CLICK_TIME_SECS_TO_NOW = 277,\n  BILLBOARD_SERVER_FIRST_DISMISS_TIME_SECS_TO_NOW = 278,\n  BILLBOARD_SERVER_LAST_DISMISS_TIME_SECS_TO_NOW = 279,\n  BILLBOARD_SERVER_FIRST_INTERACTION_TIME_SECS_TO_NOW = 280,\n  BILLBOARD_SERVER_LAST_INTERACTION_TIME_SECS_TO_NOW = 281,\n  /** BILLBOARD_SERVER_CONTINUOUS_DISMISS_COUNT - Continuous Counter */\n  BILLBOARD_SERVER_CONTINUOUS_DISMISS_COUNT = 282,\n  /** BILLBOARD_CAMPAIGN_LOCAL_FIRST_CLICK_TIME_SECS_TO_NOW - Billboard first click time to now */\n  BILLBOARD_CAMPAIGN_LOCAL_FIRST_CLICK_TIME_SECS_TO_NOW = 283,\n  /** BILLBOARD_CAMPAIGN_LOCAL_LAST_CLICK_TIME_SECS_TO_NOW - Billboard last click time to now */\n  BILLBOARD_CAMPAIGN_LOCAL_LAST_CLICK_TIME_SECS_TO_NOW = 284,\n  /** BILLBOARD_CAMPAIGN_LOCAL_FIRST_DISMISS_TIME_SECS_TO_NOW - Billboard first dismiss time to now */\n  BILLBOARD_CAMPAIGN_LOCAL_FIRST_DISMISS_TIME_SECS_TO_NOW = 285,\n  /** BILLBOARD_CAMPAIGN_LOCAL_LAST_DISMISS_TIME_SECS_TO_NOW - Billboard last dismiss time to now */\n  BILLBOARD_CAMPAIGN_LOCAL_LAST_DISMISS_TIME_SECS_TO_NOW = 286,\n  /** BILLBOARD_CAMPAIGN_LOCAL_FIRST_INTERACTION_TIME_SECS_TO_NOW - Billboard locally tracked first interaction time to now */\n  BILLBOARD_CAMPAIGN_LOCAL_FIRST_INTERACTION_TIME_SECS_TO_NOW = 287,\n  UNRECOGNIZED = -1,\n}\n\nexport interface ClientTargetingExpression_PropertyMetadata {\n  /** Sup property's item id */\n  itemId: number;\n  /** Which field of feature_provided_signals.hash_signals to hash */\n  signalToHash: ClientTargetingExpression_PropertyMetadata_SignalToHash;\n  /**\n   * Namespace string, supplied by the AB service to included\n   * in HASH_MURMUR3_128_MOD_100 evaluation\n   */\n  abNamespaceForHashing: string;\n  /**\n   * Seed string, supplied by the AB service to included\n   * in HASH_MURMUR3_128_MOD_100 evaluation\n   */\n  abSeedForHashing: string;\n}\n\n/**\n * Which field of feature_provided_signals.hash_signals to hash\n * To be used by the HASH_MURMUR3_128_MOD_100 property only\n */\nexport enum ClientTargetingExpression_PropertyMetadata_SignalToHash {\n  /** UNKNOWN_SIGNAL_TO_HASH - Unset variant */\n  UNKNOWN_SIGNAL_TO_HASH = 0,\n  /**\n   * HASH_SEED_AND_USER_ID - Indicates that seed+user_id string should be hashed\n   * (namespace is supplied by the server, user_id - by the client)\n   */\n  HASH_SEED_AND_USER_ID = 1,\n  /**\n   * HASH_USER_ID_AND_NAMESPACE - Indicates that used_id+namespace string should be hashed\n   * (seed is supplied by the server, user_id - by the client)\n   */\n  HASH_USER_ID_AND_NAMESPACE = 2,\n  UNRECOGNIZED = -1,\n}\n\nfunction createBaseConfigResult(): ConfigResult {\n  return {\n    configId: \"\",\n    value: undefined,\n    targetingExpression: undefined,\n    ttlSeconds: 0,\n    configRuleUuidBytes: new Uint8Array(),\n    priority: 0,\n    namespace: 0,\n    studyName: \"\",\n    experimentId: 0,\n    delete: false,\n    servePlatforms: [],\n    sequenceId: 0,\n    ruidType: 0,\n    segmentOrdinal: 0,\n    generatedFromAbAllowlists: false,\n  };\n}\n\nexport const ConfigResult = {\n  encode(message: ConfigResult, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.configId !== \"\") {\n      writer.uint32(10).string(message.configId);\n    }\n    if (message.value !== undefined) {\n      Value.encode(message.value, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.targetingExpression !== undefined) {\n      ClientTargetingExpression.encode(message.targetingExpression, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.ttlSeconds !== 0) {\n      writer.uint32(32).int64(message.ttlSeconds);\n    }\n    if (message.configRuleUuidBytes.length !== 0) {\n      writer.uint32(42).bytes(message.configRuleUuidBytes);\n    }\n    if (message.priority !== 0) {\n      writer.uint32(48).int32(message.priority);\n    }\n    if (message.namespace !== 0) {\n      writer.uint32(56).int32(message.namespace);\n    }\n    if (message.studyName !== \"\") {\n      writer.uint32(66).string(message.studyName);\n    }\n    if (message.experimentId !== 0) {\n      writer.uint32(72).int32(message.experimentId);\n    }\n    if (message.delete === true) {\n      writer.uint32(80).bool(message.delete);\n    }\n    writer.uint32(90).fork();\n    for (const v of message.servePlatforms) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    if (message.sequenceId !== 0) {\n      writer.uint32(96).int32(message.sequenceId);\n    }\n    if (message.ruidType !== 0) {\n      writer.uint32(104).int32(message.ruidType);\n    }\n    if (message.segmentOrdinal !== 0) {\n      writer.uint32(112).int32(message.segmentOrdinal);\n    }\n    if (message.generatedFromAbAllowlists === true) {\n      writer.uint32(120).bool(message.generatedFromAbAllowlists);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResult {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseConfigResult();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.configId = reader.string();\n          break;\n        case 2:\n          message.value = Value.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.targetingExpression = ClientTargetingExpression.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.ttlSeconds = longToNumber(reader.int64() as Long);\n          break;\n        case 5:\n          message.configRuleUuidBytes = reader.bytes();\n          break;\n        case 6:\n          message.priority = reader.int32();\n          break;\n        case 7:\n          message.namespace = reader.int32() as any;\n          break;\n        case 8:\n          message.studyName = reader.string();\n          break;\n        case 9:\n          message.experimentId = reader.int32();\n          break;\n        case 10:\n          message.delete = reader.bool();\n          break;\n        case 11:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.servePlatforms.push(reader.int32() as any);\n            }\n          } else {\n            message.servePlatforms.push(reader.int32() as any);\n          }\n          break;\n        case 12:\n          message.sequenceId = reader.int32();\n          break;\n        case 13:\n          message.ruidType = reader.int32() as any;\n          break;\n        case 14:\n          message.segmentOrdinal = reader.int32();\n          break;\n        case 15:\n          message.generatedFromAbAllowlists = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ConfigResult>, I>>(object: I): ConfigResult {\n    const message = createBaseConfigResult();\n    message.configId = object.configId ?? \"\";\n    message.value = object.value !== undefined && object.value !== null ? Value.fromPartial(object.value) : undefined;\n    message.targetingExpression =\n      object.targetingExpression !== undefined && object.targetingExpression !== null\n        ? ClientTargetingExpression.fromPartial(object.targetingExpression)\n        : undefined;\n    message.ttlSeconds = object.ttlSeconds ?? 0;\n    message.configRuleUuidBytes = object.configRuleUuidBytes ?? new Uint8Array();\n    message.priority = object.priority ?? 0;\n    message.namespace = object.namespace ?? 0;\n    message.studyName = object.studyName ?? \"\";\n    message.experimentId = object.experimentId ?? 0;\n    message.delete = object.delete ?? false;\n    message.servePlatforms = object.servePlatforms?.map((e) => e) || [];\n    message.sequenceId = object.sequenceId ?? 0;\n    message.ruidType = object.ruidType ?? 0;\n    message.segmentOrdinal = object.segmentOrdinal ?? 0;\n    message.generatedFromAbAllowlists = object.generatedFromAbAllowlists ?? false;\n    return message;\n  },\n};\n\nfunction createBaseConfigResultBundle(): ConfigResultBundle {\n  return { etag: \"\", configResults: [] };\n}\n\nexport const ConfigResultBundle = {\n  encode(message: ConfigResultBundle, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.etag !== \"\") {\n      writer.uint32(10).string(message.etag);\n    }\n    for (const v of message.configResults) {\n      ConfigResult.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResultBundle {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseConfigResultBundle();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.etag = reader.string();\n          break;\n        case 2:\n          message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ConfigResultBundle>, I>>(object: I): ConfigResultBundle {\n    const message = createBaseConfigResultBundle();\n    message.etag = object.etag ?? \"\";\n    message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseClientTargetingExpression(): ClientTargetingExpression {\n  return {\n    operator: 0,\n    children: [],\n    property: 0,\n    predicateOperator: 0,\n    value: undefined,\n    propertyMetadata: undefined,\n  };\n}\n\nexport const ClientTargetingExpression = {\n  encode(message: ClientTargetingExpression, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.operator !== 0) {\n      writer.uint32(8).int32(message.operator);\n    }\n    for (const v of message.children) {\n      ClientTargetingExpression.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.property !== 0) {\n      writer.uint32(24).int32(message.property);\n    }\n    if (message.predicateOperator !== 0) {\n      writer.uint32(32).int32(message.predicateOperator);\n    }\n    if (message.value !== undefined) {\n      Value.encode(message.value, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.propertyMetadata !== undefined) {\n      ClientTargetingExpression_PropertyMetadata.encode(message.propertyMetadata, writer.uint32(50).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ClientTargetingExpression {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseClientTargetingExpression();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.operator = reader.int32() as any;\n          break;\n        case 2:\n          message.children.push(ClientTargetingExpression.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.property = reader.int32() as any;\n          break;\n        case 4:\n          message.predicateOperator = reader.int32() as any;\n          break;\n        case 5:\n          message.value = Value.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.propertyMetadata = ClientTargetingExpression_PropertyMetadata.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ClientTargetingExpression>, I>>(object: I): ClientTargetingExpression {\n    const message = createBaseClientTargetingExpression();\n    message.operator = object.operator ?? 0;\n    message.children = object.children?.map((e) => ClientTargetingExpression.fromPartial(e)) || [];\n    message.property = object.property ?? 0;\n    message.predicateOperator = object.predicateOperator ?? 0;\n    message.value = object.value !== undefined && object.value !== null ? Value.fromPartial(object.value) : undefined;\n    message.propertyMetadata =\n      object.propertyMetadata !== undefined && object.propertyMetadata !== null\n        ? ClientTargetingExpression_PropertyMetadata.fromPartial(object.propertyMetadata)\n        : undefined;\n    return message;\n  },\n};\n\nfunction createBaseClientTargetingExpression_PropertyMetadata(): ClientTargetingExpression_PropertyMetadata {\n  return { itemId: 0, signalToHash: 0, abNamespaceForHashing: \"\", abSeedForHashing: \"\" };\n}\n\nexport const ClientTargetingExpression_PropertyMetadata = {\n  encode(message: ClientTargetingExpression_PropertyMetadata, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.itemId !== 0) {\n      writer.uint32(8).int32(message.itemId);\n    }\n    if (message.signalToHash !== 0) {\n      writer.uint32(16).int32(message.signalToHash);\n    }\n    if (message.abNamespaceForHashing !== \"\") {\n      writer.uint32(26).string(message.abNamespaceForHashing);\n    }\n    if (message.abSeedForHashing !== \"\") {\n      writer.uint32(34).string(message.abSeedForHashing);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ClientTargetingExpression_PropertyMetadata {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseClientTargetingExpression_PropertyMetadata();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.itemId = reader.int32();\n          break;\n        case 2:\n          message.signalToHash = reader.int32() as any;\n          break;\n        case 3:\n          message.abNamespaceForHashing = reader.string();\n          break;\n        case 4:\n          message.abSeedForHashing = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ClientTargetingExpression_PropertyMetadata>, I>>(\n    object: I\n  ): ClientTargetingExpression_PropertyMetadata {\n    const message = createBaseClientTargetingExpression_PropertyMetadata();\n    message.itemId = object.itemId ?? 0;\n    message.signalToHash = object.signalToHash ?? 0;\n    message.abNamespaceForHashing = object.abNamespaceForHashing ?? \"\";\n    message.abSeedForHashing = object.abSeedForHashing ?? \"\";\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n"]}