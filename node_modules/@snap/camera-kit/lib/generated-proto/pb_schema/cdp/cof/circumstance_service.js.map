{"version":3,"file":"circumstance_service.js","sourceRoot":"","sources":["../../../../../src/generated-proto/pb_schema/cdp/cof/circumstance_service.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport Long from \"long\";\nimport { grpc } from \"@improbable-eng/grpc-web\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Namespace } from \"./namespace\";\nimport { ConfigTargetingRequest } from \"./config_request\";\nimport { ConfigTargetingResponse } from \"./config_response\";\nimport { BrowserHeaders } from \"browser-headers\";\nimport { ConfigResult } from \"./config_result\";\nimport { DebugTrace } from \"./debug_info\";\n\nexport const protobufPackage = \"snapchat.cdp.cof\";\n\nexport interface GetAbConfigValuesRequest {\n  /** A list of config names to request values. These configs are legacy AB studies. */\n  configNames: string[];\n  /**\n   * If not empty only return the matched configs in these namespaces.\n   * If empty return all matched configs.\n   * Use `AB_STUDY_VERSION` if you are accessing legacy A/B studies.\n   */\n  namespaces: Namespace[];\n  /** A list of cof config names to request values. These configs are updated by AB segment studies. */\n  cofConfigNames: string[];\n  /** whether to include all configs in namespaces, config name should be empty if this is true */\n  includeAllConfigs: boolean;\n  /** whether to log exposure logging, default is to log exposure */\n  disableExposureLogging: boolean;\n  /** Include debugging information if set */\n  enableDebug: boolean;\n}\n\nexport interface GetAbConfigValuesResponse {\n  /** A list of configs with value. */\n  configResults: ConfigResult[];\n  debugTrace: DebugTrace | undefined;\n}\n\nexport interface ConfigSetGenerationRequest {\n  targetingParameters: ConfigTargetingRequest | undefined;\n  overrides: ConfigResult[];\n}\n\nexport interface ConfigSetGenerationResponse {\n  targetingResponse: ConfigTargetingResponse | undefined;\n}\n\nexport interface PinConfigRequest {\n  /** this token is also referred to as etag in some places but etag is overloaded so we should rename other places */\n  configSetToken: string;\n  userId: string;\n  ttlSeconds: number;\n}\n\nexport interface PinConfigResponse {\n  /** Use for passing any debug information back to callers. This is useful in end-to-end validation */\n  debug: string;\n}\n\nexport interface UnpinConfigRequest {\n  /** this token is also referred to as etag in some places but etag is overloaded so we should rename other places */\n  configSetToken: string;\n  userId: string;\n}\n\nexport interface UnpinConfigResponse {\n  /** Use for passing any debug information back to callers. This is useful in end-to-end validation */\n  debug: string;\n}\n\nexport interface ConfigWithNamespace {\n  /** The name of a config. */\n  configName: string;\n  /** The namespace of this config. */\n  namespace: Namespace;\n}\n\nexport interface GetConfigValuesByTokenRequest {\n  /** COF token to represent configs served to a user. */\n  token: string;\n  /** A list of configs to request values. */\n  configNames: ConfigWithNamespace[];\n  /**\n   * Request all configs in a set of namespaces. Either config_names or namespaces can be set. They can't be set\n   * together in a single request.\n   */\n  namespaces: Namespace[];\n  /** whether to log exposure logging, default is to log exposure */\n  disableExposureLogging: boolean;\n  /** Whether to get all configs for this request. */\n  getAllConfigs: boolean;\n}\n\nexport interface GetConfigValuesByTokenResponse {\n  /** A list of configs with value. */\n  configResults: ConfigResult[];\n}\n\nexport interface GetCachedConfigResultSequenceIdsRequest {}\n\nexport interface GetCachedConfigResultSequenceIdsResponse {\n  /** The Byte Array of a serialized RoaringBitmap object, which represents a set of integer ids. */\n  serializedBitmap: Uint8Array;\n}\n\nexport interface GetConfigResultsBySequenceIdsRequest {\n  sequenceIds: number[];\n}\n\nexport interface ConfigResultWithSequenceId {\n  /** config result sequence id */\n  sequenceId: number;\n  /** Config result. */\n  configResult: ConfigResult | undefined;\n}\n\nexport interface GetConfigResultsBySequenceIdsResponse {\n  configResultWithSequenceIds: ConfigResultWithSequenceId[];\n}\n\nexport interface GetBitmapByTokenRequest {\n  /** COF token to request config ids represented as a bitmap. */\n  token: string;\n}\n\nexport interface GetBitmapByTokenResponse {\n  /** The Byte Array of a serialized RoaringBitmap object, which represents a set of integer ids. */\n  idBitmap: Uint8Array;\n}\n\nexport interface GetConfigValuesRegionalRequest {\n  /**\n   * COF token to represent configs served with this token.\n   * If a token is set, we will use configs represented by this token.\n   */\n  token: string;\n  /** If a token is not set, we will use the latest cached configs served to this user id. */\n  userId: string;\n  /**\n   * The TTL for the cached configs served to a user. This cache is updated for every client COF sync request.\n   * For inactive users, the latest client sync may happen before this ttl. In this case, we will do targeting to\n   * get fresh configs for this user. If this value is not set, the ttl is 6 hours by default. We prefer callers not\n   * to set this value less than 1 hour.\n   */\n  userCacheTtlInSeconds: number;\n  /** User agent provides device and app information for targeting. */\n  userAgent: string;\n  /** Client ip is used for server to pass client ip. */\n  clientIp: string;\n  /** Device locale is used for server to pass client device locale. */\n  deviceLocale: string;\n  /** A list of configs to request values. */\n  configNames: ConfigWithNamespace[];\n  /**\n   * Request all configs in a set of namespaces. Either config_names or namespaces can be set. They can't be set\n   * together in a single request.\n   */\n  namespaces: Namespace[];\n  /** whether to log exposure logging, default is to log exposure */\n  disableExposureLogging: boolean;\n}\n\nexport interface GetConfigValuesRegionalResponse {\n  /** A list of configs with value. */\n  configResults: ConfigResult[];\n}\n\nexport interface GetUnevaluatedConfigResultsWithAbTargetingRequest {\n  /** Which namespaces have to be included in the response */\n  namespaces: Namespace[];\n  /** Which version of the edge config client is making this request */\n  edgeConfigClientVersion: string;\n}\n\nexport interface GetUnevaluatedConfigResultsWithAbTargetingResponse {\n  configResults: ConfigResult[];\n}\n\nfunction createBaseGetAbConfigValuesRequest(): GetAbConfigValuesRequest {\n  return {\n    configNames: [],\n    namespaces: [],\n    cofConfigNames: [],\n    includeAllConfigs: false,\n    disableExposureLogging: false,\n    enableDebug: false,\n  };\n}\n\nexport const GetAbConfigValuesRequest = {\n  encode(message: GetAbConfigValuesRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.configNames) {\n      writer.uint32(10).string(v!);\n    }\n    writer.uint32(18).fork();\n    for (const v of message.namespaces) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    for (const v of message.cofConfigNames) {\n      writer.uint32(26).string(v!);\n    }\n    if (message.includeAllConfigs === true) {\n      writer.uint32(32).bool(message.includeAllConfigs);\n    }\n    if (message.disableExposureLogging === true) {\n      writer.uint32(40).bool(message.disableExposureLogging);\n    }\n    if (message.enableDebug === true) {\n      writer.uint32(104).bool(message.enableDebug);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GetAbConfigValuesRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetAbConfigValuesRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.configNames.push(reader.string());\n          break;\n        case 2:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.namespaces.push(reader.int32() as any);\n            }\n          } else {\n            message.namespaces.push(reader.int32() as any);\n          }\n          break;\n        case 3:\n          message.cofConfigNames.push(reader.string());\n          break;\n        case 4:\n          message.includeAllConfigs = reader.bool();\n          break;\n        case 5:\n          message.disableExposureLogging = reader.bool();\n          break;\n        case 13:\n          message.enableDebug = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetAbConfigValuesRequest>, I>>(object: I): GetAbConfigValuesRequest {\n    const message = createBaseGetAbConfigValuesRequest();\n    message.configNames = object.configNames?.map((e) => e) || [];\n    message.namespaces = object.namespaces?.map((e) => e) || [];\n    message.cofConfigNames = object.cofConfigNames?.map((e) => e) || [];\n    message.includeAllConfigs = object.includeAllConfigs ?? false;\n    message.disableExposureLogging = object.disableExposureLogging ?? false;\n    message.enableDebug = object.enableDebug ?? false;\n    return message;\n  },\n};\n\nfunction createBaseGetAbConfigValuesResponse(): GetAbConfigValuesResponse {\n  return { configResults: [], debugTrace: undefined };\n}\n\nexport const GetAbConfigValuesResponse = {\n  encode(message: GetAbConfigValuesResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.configResults) {\n      ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.debugTrace !== undefined) {\n      DebugTrace.encode(message.debugTrace, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GetAbConfigValuesResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetAbConfigValuesResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.debugTrace = DebugTrace.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetAbConfigValuesResponse>, I>>(object: I): GetAbConfigValuesResponse {\n    const message = createBaseGetAbConfigValuesResponse();\n    message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n    message.debugTrace =\n      object.debugTrace !== undefined && object.debugTrace !== null\n        ? DebugTrace.fromPartial(object.debugTrace)\n        : undefined;\n    return message;\n  },\n};\n\nfunction createBaseConfigSetGenerationRequest(): ConfigSetGenerationRequest {\n  return { targetingParameters: undefined, overrides: [] };\n}\n\nexport const ConfigSetGenerationRequest = {\n  encode(message: ConfigSetGenerationRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.targetingParameters !== undefined) {\n      ConfigTargetingRequest.encode(message.targetingParameters, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.overrides) {\n      ConfigResult.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ConfigSetGenerationRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseConfigSetGenerationRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.targetingParameters = ConfigTargetingRequest.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.overrides.push(ConfigResult.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ConfigSetGenerationRequest>, I>>(object: I): ConfigSetGenerationRequest {\n    const message = createBaseConfigSetGenerationRequest();\n    message.targetingParameters =\n      object.targetingParameters !== undefined && object.targetingParameters !== null\n        ? ConfigTargetingRequest.fromPartial(object.targetingParameters)\n        : undefined;\n    message.overrides = object.overrides?.map((e) => ConfigResult.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseConfigSetGenerationResponse(): ConfigSetGenerationResponse {\n  return { targetingResponse: undefined };\n}\n\nexport const ConfigSetGenerationResponse = {\n  encode(message: ConfigSetGenerationResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.targetingResponse !== undefined) {\n      ConfigTargetingResponse.encode(message.targetingResponse, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ConfigSetGenerationResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseConfigSetGenerationResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.targetingResponse = ConfigTargetingResponse.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ConfigSetGenerationResponse>, I>>(object: I): ConfigSetGenerationResponse {\n    const message = createBaseConfigSetGenerationResponse();\n    message.targetingResponse =\n      object.targetingResponse !== undefined && object.targetingResponse !== null\n        ? ConfigTargetingResponse.fromPartial(object.targetingResponse)\n        : undefined;\n    return message;\n  },\n};\n\nfunction createBasePinConfigRequest(): PinConfigRequest {\n  return { configSetToken: \"\", userId: \"\", ttlSeconds: 0 };\n}\n\nexport const PinConfigRequest = {\n  encode(message: PinConfigRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.configSetToken !== \"\") {\n      writer.uint32(10).string(message.configSetToken);\n    }\n    if (message.userId !== \"\") {\n      writer.uint32(18).string(message.userId);\n    }\n    if (message.ttlSeconds !== 0) {\n      writer.uint32(24).int32(message.ttlSeconds);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PinConfigRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePinConfigRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.configSetToken = reader.string();\n          break;\n        case 2:\n          message.userId = reader.string();\n          break;\n        case 3:\n          message.ttlSeconds = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<PinConfigRequest>, I>>(object: I): PinConfigRequest {\n    const message = createBasePinConfigRequest();\n    message.configSetToken = object.configSetToken ?? \"\";\n    message.userId = object.userId ?? \"\";\n    message.ttlSeconds = object.ttlSeconds ?? 0;\n    return message;\n  },\n};\n\nfunction createBasePinConfigResponse(): PinConfigResponse {\n  return { debug: \"\" };\n}\n\nexport const PinConfigResponse = {\n  encode(message: PinConfigResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.debug !== \"\") {\n      writer.uint32(10).string(message.debug);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PinConfigResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePinConfigResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.debug = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<PinConfigResponse>, I>>(object: I): PinConfigResponse {\n    const message = createBasePinConfigResponse();\n    message.debug = object.debug ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseUnpinConfigRequest(): UnpinConfigRequest {\n  return { configSetToken: \"\", userId: \"\" };\n}\n\nexport const UnpinConfigRequest = {\n  encode(message: UnpinConfigRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.configSetToken !== \"\") {\n      writer.uint32(10).string(message.configSetToken);\n    }\n    if (message.userId !== \"\") {\n      writer.uint32(18).string(message.userId);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): UnpinConfigRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUnpinConfigRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.configSetToken = reader.string();\n          break;\n        case 2:\n          message.userId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<UnpinConfigRequest>, I>>(object: I): UnpinConfigRequest {\n    const message = createBaseUnpinConfigRequest();\n    message.configSetToken = object.configSetToken ?? \"\";\n    message.userId = object.userId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseUnpinConfigResponse(): UnpinConfigResponse {\n  return { debug: \"\" };\n}\n\nexport const UnpinConfigResponse = {\n  encode(message: UnpinConfigResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.debug !== \"\") {\n      writer.uint32(10).string(message.debug);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): UnpinConfigResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUnpinConfigResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.debug = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<UnpinConfigResponse>, I>>(object: I): UnpinConfigResponse {\n    const message = createBaseUnpinConfigResponse();\n    message.debug = object.debug ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseConfigWithNamespace(): ConfigWithNamespace {\n  return { configName: \"\", namespace: 0 };\n}\n\nexport const ConfigWithNamespace = {\n  encode(message: ConfigWithNamespace, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.configName !== \"\") {\n      writer.uint32(10).string(message.configName);\n    }\n    if (message.namespace !== 0) {\n      writer.uint32(16).int32(message.namespace);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ConfigWithNamespace {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseConfigWithNamespace();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.configName = reader.string();\n          break;\n        case 2:\n          message.namespace = reader.int32() as any;\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ConfigWithNamespace>, I>>(object: I): ConfigWithNamespace {\n    const message = createBaseConfigWithNamespace();\n    message.configName = object.configName ?? \"\";\n    message.namespace = object.namespace ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseGetConfigValuesByTokenRequest(): GetConfigValuesByTokenRequest {\n  return { token: \"\", configNames: [], namespaces: [], disableExposureLogging: false, getAllConfigs: false };\n}\n\nexport const GetConfigValuesByTokenRequest = {\n  encode(message: GetConfigValuesByTokenRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.token !== \"\") {\n      writer.uint32(10).string(message.token);\n    }\n    for (const v of message.configNames) {\n      ConfigWithNamespace.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    writer.uint32(26).fork();\n    for (const v of message.namespaces) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    if (message.disableExposureLogging === true) {\n      writer.uint32(32).bool(message.disableExposureLogging);\n    }\n    if (message.getAllConfigs === true) {\n      writer.uint32(40).bool(message.getAllConfigs);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigValuesByTokenRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetConfigValuesByTokenRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.token = reader.string();\n          break;\n        case 2:\n          message.configNames.push(ConfigWithNamespace.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.namespaces.push(reader.int32() as any);\n            }\n          } else {\n            message.namespaces.push(reader.int32() as any);\n          }\n          break;\n        case 4:\n          message.disableExposureLogging = reader.bool();\n          break;\n        case 5:\n          message.getAllConfigs = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetConfigValuesByTokenRequest>, I>>(\n    object: I\n  ): GetConfigValuesByTokenRequest {\n    const message = createBaseGetConfigValuesByTokenRequest();\n    message.token = object.token ?? \"\";\n    message.configNames = object.configNames?.map((e) => ConfigWithNamespace.fromPartial(e)) || [];\n    message.namespaces = object.namespaces?.map((e) => e) || [];\n    message.disableExposureLogging = object.disableExposureLogging ?? false;\n    message.getAllConfigs = object.getAllConfigs ?? false;\n    return message;\n  },\n};\n\nfunction createBaseGetConfigValuesByTokenResponse(): GetConfigValuesByTokenResponse {\n  return { configResults: [] };\n}\n\nexport const GetConfigValuesByTokenResponse = {\n  encode(message: GetConfigValuesByTokenResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.configResults) {\n      ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigValuesByTokenResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetConfigValuesByTokenResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetConfigValuesByTokenResponse>, I>>(\n    object: I\n  ): GetConfigValuesByTokenResponse {\n    const message = createBaseGetConfigValuesByTokenResponse();\n    message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseGetCachedConfigResultSequenceIdsRequest(): GetCachedConfigResultSequenceIdsRequest {\n  return {};\n}\n\nexport const GetCachedConfigResultSequenceIdsRequest = {\n  encode(_: GetCachedConfigResultSequenceIdsRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GetCachedConfigResultSequenceIdsRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetCachedConfigResultSequenceIdsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetCachedConfigResultSequenceIdsRequest>, I>>(\n    _: I\n  ): GetCachedConfigResultSequenceIdsRequest {\n    const message = createBaseGetCachedConfigResultSequenceIdsRequest();\n    return message;\n  },\n};\n\nfunction createBaseGetCachedConfigResultSequenceIdsResponse(): GetCachedConfigResultSequenceIdsResponse {\n  return { serializedBitmap: new Uint8Array() };\n}\n\nexport const GetCachedConfigResultSequenceIdsResponse = {\n  encode(message: GetCachedConfigResultSequenceIdsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.serializedBitmap.length !== 0) {\n      writer.uint32(10).bytes(message.serializedBitmap);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GetCachedConfigResultSequenceIdsResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetCachedConfigResultSequenceIdsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.serializedBitmap = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetCachedConfigResultSequenceIdsResponse>, I>>(\n    object: I\n  ): GetCachedConfigResultSequenceIdsResponse {\n    const message = createBaseGetCachedConfigResultSequenceIdsResponse();\n    message.serializedBitmap = object.serializedBitmap ?? new Uint8Array();\n    return message;\n  },\n};\n\nfunction createBaseGetConfigResultsBySequenceIdsRequest(): GetConfigResultsBySequenceIdsRequest {\n  return { sequenceIds: [] };\n}\n\nexport const GetConfigResultsBySequenceIdsRequest = {\n  encode(message: GetConfigResultsBySequenceIdsRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    writer.uint32(10).fork();\n    for (const v of message.sequenceIds) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigResultsBySequenceIdsRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetConfigResultsBySequenceIdsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.sequenceIds.push(reader.int32());\n            }\n          } else {\n            message.sequenceIds.push(reader.int32());\n          }\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetConfigResultsBySequenceIdsRequest>, I>>(\n    object: I\n  ): GetConfigResultsBySequenceIdsRequest {\n    const message = createBaseGetConfigResultsBySequenceIdsRequest();\n    message.sequenceIds = object.sequenceIds?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseConfigResultWithSequenceId(): ConfigResultWithSequenceId {\n  return { sequenceId: 0, configResult: undefined };\n}\n\nexport const ConfigResultWithSequenceId = {\n  encode(message: ConfigResultWithSequenceId, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.sequenceId !== 0) {\n      writer.uint32(8).int32(message.sequenceId);\n    }\n    if (message.configResult !== undefined) {\n      ConfigResult.encode(message.configResult, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResultWithSequenceId {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseConfigResultWithSequenceId();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.sequenceId = reader.int32();\n          break;\n        case 2:\n          message.configResult = ConfigResult.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ConfigResultWithSequenceId>, I>>(object: I): ConfigResultWithSequenceId {\n    const message = createBaseConfigResultWithSequenceId();\n    message.sequenceId = object.sequenceId ?? 0;\n    message.configResult =\n      object.configResult !== undefined && object.configResult !== null\n        ? ConfigResult.fromPartial(object.configResult)\n        : undefined;\n    return message;\n  },\n};\n\nfunction createBaseGetConfigResultsBySequenceIdsResponse(): GetConfigResultsBySequenceIdsResponse {\n  return { configResultWithSequenceIds: [] };\n}\n\nexport const GetConfigResultsBySequenceIdsResponse = {\n  encode(message: GetConfigResultsBySequenceIdsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.configResultWithSequenceIds) {\n      ConfigResultWithSequenceId.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigResultsBySequenceIdsResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetConfigResultsBySequenceIdsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.configResultWithSequenceIds.push(ConfigResultWithSequenceId.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetConfigResultsBySequenceIdsResponse>, I>>(\n    object: I\n  ): GetConfigResultsBySequenceIdsResponse {\n    const message = createBaseGetConfigResultsBySequenceIdsResponse();\n    message.configResultWithSequenceIds =\n      object.configResultWithSequenceIds?.map((e) => ConfigResultWithSequenceId.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseGetBitmapByTokenRequest(): GetBitmapByTokenRequest {\n  return { token: \"\" };\n}\n\nexport const GetBitmapByTokenRequest = {\n  encode(message: GetBitmapByTokenRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.token !== \"\") {\n      writer.uint32(10).string(message.token);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GetBitmapByTokenRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetBitmapByTokenRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.token = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetBitmapByTokenRequest>, I>>(object: I): GetBitmapByTokenRequest {\n    const message = createBaseGetBitmapByTokenRequest();\n    message.token = object.token ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseGetBitmapByTokenResponse(): GetBitmapByTokenResponse {\n  return { idBitmap: new Uint8Array() };\n}\n\nexport const GetBitmapByTokenResponse = {\n  encode(message: GetBitmapByTokenResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.idBitmap.length !== 0) {\n      writer.uint32(10).bytes(message.idBitmap);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GetBitmapByTokenResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetBitmapByTokenResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.idBitmap = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetBitmapByTokenResponse>, I>>(object: I): GetBitmapByTokenResponse {\n    const message = createBaseGetBitmapByTokenResponse();\n    message.idBitmap = object.idBitmap ?? new Uint8Array();\n    return message;\n  },\n};\n\nfunction createBaseGetConfigValuesRegionalRequest(): GetConfigValuesRegionalRequest {\n  return {\n    token: \"\",\n    userId: \"\",\n    userCacheTtlInSeconds: 0,\n    userAgent: \"\",\n    clientIp: \"\",\n    deviceLocale: \"\",\n    configNames: [],\n    namespaces: [],\n    disableExposureLogging: false,\n  };\n}\n\nexport const GetConfigValuesRegionalRequest = {\n  encode(message: GetConfigValuesRegionalRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.token !== \"\") {\n      writer.uint32(10).string(message.token);\n    }\n    if (message.userId !== \"\") {\n      writer.uint32(18).string(message.userId);\n    }\n    if (message.userCacheTtlInSeconds !== 0) {\n      writer.uint32(24).int32(message.userCacheTtlInSeconds);\n    }\n    if (message.userAgent !== \"\") {\n      writer.uint32(34).string(message.userAgent);\n    }\n    if (message.clientIp !== \"\") {\n      writer.uint32(42).string(message.clientIp);\n    }\n    if (message.deviceLocale !== \"\") {\n      writer.uint32(50).string(message.deviceLocale);\n    }\n    for (const v of message.configNames) {\n      ConfigWithNamespace.encode(v!, writer.uint32(58).fork()).ldelim();\n    }\n    writer.uint32(66).fork();\n    for (const v of message.namespaces) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    if (message.disableExposureLogging === true) {\n      writer.uint32(72).bool(message.disableExposureLogging);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigValuesRegionalRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetConfigValuesRegionalRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.token = reader.string();\n          break;\n        case 2:\n          message.userId = reader.string();\n          break;\n        case 3:\n          message.userCacheTtlInSeconds = reader.int32();\n          break;\n        case 4:\n          message.userAgent = reader.string();\n          break;\n        case 5:\n          message.clientIp = reader.string();\n          break;\n        case 6:\n          message.deviceLocale = reader.string();\n          break;\n        case 7:\n          message.configNames.push(ConfigWithNamespace.decode(reader, reader.uint32()));\n          break;\n        case 8:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.namespaces.push(reader.int32() as any);\n            }\n          } else {\n            message.namespaces.push(reader.int32() as any);\n          }\n          break;\n        case 9:\n          message.disableExposureLogging = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetConfigValuesRegionalRequest>, I>>(\n    object: I\n  ): GetConfigValuesRegionalRequest {\n    const message = createBaseGetConfigValuesRegionalRequest();\n    message.token = object.token ?? \"\";\n    message.userId = object.userId ?? \"\";\n    message.userCacheTtlInSeconds = object.userCacheTtlInSeconds ?? 0;\n    message.userAgent = object.userAgent ?? \"\";\n    message.clientIp = object.clientIp ?? \"\";\n    message.deviceLocale = object.deviceLocale ?? \"\";\n    message.configNames = object.configNames?.map((e) => ConfigWithNamespace.fromPartial(e)) || [];\n    message.namespaces = object.namespaces?.map((e) => e) || [];\n    message.disableExposureLogging = object.disableExposureLogging ?? false;\n    return message;\n  },\n};\n\nfunction createBaseGetConfigValuesRegionalResponse(): GetConfigValuesRegionalResponse {\n  return { configResults: [] };\n}\n\nexport const GetConfigValuesRegionalResponse = {\n  encode(message: GetConfigValuesRegionalResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.configResults) {\n      ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GetConfigValuesRegionalResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetConfigValuesRegionalResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetConfigValuesRegionalResponse>, I>>(\n    object: I\n  ): GetConfigValuesRegionalResponse {\n    const message = createBaseGetConfigValuesRegionalResponse();\n    message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseGetUnevaluatedConfigResultsWithAbTargetingRequest(): GetUnevaluatedConfigResultsWithAbTargetingRequest {\n  return { namespaces: [], edgeConfigClientVersion: \"\" };\n}\n\nexport const GetUnevaluatedConfigResultsWithAbTargetingRequest = {\n  encode(\n    message: GetUnevaluatedConfigResultsWithAbTargetingRequest,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    writer.uint32(10).fork();\n    for (const v of message.namespaces) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    if (message.edgeConfigClientVersion !== \"\") {\n      writer.uint32(18).string(message.edgeConfigClientVersion);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GetUnevaluatedConfigResultsWithAbTargetingRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetUnevaluatedConfigResultsWithAbTargetingRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.namespaces.push(reader.int32() as any);\n            }\n          } else {\n            message.namespaces.push(reader.int32() as any);\n          }\n          break;\n        case 2:\n          message.edgeConfigClientVersion = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetUnevaluatedConfigResultsWithAbTargetingRequest>, I>>(\n    object: I\n  ): GetUnevaluatedConfigResultsWithAbTargetingRequest {\n    const message = createBaseGetUnevaluatedConfigResultsWithAbTargetingRequest();\n    message.namespaces = object.namespaces?.map((e) => e) || [];\n    message.edgeConfigClientVersion = object.edgeConfigClientVersion ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseGetUnevaluatedConfigResultsWithAbTargetingResponse(): GetUnevaluatedConfigResultsWithAbTargetingResponse {\n  return { configResults: [] };\n}\n\nexport const GetUnevaluatedConfigResultsWithAbTargetingResponse = {\n  encode(\n    message: GetUnevaluatedConfigResultsWithAbTargetingResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.configResults) {\n      ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GetUnevaluatedConfigResultsWithAbTargetingResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetUnevaluatedConfigResultsWithAbTargetingResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetUnevaluatedConfigResultsWithAbTargetingResponse>, I>>(\n    object: I\n  ): GetUnevaluatedConfigResultsWithAbTargetingResponse {\n    const message = createBaseGetUnevaluatedConfigResultsWithAbTargetingResponse();\n    message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n    return message;\n  },\n};\n\n/**\n * The main entry point for Circumstances Service\n *\n * endpoint: https://aws.api.snapchat.com\n */\nexport interface CircumstancesService {\n  /** Sync request for all configs. */\n  targetingQuery(\n    request: DeepPartial<ConfigTargetingRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<ConfigTargetingResponse>;\n  /** Request the value of a list of AB configs. */\n  getAbConfigValues(\n    request: DeepPartial<GetAbConfigValuesRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<GetAbConfigValuesResponse>;\n  /** Request the value of a list of configs using a COF token. */\n  getConfigValuesByToken(\n    request: DeepPartial<GetConfigValuesByTokenRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<GetConfigValuesByTokenResponse>;\n  /** Get config results for a list of config result sequence ids. */\n  getConfigResultsBySequenceIds(\n    request: DeepPartial<GetConfigResultsBySequenceIdsRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<GetConfigResultsBySequenceIdsResponse>;\n  /** Get config result sequence ids in CE instance cache. */\n  getCachedConfigResultSequenceIds(\n    request: DeepPartial<GetCachedConfigResultSequenceIdsRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<GetCachedConfigResultSequenceIdsResponse>;\n  /** Get the config id bitmap for a COF token. */\n  getBitmapByToken(\n    request: DeepPartial<GetBitmapByTokenRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<GetBitmapByTokenResponse>;\n  /**\n   * Generates a new ConfigSet by first performing a search query on targeting_parameters\n   * and the replaces results in the query with overrides.\n   * The configuration set is persisted for future uses\n   */\n  generateConfigSet(\n    request: DeepPartial<ConfigSetGenerationRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<ConfigSetGenerationResponse>;\n  /**\n   * Pins a previously created ConfigurationSet to a user for the period defined in ttl_seconds.\n   * If no ttl is set, we will use a default TTL of 1 Day\n   */\n  pinConfigSet(request: DeepPartial<PinConfigRequest>, metadata?: grpc.Metadata): Promise<PinConfigResponse>;\n  /**\n   * Removes the pinning of a previously pinned configuration. If the config set was not previously\n   * pinned then the call will fail.\n   */\n  unpinConfigSet(request: DeepPartial<UnpinConfigRequest>, metadata?: grpc.Metadata): Promise<UnpinConfigResponse>;\n  /**\n   * Gets a full list of unevaluated (as opposed to partially evaluated) ConfigResults, which\n   * combines pure COF ConfigResults as well as those generated from AB Studies\n   */\n  getUnevaluatedConfigResultsWithAbTargeting(\n    request: DeepPartial<GetUnevaluatedConfigResultsWithAbTargetingRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<GetUnevaluatedConfigResultsWithAbTargetingResponse>;\n}\n\nexport class CircumstancesServiceClientImpl implements CircumstancesService {\n  private readonly rpc: Rpc;\n\n  constructor(rpc: Rpc) {\n    this.rpc = rpc;\n    this.targetingQuery = this.targetingQuery.bind(this);\n    this.getAbConfigValues = this.getAbConfigValues.bind(this);\n    this.getConfigValuesByToken = this.getConfigValuesByToken.bind(this);\n    this.getConfigResultsBySequenceIds = this.getConfigResultsBySequenceIds.bind(this);\n    this.getCachedConfigResultSequenceIds = this.getCachedConfigResultSequenceIds.bind(this);\n    this.getBitmapByToken = this.getBitmapByToken.bind(this);\n    this.generateConfigSet = this.generateConfigSet.bind(this);\n    this.pinConfigSet = this.pinConfigSet.bind(this);\n    this.unpinConfigSet = this.unpinConfigSet.bind(this);\n    this.getUnevaluatedConfigResultsWithAbTargeting = this.getUnevaluatedConfigResultsWithAbTargeting.bind(this);\n  }\n\n  targetingQuery(\n    request: DeepPartial<ConfigTargetingRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<ConfigTargetingResponse> {\n    return this.rpc.unary(\n      CircumstancesServicetargetingQueryDesc,\n      ConfigTargetingRequest.fromPartial(request),\n      metadata\n    );\n  }\n\n  getAbConfigValues(\n    request: DeepPartial<GetAbConfigValuesRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<GetAbConfigValuesResponse> {\n    return this.rpc.unary(\n      CircumstancesServicegetAbConfigValuesDesc,\n      GetAbConfigValuesRequest.fromPartial(request),\n      metadata\n    );\n  }\n\n  getConfigValuesByToken(\n    request: DeepPartial<GetConfigValuesByTokenRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<GetConfigValuesByTokenResponse> {\n    return this.rpc.unary(\n      CircumstancesServicegetConfigValuesByTokenDesc,\n      GetConfigValuesByTokenRequest.fromPartial(request),\n      metadata\n    );\n  }\n\n  getConfigResultsBySequenceIds(\n    request: DeepPartial<GetConfigResultsBySequenceIdsRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<GetConfigResultsBySequenceIdsResponse> {\n    return this.rpc.unary(\n      CircumstancesServicegetConfigResultsBySequenceIdsDesc,\n      GetConfigResultsBySequenceIdsRequest.fromPartial(request),\n      metadata\n    );\n  }\n\n  getCachedConfigResultSequenceIds(\n    request: DeepPartial<GetCachedConfigResultSequenceIdsRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<GetCachedConfigResultSequenceIdsResponse> {\n    return this.rpc.unary(\n      CircumstancesServicegetCachedConfigResultSequenceIdsDesc,\n      GetCachedConfigResultSequenceIdsRequest.fromPartial(request),\n      metadata\n    );\n  }\n\n  getBitmapByToken(\n    request: DeepPartial<GetBitmapByTokenRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<GetBitmapByTokenResponse> {\n    return this.rpc.unary(\n      CircumstancesServicegetBitmapByTokenDesc,\n      GetBitmapByTokenRequest.fromPartial(request),\n      metadata\n    );\n  }\n\n  generateConfigSet(\n    request: DeepPartial<ConfigSetGenerationRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<ConfigSetGenerationResponse> {\n    return this.rpc.unary(\n      CircumstancesServicegenerateConfigSetDesc,\n      ConfigSetGenerationRequest.fromPartial(request),\n      metadata\n    );\n  }\n\n  pinConfigSet(request: DeepPartial<PinConfigRequest>, metadata?: grpc.Metadata): Promise<PinConfigResponse> {\n    return this.rpc.unary(CircumstancesServicepinConfigSetDesc, PinConfigRequest.fromPartial(request), metadata);\n  }\n\n  unpinConfigSet(request: DeepPartial<UnpinConfigRequest>, metadata?: grpc.Metadata): Promise<UnpinConfigResponse> {\n    return this.rpc.unary(CircumstancesServiceunpinConfigSetDesc, UnpinConfigRequest.fromPartial(request), metadata);\n  }\n\n  getUnevaluatedConfigResultsWithAbTargeting(\n    request: DeepPartial<GetUnevaluatedConfigResultsWithAbTargetingRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<GetUnevaluatedConfigResultsWithAbTargetingResponse> {\n    return this.rpc.unary(\n      CircumstancesServicegetUnevaluatedConfigResultsWithAbTargetingDesc,\n      GetUnevaluatedConfigResultsWithAbTargetingRequest.fromPartial(request),\n      metadata\n    );\n  }\n}\n\nexport const CircumstancesServiceDesc = {\n  serviceName: \"snapchat.cdp.cof.CircumstancesService\",\n};\n\nexport const CircumstancesServicetargetingQueryDesc: UnaryMethodDefinitionish = {\n  methodName: \"targetingQuery\",\n  service: CircumstancesServiceDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return ConfigTargetingRequest.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...ConfigTargetingResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const CircumstancesServicegetAbConfigValuesDesc: UnaryMethodDefinitionish = {\n  methodName: \"getAbConfigValues\",\n  service: CircumstancesServiceDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return GetAbConfigValuesRequest.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...GetAbConfigValuesResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const CircumstancesServicegetConfigValuesByTokenDesc: UnaryMethodDefinitionish = {\n  methodName: \"getConfigValuesByToken\",\n  service: CircumstancesServiceDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return GetConfigValuesByTokenRequest.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...GetConfigValuesByTokenResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const CircumstancesServicegetConfigResultsBySequenceIdsDesc: UnaryMethodDefinitionish = {\n  methodName: \"getConfigResultsBySequenceIds\",\n  service: CircumstancesServiceDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return GetConfigResultsBySequenceIdsRequest.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...GetConfigResultsBySequenceIdsResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const CircumstancesServicegetCachedConfigResultSequenceIdsDesc: UnaryMethodDefinitionish = {\n  methodName: \"getCachedConfigResultSequenceIds\",\n  service: CircumstancesServiceDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return GetCachedConfigResultSequenceIdsRequest.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...GetCachedConfigResultSequenceIdsResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const CircumstancesServicegetBitmapByTokenDesc: UnaryMethodDefinitionish = {\n  methodName: \"getBitmapByToken\",\n  service: CircumstancesServiceDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return GetBitmapByTokenRequest.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...GetBitmapByTokenResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const CircumstancesServicegenerateConfigSetDesc: UnaryMethodDefinitionish = {\n  methodName: \"generateConfigSet\",\n  service: CircumstancesServiceDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return ConfigSetGenerationRequest.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...ConfigSetGenerationResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const CircumstancesServicepinConfigSetDesc: UnaryMethodDefinitionish = {\n  methodName: \"pinConfigSet\",\n  service: CircumstancesServiceDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return PinConfigRequest.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...PinConfigResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const CircumstancesServiceunpinConfigSetDesc: UnaryMethodDefinitionish = {\n  methodName: \"unpinConfigSet\",\n  service: CircumstancesServiceDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return UnpinConfigRequest.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...UnpinConfigResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const CircumstancesServicegetUnevaluatedConfigResultsWithAbTargetingDesc: UnaryMethodDefinitionish = {\n  methodName: \"getUnevaluatedConfigResultsWithAbTargeting\",\n  service: CircumstancesServiceDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return GetUnevaluatedConfigResultsWithAbTargetingRequest.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...GetUnevaluatedConfigResultsWithAbTargetingResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\n/** The main entry point for Circumstances Regional Service */\nexport interface CircumstancesRegionalService {\n  /**\n   * Request the value of a list of configs or all configs in a set of namespaces.\n   * If a token is set, configs represented by this token will be returned.\n   * If a token is not set, the cached configs served to the user id will be returned.\n   * If user id cache is missing or expired, we will get fresh configs using targeting with user id and user agent.\n   */\n  getConfigValues(\n    request: DeepPartial<GetConfigValuesRegionalRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<GetConfigValuesRegionalResponse>;\n}\n\nexport class CircumstancesRegionalServiceClientImpl implements CircumstancesRegionalService {\n  private readonly rpc: Rpc;\n\n  constructor(rpc: Rpc) {\n    this.rpc = rpc;\n    this.getConfigValues = this.getConfigValues.bind(this);\n  }\n\n  getConfigValues(\n    request: DeepPartial<GetConfigValuesRegionalRequest>,\n    metadata?: grpc.Metadata\n  ): Promise<GetConfigValuesRegionalResponse> {\n    return this.rpc.unary(\n      CircumstancesRegionalServicegetConfigValuesDesc,\n      GetConfigValuesRegionalRequest.fromPartial(request),\n      metadata\n    );\n  }\n}\n\nexport const CircumstancesRegionalServiceDesc = {\n  serviceName: \"snapchat.cdp.cof.CircumstancesRegionalService\",\n};\n\nexport const CircumstancesRegionalServicegetConfigValuesDesc: UnaryMethodDefinitionish = {\n  methodName: \"getConfigValues\",\n  service: CircumstancesRegionalServiceDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return GetConfigValuesRegionalRequest.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...GetConfigValuesRegionalResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\ninterface UnaryMethodDefinitionishR extends grpc.UnaryMethodDefinition<any, any> {\n  requestStream: any;\n  responseStream: any;\n}\n\ntype UnaryMethodDefinitionish = UnaryMethodDefinitionishR;\n\ninterface Rpc {\n  unary<T extends UnaryMethodDefinitionish>(\n    methodDesc: T,\n    request: any,\n    metadata: grpc.Metadata | undefined\n  ): Promise<any>;\n}\n\nexport class GrpcWebImpl {\n  private host: string;\n  private options: {\n    transport?: grpc.TransportFactory;\n\n    debug?: boolean;\n    metadata?: grpc.Metadata;\n  };\n\n  constructor(\n    host: string,\n    options: {\n      transport?: grpc.TransportFactory;\n\n      debug?: boolean;\n      metadata?: grpc.Metadata;\n    }\n  ) {\n    this.host = host;\n    this.options = options;\n  }\n\n  unary<T extends UnaryMethodDefinitionish>(\n    methodDesc: T,\n    _request: any,\n    metadata: grpc.Metadata | undefined\n  ): Promise<any> {\n    const request = { ..._request, ...methodDesc.requestType };\n    const maybeCombinedMetadata =\n      metadata && this.options.metadata\n        ? new BrowserHeaders({ ...this.options?.metadata.headersMap, ...metadata?.headersMap })\n        : metadata || this.options.metadata;\n    return new Promise((resolve, reject) => {\n      grpc.unary(methodDesc, {\n        request,\n        host: this.host,\n        metadata: maybeCombinedMetadata,\n        transport: this.options.transport,\n        debug: this.options.debug,\n        onEnd: function (response) {\n          if (response.status === grpc.Code.OK) {\n            resolve(response.message);\n          } else {\n            const err = new Error(response.statusMessage) as any;\n            err.code = response.status;\n            err.metadata = response.trailers;\n            reject(err);\n          }\n        },\n      });\n    });\n  }\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n"]}