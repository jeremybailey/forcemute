{"version":3,"file":"ruid.js","sourceRoot":"","sources":["../../../../src/generated-proto/pb_schema/common/ruid.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"snapchat.common\";\n\n/** Randomization unit ID */\nexport interface Ruid {\n  /** Type of ID for request */\n  type: Ruid_Type;\n  /** String value of ID */\n  stringValue: string;\n  /**\n   * When specifying a privacy-sensitive RUID (such as device_id), a logging ID should be used instead of the RUID for logging.\n   * Each privacy-sensitive RUID type maps to a replacement logging ID type (for example: device_id -> client_id).\n   * Note: this is suffixed with `_value` both to indicate it's a value and to avoid conflict with the LoggingId DTO.\n   */\n  loggingIdValue: string;\n}\n\n/** Randomization units supported for allocation */\nexport enum Ruid_Type {\n  /** UNSET - Unknown type */\n  UNSET = 0,\n  /** USER - Snapchat user ID */\n  USER = 1,\n  /** DEVICE - Config device ID */\n  DEVICE = 2,\n  /** WEB_CLIENT - Web client ID */\n  WEB_CLIENT = 3,\n  /** AD_ACCOUNT - Ad account ID */\n  AD_ACCOUNT = 4,\n  /** USERNAME - Snapchat username (legacy only) */\n  USERNAME = 5,\n  /** AD_MODERATION_AD - Ad Id used by Ad Moderation backend. */\n  AD_MODERATION_AD = 6,\n  /** WEB_SNAPCHAT_USER - Snapchat user id used on web. */\n  WEB_SNAPCHAT_USER = 7,\n  /** INTERNAL - Internal test RUID, internal use only and no analysis. */\n  INTERNAL = 8,\n  /** AM_ORGANIZATION - Ads Manager organization ID */\n  AM_ORGANIZATION = 9,\n  /** AM_MEMBER - Ads Manager member ID */\n  AM_MEMBER = 10,\n  /** AM_SESSION - Ads Manager session ID */\n  AM_SESSION = 11,\n  /** AM_PROFILE - Ads Manager profile ID */\n  AM_PROFILE = 12,\n  /** AM_SNAPCHAT_USER - Snapchat user ID on Ads Manager */\n  AM_SNAPCHAT_USER = 13,\n  /** SNAPCHAT_ADVERTISING - Snapchat Advertising ID for Budget A/B */\n  SNAPCHAT_ADVERTISING = 14,\n  /** AM_CLIENT - Ads Manager client ID */\n  AM_CLIENT = 15,\n  /** MISCHIEF - Mischief id for group chat */\n  MISCHIEF = 16,\n  UNRECOGNIZED = -1,\n}\n\nfunction createBaseRuid(): Ruid {\n  return { type: 0, stringValue: \"\", loggingIdValue: \"\" };\n}\n\nexport const Ruid = {\n  encode(message: Ruid, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.type !== 0) {\n      writer.uint32(8).int32(message.type);\n    }\n    if (message.stringValue !== \"\") {\n      writer.uint32(18).string(message.stringValue);\n    }\n    if (message.loggingIdValue !== \"\") {\n      writer.uint32(26).string(message.loggingIdValue);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Ruid {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRuid();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32() as any;\n          break;\n        case 2:\n          message.stringValue = reader.string();\n          break;\n        case 3:\n          message.loggingIdValue = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Ruid>, I>>(object: I): Ruid {\n    const message = createBaseRuid();\n    message.type = object.type ?? 0;\n    message.stringValue = object.stringValue ?? \"\";\n    message.loggingIdValue = object.loggingIdValue ?? \"\";\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n"]}