import _m0 from "protobufjs/minimal";
import { Any } from "../../google/protobuf/any";
export declare const protobufPackage = "com.snap.camerakit.v3";
export interface Lens {
    /** Lens ID */
    id: string;
    /** Lens name */
    name: string;
    /** Lens custom vendor data */
    vendorData: {
        [key: string]: string;
    };
    /** Lens content */
    content: Content | undefined;
    /** Indicates if Lens private API is disabled */
    isThirdParty: boolean;
    /** camera facing enum. */
    cameraFacingPreference: Lens_CameraFacing;
    /** Lens feature metadata */
    featureMetadata: Any[];
    /** Lens creator. */
    lensCreator: LensCreator | undefined;
}
/** CameraFacing enum. */
export declare enum Lens_CameraFacing {
    /** CAMERA_FACING_UNSET - unspecified value. */
    CAMERA_FACING_UNSET = "CAMERA_FACING_UNSET",
    /** CAMERA_FACING_FRONT - camera facing front */
    CAMERA_FACING_FRONT = "CAMERA_FACING_FRONT",
    /** CAMERA_FACING_BACK - camera facing back */
    CAMERA_FACING_BACK = "CAMERA_FACING_BACK",
    UNRECOGNIZED = "UNRECOGNIZED"
}
export declare function lens_CameraFacingFromJSON(object: any): Lens_CameraFacing;
export declare function lens_CameraFacingToJSON(object: Lens_CameraFacing): string;
export declare function lens_CameraFacingToNumber(object: Lens_CameraFacing): number;
export interface Lens_VendorDataEntry {
    key: string;
    value: string;
}
export interface Content {
    /** Lens LNS URL */
    lnsUrl: string;
    /** Lens LNS SHA256 checksum */
    lnsSha256: string;
    /** Lens icon URL */
    iconUrl: string;
    /** Lens preview */
    preview: Preview | undefined;
    /** Lens asset manifest */
    assetManifest: LensAssetManifestItem[];
    /** Lens default hint id */
    defaultHintId: string;
    /** Lens hint translations. Contains hint id, manifest data id and corresponding translation string as a value */
    hintTranslations: {
        [key: string]: string;
    };
    /**
     * Lens LNS archive URL in Bolt CDN (https://wiki.sc-corp.net/display/CDP/BOLT). Lens archive content is the same as
     * in 'lns_url'. The field will eventually deprecate 'lns_url'.
     */
    lnsUrlBolt: string;
    /**
     * Lens icon URL in Bolt CDN (https://wiki.sc-corp.net/display/CDP/BOLT). MIME type of the Bolt URL image may differ
     * from the 'icon_url' image. At the moment of this writing, 'icon_url' refers to a PNG image, 'icon_url_bolt' refers
     * to a WEBP image. The field will eventually deprecate 'icon_url'.
     */
    iconUrlBolt: string;
}
export interface Content_HintTranslationsEntry {
    key: string;
    value: string;
}
export interface LensAssetManifestItem {
    /** Lens asset manifest type */
    type: LensAssetManifestItem_Type;
    /** Lens manifest item ID */
    id: string;
    /** Lens manifest item request timing */
    requestTiming: LensAssetManifestItem_RequestTiming;
    /** Lens asset url */
    assetUrl: string;
    /** asset checksum */
    assetChecksum: string;
}
/** Manifest type */
export declare enum LensAssetManifestItem_Type {
    /** DEVICE_DEPENDENT_ASSET_UNSET - Device dependent asset */
    DEVICE_DEPENDENT_ASSET_UNSET = "DEVICE_DEPENDENT_ASSET_UNSET",
    /** ASSET - Device independent asset */
    ASSET = "ASSET",
    UNRECOGNIZED = "UNRECOGNIZED"
}
export declare function lensAssetManifestItem_TypeFromJSON(object: any): LensAssetManifestItem_Type;
export declare function lensAssetManifestItem_TypeToJSON(object: LensAssetManifestItem_Type): string;
export declare function lensAssetManifestItem_TypeToNumber(object: LensAssetManifestItem_Type): number;
/** Manifest request timing */
export declare enum LensAssetManifestItem_RequestTiming {
    /** PRELOAD_UNSET - Preload request timing */
    PRELOAD_UNSET = "PRELOAD_UNSET",
    /** ON_DEMAND - On demand request timing */
    ON_DEMAND = "ON_DEMAND",
    /** REQUIRED - Required request timing */
    REQUIRED = "REQUIRED",
    UNRECOGNIZED = "UNRECOGNIZED"
}
export declare function lensAssetManifestItem_RequestTimingFromJSON(object: any): LensAssetManifestItem_RequestTiming;
export declare function lensAssetManifestItem_RequestTimingToJSON(object: LensAssetManifestItem_RequestTiming): string;
export declare function lensAssetManifestItem_RequestTimingToNumber(object: LensAssetManifestItem_RequestTiming): number;
export interface Preview {
    /** Lens preview image URL */
    imageUrl: string;
}
export interface LensCreator {
    /** Lens creator display name. */
    displayName: string;
}
export declare const Lens: {
    decode(input: _m0.Reader | Uint8Array, length?: number): Lens;
    fromJSON(object: any): Lens;
    toJSON(message: Lens): unknown;
    fromPartial<I extends {
        id?: string | undefined;
        name?: string | undefined;
        vendorData?: {
            [x: string]: string | undefined;
        } | undefined;
        content?: {
            lnsUrl?: string | undefined;
            lnsSha256?: string | undefined;
            iconUrl?: string | undefined;
            preview?: {
                imageUrl?: string | undefined;
            } | undefined;
            assetManifest?: {
                type?: LensAssetManifestItem_Type | undefined;
                id?: string | undefined;
                requestTiming?: LensAssetManifestItem_RequestTiming | undefined;
                assetUrl?: string | undefined;
                assetChecksum?: string | undefined;
            }[] | undefined;
            defaultHintId?: string | undefined;
            hintTranslations?: {
                [x: string]: string | undefined;
            } | undefined;
            lnsUrlBolt?: string | undefined;
            iconUrlBolt?: string | undefined;
        } | undefined;
        isThirdParty?: boolean | undefined;
        cameraFacingPreference?: Lens_CameraFacing | undefined;
        featureMetadata?: {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[] | undefined;
        lensCreator?: {
            displayName?: string | undefined;
        } | undefined;
    } & {
        id?: string | undefined;
        name?: string | undefined;
        vendorData?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & Record<Exclude<keyof I["vendorData"], string | number>, never>) | undefined;
        content?: ({
            lnsUrl?: string | undefined;
            lnsSha256?: string | undefined;
            iconUrl?: string | undefined;
            preview?: {
                imageUrl?: string | undefined;
            } | undefined;
            assetManifest?: {
                type?: LensAssetManifestItem_Type | undefined;
                id?: string | undefined;
                requestTiming?: LensAssetManifestItem_RequestTiming | undefined;
                assetUrl?: string | undefined;
                assetChecksum?: string | undefined;
            }[] | undefined;
            defaultHintId?: string | undefined;
            hintTranslations?: {
                [x: string]: string | undefined;
            } | undefined;
            lnsUrlBolt?: string | undefined;
            iconUrlBolt?: string | undefined;
        } & {
            lnsUrl?: string | undefined;
            lnsSha256?: string | undefined;
            iconUrl?: string | undefined;
            preview?: ({
                imageUrl?: string | undefined;
            } & {
                imageUrl?: string | undefined;
            } & Record<Exclude<keyof I["content"]["preview"], "imageUrl">, never>) | undefined;
            assetManifest?: ({
                type?: LensAssetManifestItem_Type | undefined;
                id?: string | undefined;
                requestTiming?: LensAssetManifestItem_RequestTiming | undefined;
                assetUrl?: string | undefined;
                assetChecksum?: string | undefined;
            }[] & ({
                type?: LensAssetManifestItem_Type | undefined;
                id?: string | undefined;
                requestTiming?: LensAssetManifestItem_RequestTiming | undefined;
                assetUrl?: string | undefined;
                assetChecksum?: string | undefined;
            } & {
                type?: LensAssetManifestItem_Type | undefined;
                id?: string | undefined;
                requestTiming?: LensAssetManifestItem_RequestTiming | undefined;
                assetUrl?: string | undefined;
                assetChecksum?: string | undefined;
            } & Record<Exclude<keyof I["content"]["assetManifest"][number], keyof LensAssetManifestItem>, never>)[] & Record<Exclude<keyof I["content"]["assetManifest"], keyof {
                type?: LensAssetManifestItem_Type | undefined;
                id?: string | undefined;
                requestTiming?: LensAssetManifestItem_RequestTiming | undefined;
                assetUrl?: string | undefined;
                assetChecksum?: string | undefined;
            }[]>, never>) | undefined;
            defaultHintId?: string | undefined;
            hintTranslations?: ({
                [x: string]: string | undefined;
            } & {
                [x: string]: string | undefined;
            } & Record<Exclude<keyof I["content"]["hintTranslations"], string | number>, never>) | undefined;
            lnsUrlBolt?: string | undefined;
            iconUrlBolt?: string | undefined;
        } & Record<Exclude<keyof I["content"], keyof Content>, never>) | undefined;
        isThirdParty?: boolean | undefined;
        cameraFacingPreference?: Lens_CameraFacing | undefined;
        featureMetadata?: ({
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[] & ({
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & Record<Exclude<keyof I["featureMetadata"][number], keyof Any>, never>)[] & Record<Exclude<keyof I["featureMetadata"], keyof {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[]>, never>) | undefined;
        lensCreator?: ({
            displayName?: string | undefined;
        } & {
            displayName?: string | undefined;
        } & Record<Exclude<keyof I["lensCreator"], "displayName">, never>) | undefined;
    } & Record<Exclude<keyof I, keyof Lens>, never>>(object: I): Lens;
};
export declare const Lens_VendorDataEntry: {
    decode(input: _m0.Reader | Uint8Array, length?: number): Lens_VendorDataEntry;
    fromJSON(object: any): Lens_VendorDataEntry;
    toJSON(message: Lens_VendorDataEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & Record<Exclude<keyof I, keyof Lens_VendorDataEntry>, never>>(object: I): Lens_VendorDataEntry;
};
export declare const Content: {
    decode(input: _m0.Reader | Uint8Array, length?: number): Content;
    fromJSON(object: any): Content;
    toJSON(message: Content): unknown;
    fromPartial<I extends {
        lnsUrl?: string | undefined;
        lnsSha256?: string | undefined;
        iconUrl?: string | undefined;
        preview?: {
            imageUrl?: string | undefined;
        } | undefined;
        assetManifest?: {
            type?: LensAssetManifestItem_Type | undefined;
            id?: string | undefined;
            requestTiming?: LensAssetManifestItem_RequestTiming | undefined;
            assetUrl?: string | undefined;
            assetChecksum?: string | undefined;
        }[] | undefined;
        defaultHintId?: string | undefined;
        hintTranslations?: {
            [x: string]: string | undefined;
        } | undefined;
        lnsUrlBolt?: string | undefined;
        iconUrlBolt?: string | undefined;
    } & {
        lnsUrl?: string | undefined;
        lnsSha256?: string | undefined;
        iconUrl?: string | undefined;
        preview?: ({
            imageUrl?: string | undefined;
        } & {
            imageUrl?: string | undefined;
        } & Record<Exclude<keyof I["preview"], "imageUrl">, never>) | undefined;
        assetManifest?: ({
            type?: LensAssetManifestItem_Type | undefined;
            id?: string | undefined;
            requestTiming?: LensAssetManifestItem_RequestTiming | undefined;
            assetUrl?: string | undefined;
            assetChecksum?: string | undefined;
        }[] & ({
            type?: LensAssetManifestItem_Type | undefined;
            id?: string | undefined;
            requestTiming?: LensAssetManifestItem_RequestTiming | undefined;
            assetUrl?: string | undefined;
            assetChecksum?: string | undefined;
        } & {
            type?: LensAssetManifestItem_Type | undefined;
            id?: string | undefined;
            requestTiming?: LensAssetManifestItem_RequestTiming | undefined;
            assetUrl?: string | undefined;
            assetChecksum?: string | undefined;
        } & Record<Exclude<keyof I["assetManifest"][number], keyof LensAssetManifestItem>, never>)[] & Record<Exclude<keyof I["assetManifest"], keyof {
            type?: LensAssetManifestItem_Type | undefined;
            id?: string | undefined;
            requestTiming?: LensAssetManifestItem_RequestTiming | undefined;
            assetUrl?: string | undefined;
            assetChecksum?: string | undefined;
        }[]>, never>) | undefined;
        defaultHintId?: string | undefined;
        hintTranslations?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & Record<Exclude<keyof I["hintTranslations"], string | number>, never>) | undefined;
        lnsUrlBolt?: string | undefined;
        iconUrlBolt?: string | undefined;
    } & Record<Exclude<keyof I, keyof Content>, never>>(object: I): Content;
};
export declare const Content_HintTranslationsEntry: {
    decode(input: _m0.Reader | Uint8Array, length?: number): Content_HintTranslationsEntry;
    fromJSON(object: any): Content_HintTranslationsEntry;
    toJSON(message: Content_HintTranslationsEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & Record<Exclude<keyof I, keyof Content_HintTranslationsEntry>, never>>(object: I): Content_HintTranslationsEntry;
};
export declare const LensAssetManifestItem: {
    decode(input: _m0.Reader | Uint8Array, length?: number): LensAssetManifestItem;
    fromJSON(object: any): LensAssetManifestItem;
    toJSON(message: LensAssetManifestItem): unknown;
    fromPartial<I extends {
        type?: LensAssetManifestItem_Type | undefined;
        id?: string | undefined;
        requestTiming?: LensAssetManifestItem_RequestTiming | undefined;
        assetUrl?: string | undefined;
        assetChecksum?: string | undefined;
    } & {
        type?: LensAssetManifestItem_Type | undefined;
        id?: string | undefined;
        requestTiming?: LensAssetManifestItem_RequestTiming | undefined;
        assetUrl?: string | undefined;
        assetChecksum?: string | undefined;
    } & Record<Exclude<keyof I, keyof LensAssetManifestItem>, never>>(object: I): LensAssetManifestItem;
};
export declare const Preview: {
    decode(input: _m0.Reader | Uint8Array, length?: number): Preview;
    fromJSON(object: any): Preview;
    toJSON(message: Preview): unknown;
    fromPartial<I extends {
        imageUrl?: string | undefined;
    } & {
        imageUrl?: string | undefined;
    } & Record<Exclude<keyof I, "imageUrl">, never>>(object: I): Preview;
};
export declare const LensCreator: {
    decode(input: _m0.Reader | Uint8Array, length?: number): LensCreator;
    fromJSON(object: any): LensCreator;
    toJSON(message: LensCreator): unknown;
    fromPartial<I extends {
        displayName?: string | undefined;
    } & {
        displayName?: string | undefined;
    } & Record<Exclude<keyof I, "displayName">, never>>(object: I): LensCreator;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {
    $case: string;
} ? {
    [K in keyof Omit<T, "$case">]?: DeepPartial<T[K]>;
} & {
    $case: T["$case"];
} : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;
export {};
