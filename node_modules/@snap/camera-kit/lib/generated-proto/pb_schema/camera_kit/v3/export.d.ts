import _m0 from "protobufjs/minimal";
import { Lens } from "./lens";
export declare const protobufPackage = "com.snap.camerakit.v3";
export interface ExportLensesByIdRequest {
    /** Unlockable ids to export */
    unlockableIds: number[];
    /** Request context */
    context: ExportLensesByIdRequest_Context | undefined;
}
export interface ExportLensesByIdRequest_Context {
    /**
     * User agent string
     * For details link https://github.sc-corp.net/Snapchat/camera-kit-backend/blob/master/docs/useragent.md
     *
     * @deprecated
     */
    userAgent: string;
    /**
     * User locale
     * For details link https://github.sc-corp.net/Snapchat/camera-kit-backend/blob/master/docs/accept-language.md
     *
     * @deprecated
     */
    locale: string;
    /**
     * Misspelled field. Use `extension` field instead
     *
     * @deprecated
     */
    extention: ExportLensesByIdRequest_Context_Extension | undefined;
    /** Extension that called export endpoint */
    extension: ExportLensesByIdRequest_Context_Extension | undefined;
    /** Extension request context */
    extensionRequestContext: Uint8Array;
}
export interface ExportLensesByIdRequest_Context_Extension {
    /** Extension name that called export endpoint */
    name: ExportLensesByIdRequest_Context_Extension_Name;
    /** Extension version (optional) that called export endpoint */
    version: string;
}
/** Extension enum specifies list of supported extensions */
export declare enum ExportLensesByIdRequest_Context_Extension_Name {
    /** UNSET - UNSET value */
    UNSET = "UNSET",
    /** SHOP_KIT - Shopkit */
    SHOP_KIT = "SHOP_KIT",
    UNRECOGNIZED = "UNRECOGNIZED"
}
export declare function exportLensesByIdRequest_Context_Extension_NameFromJSON(object: any): ExportLensesByIdRequest_Context_Extension_Name;
export declare function exportLensesByIdRequest_Context_Extension_NameToNumber(object: ExportLensesByIdRequest_Context_Extension_Name): number;
export interface ExportLensesByIdResponse {
    /** Map between unlockable_id and exported lens object to pass in CameraKit SDK */
    lenses: {
        [key: number]: Uint8Array;
    };
    /** List of excluded lenses with code and reason */
    excludedLenses: ExportLensesByIdResponse_ExcludedLens[];
}
export interface ExportLensesByIdResponse_LensesEntry {
    key: number;
    value: Uint8Array;
}
export interface ExportLensesByIdResponse_ExcludedLens {
    /** lens id */
    lensId: number;
    /** code why this lens been excluded */
    code: ExportLensesByIdResponse_ExcludedLens_Code;
    /** text reason why this lens been excluded */
    reason: string;
}
export declare enum ExportLensesByIdResponse_ExcludedLens_Code {
    /** UNSET - for linter */
    UNSET = "UNSET",
    /** UNKNOWN - reason unknown */
    UNKNOWN = "UNKNOWN",
    /** NOT_FOUND - lens not found */
    NOT_FOUND = "NOT_FOUND",
    /** INCOMPATIBLE_LENS_CORE_VERSION - client has core version less than  core version of the lens */
    INCOMPATIBLE_LENS_CORE_VERSION = "INCOMPATIBLE_LENS_CORE_VERSION",
    /** ARCHIVED_OR_INVISIBLE - Lens archived or excluded due to visibility */
    ARCHIVED_OR_INVISIBLE = "ARCHIVED_OR_INVISIBLE",
    /** CONTAINS_MUSIC - lens contains music and cannot be provided by CameraKit */
    CONTAINS_MUSIC = "CONTAINS_MUSIC",
    UNRECOGNIZED = "UNRECOGNIZED"
}
export declare function exportLensesByIdResponse_ExcludedLens_CodeFromJSON(object: any): ExportLensesByIdResponse_ExcludedLens_Code;
export declare function exportLensesByIdResponse_ExcludedLens_CodeToNumber(object: ExportLensesByIdResponse_ExcludedLens_Code): number;
/** ExtensionRequestContext message contains export context. */
export interface ExtensionRequestContext {
    /**
     * User agent string
     * For details link https://github.sc-corp.net/Snapchat/camera-kit-backend/blob/master/docs/useragent.md
     */
    userAgent: string;
    /**
     * User locale
     * For details link https://github.sc-corp.net/Snapchat/camera-kit-backend/blob/master/docs/accept-language.md
     */
    locale: string;
}
/**
 * This message contains any auxiliary data to the exported lenses.
 * ExportLensesByIdResponse returns this object in bytes representation to hide specific implementation from
 * the extension.
 * We expect that extension will simply pass through bytes to the
 * SDK and do not perform any modifications to the original object.
 */
export interface Envelope {
    /** Exported lenses */
    lenses: Lens[];
}
export declare const ExportLensesByIdRequest: {
    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdRequest;
    fromPartial<I extends {
        unlockableIds?: number[] | undefined;
        context?: {
            userAgent?: string | undefined;
            locale?: string | undefined;
            extention?: {
                name?: ExportLensesByIdRequest_Context_Extension_Name | undefined;
                version?: string | undefined;
            } | undefined;
            extension?: {
                name?: ExportLensesByIdRequest_Context_Extension_Name | undefined;
                version?: string | undefined;
            } | undefined;
            extensionRequestContext?: Uint8Array | undefined;
        } | undefined;
    } & {
        unlockableIds?: (number[] & number[] & Record<Exclude<keyof I["unlockableIds"], keyof number[]>, never>) | undefined;
        context?: ({
            userAgent?: string | undefined;
            locale?: string | undefined;
            extention?: {
                name?: ExportLensesByIdRequest_Context_Extension_Name | undefined;
                version?: string | undefined;
            } | undefined;
            extension?: {
                name?: ExportLensesByIdRequest_Context_Extension_Name | undefined;
                version?: string | undefined;
            } | undefined;
            extensionRequestContext?: Uint8Array | undefined;
        } & {
            userAgent?: string | undefined;
            locale?: string | undefined;
            extention?: ({
                name?: ExportLensesByIdRequest_Context_Extension_Name | undefined;
                version?: string | undefined;
            } & {
                name?: ExportLensesByIdRequest_Context_Extension_Name | undefined;
                version?: string | undefined;
            } & Record<Exclude<keyof I["context"]["extention"], keyof ExportLensesByIdRequest_Context_Extension>, never>) | undefined;
            extension?: ({
                name?: ExportLensesByIdRequest_Context_Extension_Name | undefined;
                version?: string | undefined;
            } & {
                name?: ExportLensesByIdRequest_Context_Extension_Name | undefined;
                version?: string | undefined;
            } & Record<Exclude<keyof I["context"]["extension"], keyof ExportLensesByIdRequest_Context_Extension>, never>) | undefined;
            extensionRequestContext?: Uint8Array | undefined;
        } & Record<Exclude<keyof I["context"], keyof ExportLensesByIdRequest_Context>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof ExportLensesByIdRequest>, never>>(object: I): ExportLensesByIdRequest;
};
export declare const ExportLensesByIdRequest_Context: {
    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdRequest_Context;
    fromPartial<I extends {
        userAgent?: string | undefined;
        locale?: string | undefined;
        extention?: {
            name?: ExportLensesByIdRequest_Context_Extension_Name | undefined;
            version?: string | undefined;
        } | undefined;
        extension?: {
            name?: ExportLensesByIdRequest_Context_Extension_Name | undefined;
            version?: string | undefined;
        } | undefined;
        extensionRequestContext?: Uint8Array | undefined;
    } & {
        userAgent?: string | undefined;
        locale?: string | undefined;
        extention?: ({
            name?: ExportLensesByIdRequest_Context_Extension_Name | undefined;
            version?: string | undefined;
        } & {
            name?: ExportLensesByIdRequest_Context_Extension_Name | undefined;
            version?: string | undefined;
        } & Record<Exclude<keyof I["extention"], keyof ExportLensesByIdRequest_Context_Extension>, never>) | undefined;
        extension?: ({
            name?: ExportLensesByIdRequest_Context_Extension_Name | undefined;
            version?: string | undefined;
        } & {
            name?: ExportLensesByIdRequest_Context_Extension_Name | undefined;
            version?: string | undefined;
        } & Record<Exclude<keyof I["extension"], keyof ExportLensesByIdRequest_Context_Extension>, never>) | undefined;
        extensionRequestContext?: Uint8Array | undefined;
    } & Record<Exclude<keyof I, keyof ExportLensesByIdRequest_Context>, never>>(object: I): ExportLensesByIdRequest_Context;
};
export declare const ExportLensesByIdRequest_Context_Extension: {
    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdRequest_Context_Extension;
    fromPartial<I extends {
        name?: ExportLensesByIdRequest_Context_Extension_Name | undefined;
        version?: string | undefined;
    } & {
        name?: ExportLensesByIdRequest_Context_Extension_Name | undefined;
        version?: string | undefined;
    } & Record<Exclude<keyof I, keyof ExportLensesByIdRequest_Context_Extension>, never>>(object: I): ExportLensesByIdRequest_Context_Extension;
};
export declare const ExportLensesByIdResponse: {
    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdResponse;
    fromPartial<I extends {
        lenses?: {
            [x: number]: Uint8Array | undefined;
        } | undefined;
        excludedLenses?: {
            lensId?: number | undefined;
            code?: ExportLensesByIdResponse_ExcludedLens_Code | undefined;
            reason?: string | undefined;
        }[] | undefined;
    } & {
        lenses?: ({
            [x: number]: Uint8Array | undefined;
        } & {
            [x: number]: Uint8Array | undefined;
        } & Record<Exclude<keyof I["lenses"], number>, never>) | undefined;
        excludedLenses?: ({
            lensId?: number | undefined;
            code?: ExportLensesByIdResponse_ExcludedLens_Code | undefined;
            reason?: string | undefined;
        }[] & ({
            lensId?: number | undefined;
            code?: ExportLensesByIdResponse_ExcludedLens_Code | undefined;
            reason?: string | undefined;
        } & {
            lensId?: number | undefined;
            code?: ExportLensesByIdResponse_ExcludedLens_Code | undefined;
            reason?: string | undefined;
        } & Record<Exclude<keyof I["excludedLenses"][number], keyof ExportLensesByIdResponse_ExcludedLens>, never>)[] & Record<Exclude<keyof I["excludedLenses"], keyof {
            lensId?: number | undefined;
            code?: ExportLensesByIdResponse_ExcludedLens_Code | undefined;
            reason?: string | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof ExportLensesByIdResponse>, never>>(object: I): ExportLensesByIdResponse;
};
export declare const ExportLensesByIdResponse_LensesEntry: {
    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdResponse_LensesEntry;
    fromPartial<I extends {
        key?: number | undefined;
        value?: Uint8Array | undefined;
    } & {
        key?: number | undefined;
        value?: Uint8Array | undefined;
    } & Record<Exclude<keyof I, keyof ExportLensesByIdResponse_LensesEntry>, never>>(object: I): ExportLensesByIdResponse_LensesEntry;
};
export declare const ExportLensesByIdResponse_ExcludedLens: {
    decode(input: _m0.Reader | Uint8Array, length?: number): ExportLensesByIdResponse_ExcludedLens;
    fromPartial<I extends {
        lensId?: number | undefined;
        code?: ExportLensesByIdResponse_ExcludedLens_Code | undefined;
        reason?: string | undefined;
    } & {
        lensId?: number | undefined;
        code?: ExportLensesByIdResponse_ExcludedLens_Code | undefined;
        reason?: string | undefined;
    } & Record<Exclude<keyof I, keyof ExportLensesByIdResponse_ExcludedLens>, never>>(object: I): ExportLensesByIdResponse_ExcludedLens;
};
export declare const ExtensionRequestContext: {
    encode(message: ExtensionRequestContext, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ExtensionRequestContext;
    fromPartial<I extends {
        userAgent?: string | undefined;
        locale?: string | undefined;
    } & {
        userAgent?: string | undefined;
        locale?: string | undefined;
    } & Record<Exclude<keyof I, keyof ExtensionRequestContext>, never>>(object: I): ExtensionRequestContext;
};
export declare const Envelope: {
    decode(input: _m0.Reader | Uint8Array, length?: number): Envelope;
    fromPartial<I extends {
        lenses?: {
            id?: string | undefined;
            name?: string | undefined;
            vendorData?: {
                [x: string]: string | undefined;
            } | undefined;
            content?: {
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: {
                    imageUrl?: string | undefined;
                } | undefined;
                assetManifest?: {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: {
                    [x: string]: string | undefined;
                } | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } | undefined;
            isThirdParty?: boolean | undefined;
            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
            featureMetadata?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            lensCreator?: {
                displayName?: string | undefined;
            } | undefined;
        }[] | undefined;
    } & {
        lenses?: ({
            id?: string | undefined;
            name?: string | undefined;
            vendorData?: {
                [x: string]: string | undefined;
            } | undefined;
            content?: {
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: {
                    imageUrl?: string | undefined;
                } | undefined;
                assetManifest?: {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: {
                    [x: string]: string | undefined;
                } | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } | undefined;
            isThirdParty?: boolean | undefined;
            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
            featureMetadata?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            lensCreator?: {
                displayName?: string | undefined;
            } | undefined;
        }[] & ({
            id?: string | undefined;
            name?: string | undefined;
            vendorData?: {
                [x: string]: string | undefined;
            } | undefined;
            content?: {
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: {
                    imageUrl?: string | undefined;
                } | undefined;
                assetManifest?: {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: {
                    [x: string]: string | undefined;
                } | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } | undefined;
            isThirdParty?: boolean | undefined;
            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
            featureMetadata?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            lensCreator?: {
                displayName?: string | undefined;
            } | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            vendorData?: ({
                [x: string]: string | undefined;
            } & {
                [x: string]: string | undefined;
            } & Record<Exclude<keyof I["lenses"][number]["vendorData"], string | number>, never>) | undefined;
            content?: ({
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: {
                    imageUrl?: string | undefined;
                } | undefined;
                assetManifest?: {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: {
                    [x: string]: string | undefined;
                } | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } & {
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: ({
                    imageUrl?: string | undefined;
                } & {
                    imageUrl?: string | undefined;
                } & Record<Exclude<keyof I["lenses"][number]["content"]["preview"], "imageUrl">, never>) | undefined;
                assetManifest?: ({
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] & ({
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                } & {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                } & Record<Exclude<keyof I["lenses"][number]["content"]["assetManifest"][number], keyof import("./lens").LensAssetManifestItem>, never>)[] & Record<Exclude<keyof I["lenses"][number]["content"]["assetManifest"], keyof {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[]>, never>) | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: ({
                    [x: string]: string | undefined;
                } & {
                    [x: string]: string | undefined;
                } & Record<Exclude<keyof I["lenses"][number]["content"]["hintTranslations"], string | number>, never>) | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } & Record<Exclude<keyof I["lenses"][number]["content"], keyof import("./lens").Content>, never>) | undefined;
            isThirdParty?: boolean | undefined;
            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
            featureMetadata?: ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] & ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & Record<Exclude<keyof I["lenses"][number]["featureMetadata"][number], keyof import("../../google/protobuf/any").Any>, never>)[] & Record<Exclude<keyof I["lenses"][number]["featureMetadata"], keyof {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[]>, never>) | undefined;
            lensCreator?: ({
                displayName?: string | undefined;
            } & {
                displayName?: string | undefined;
            } & Record<Exclude<keyof I["lenses"][number]["lensCreator"], "displayName">, never>) | undefined;
        } & Record<Exclude<keyof I["lenses"][number], keyof Lens>, never>)[] & Record<Exclude<keyof I["lenses"], keyof {
            id?: string | undefined;
            name?: string | undefined;
            vendorData?: {
                [x: string]: string | undefined;
            } | undefined;
            content?: {
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: {
                    imageUrl?: string | undefined;
                } | undefined;
                assetManifest?: {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: {
                    [x: string]: string | undefined;
                } | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } | undefined;
            isThirdParty?: boolean | undefined;
            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
            featureMetadata?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            lensCreator?: {
                displayName?: string | undefined;
            } | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "lenses">, never>>(object: I): Envelope;
};
/** Export service exposes methods that relate to Export API */
export interface Export {
    /**
     * ExportLensesById exports CameraKit SDK compatible Lens data models
     * by given lens ids
     */
    ExportLensesById(request: ExportLensesByIdRequest): Promise<ExportLensesByIdResponse>;
}
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {
    $case: string;
} ? {
    [K in keyof Omit<T, "$case">]?: DeepPartial<T[K]>;
} & {
    $case: T["$case"];
} : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;
export {};
