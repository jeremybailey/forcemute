import { Subject } from "rxjs";
import { entries } from "../common/entries";
/**
 * The subsject is created and overrdien in initLogger().
 * The function has to be called each time new instance of CameraKit is bootstrapped.
 */
let logEntriesSubject = new Subject();
/**
 * This map associates log level names with their corresponding level value.
 * This means that a configured log level will match all log entries with a level value greater than
 * or equal to the configured value.
 */
export const logLevelMap = {
    error: 3,
    warn: 2,
    log: 1,
    info: 1,
    debug: 0,
};
/**
 * Initializes new logger subject.
 * @internal
 */
export function initLogger() {
    return (logEntriesSubject = new Subject());
}
/**
 * Gets logger for a given module.
 *
 * @internal
 *
 * @param module Module name.
 * @returns Logger instance.
 */
export function getLogger(module) {
    return entries(logLevelMap).reduce((logger, [level]) => {
        logger[level] = (...messages) => {
            logEntriesSubject.next({
                time: new Date(),
                module,
                level,
                messages,
            });
        };
        return logger;
    }, {});
}
//# sourceMappingURL=logger.js.map