{"version":3,"file":"metricsHandler.js","sourceRoot":"","sources":["../../src/metrics/metricsHandler.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,oCAAoC,CAAC;AAEhE,OAAO,EAAE,mCAAmC,EAAE,MAAM,iDAAiD,CAAC;AACtG,OAAO,EAAE,mBAAmB,EAAE,MAAM,iCAAiC,CAAC;AACtE,OAAO,EAAE,yBAAyB,EAAE,MAAM,iCAAiC,CAAC;AAE5E,MAAM,4BAA4B,GAAG,IAAI,CAAC,CAAC,8CAA8C;AAEzF;;GAEG;AACH,MAAM,CAAC,MAAM,qBAAqB,GAAG,UAAU,CAC3C,gBAAgB,EAChB,CAAC,mCAAmC,CAAC,KAAK,CAAU,EACpD,CAAC,YAA0B,EAAE,EAAE;IAC3B,OAAO,IAAI,mBAAmB,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,yBAAyB,CAAC,4BAA4B,CAAC,CAAC;SACpG,OAAO,CAAC;AACjB,CAAC,CACJ,CAAC","sourcesContent":["import { Injectable } from \"../dependency-injection/Injectable\";\nimport { FetchHandler } from \"../handlers/defaultFetchHandler\";\nimport { cameraKitServiceFetchHandlerFactory } from \"../handlers/cameraKitServiceFetchHandlerFactory\";\nimport { HandlerChainBuilder } from \"../handlers/HandlerChainBuilder\";\nimport { createRateLimitingHandler } from \"../handlers/rateLimitingHandler\";\n\nconst METRIC_REQUEST_RATE_LIMIT_MS = 1000; // send at most one metric request per second.\n\n/**\n * @internal\n */\nexport const metricsHandlerFactory = Injectable(\n    \"metricsHandler\",\n    [cameraKitServiceFetchHandlerFactory.token] as const,\n    (fetchHandler: FetchHandler) => {\n        return new HandlerChainBuilder(fetchHandler).map(createRateLimitingHandler(METRIC_REQUEST_RATE_LIMIT_MS))\n            .handler;\n    }\n);\n"]}